-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2014.2
-- Copyright (C) 2014 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity HW_2DConv_Mmap_3 is
generic (
    C_S_AXI_USER_AXI4LITE_CONFIG_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_USER_AXI4LITE_CONFIG_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_USER_AXI_IN_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_USER_AXI_IN_ID_WIDTH : INTEGER := 1;
    C_M_AXI_USER_AXI_IN_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_USER_AXI_IN_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_USER_AXI_IN_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_USER_AXI_IN_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_USER_AXI_IN_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_USER_AXI_IN_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_USER_AXI_IN2_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_USER_AXI_IN2_ID_WIDTH : INTEGER := 1;
    C_M_AXI_USER_AXI_IN2_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_USER_AXI_IN2_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_USER_AXI_IN2_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_USER_AXI_IN2_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_USER_AXI_IN2_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_USER_AXI_IN2_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_USER_AXI_OUT_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_USER_AXI_OUT_ID_WIDTH : INTEGER := 1;
    C_M_AXI_USER_AXI_OUT_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_USER_AXI_OUT_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_USER_AXI_OUT_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_USER_AXI_OUT_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_USER_AXI_OUT_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_USER_AXI_OUT_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_USER_AXI_OUT2_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_USER_AXI_OUT2_ID_WIDTH : INTEGER := 1;
    C_M_AXI_USER_AXI_OUT2_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_USER_AXI_OUT2_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_USER_AXI_OUT2_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_USER_AXI_OUT2_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_USER_AXI_OUT2_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_USER_AXI_OUT2_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_USER_AXI_IN2_PROT_VALUE : INTEGER := 0;
    C_M_AXI_USER_AXI_OUT_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_USER_AXI_OUT_USER_VALUE : INTEGER := 0;
    C_M_AXI_USER_AXI_IN2_USER_VALUE : INTEGER := 0;
    C_M_AXI_USER_AXI_IN_PROT_VALUE : INTEGER := 0;
    C_M_AXI_USER_AXI_OUT2_PROT_VALUE : INTEGER := 0;
    C_M_AXI_USER_AXI_OUT2_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_USER_AXI_IN_USER_VALUE : INTEGER := 0;
    C_M_AXI_USER_AXI_OUT_PROT_VALUE : INTEGER := 0;
    C_M_AXI_USER_AXI_OUT2_USER_VALUE : INTEGER := 0;
    C_M_AXI_USER_AXI_IN2_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_USER_AXI_IN_CACHE_VALUE : INTEGER := 3 );
port (
    s_axi_user_axi4lite_config_AWVALID : IN STD_LOGIC;
    s_axi_user_axi4lite_config_AWREADY : OUT STD_LOGIC;
    s_axi_user_axi4lite_config_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_USER_AXI4LITE_CONFIG_ADDR_WIDTH-1 downto 0);
    s_axi_user_axi4lite_config_WVALID : IN STD_LOGIC;
    s_axi_user_axi4lite_config_WREADY : OUT STD_LOGIC;
    s_axi_user_axi4lite_config_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_USER_AXI4LITE_CONFIG_DATA_WIDTH-1 downto 0);
    s_axi_user_axi4lite_config_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_USER_AXI4LITE_CONFIG_DATA_WIDTH/8-1 downto 0);
    s_axi_user_axi4lite_config_ARVALID : IN STD_LOGIC;
    s_axi_user_axi4lite_config_ARREADY : OUT STD_LOGIC;
    s_axi_user_axi4lite_config_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_USER_AXI4LITE_CONFIG_ADDR_WIDTH-1 downto 0);
    s_axi_user_axi4lite_config_RVALID : OUT STD_LOGIC;
    s_axi_user_axi4lite_config_RREADY : IN STD_LOGIC;
    s_axi_user_axi4lite_config_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_USER_AXI4LITE_CONFIG_DATA_WIDTH-1 downto 0);
    s_axi_user_axi4lite_config_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_user_axi4lite_config_BVALID : OUT STD_LOGIC;
    s_axi_user_axi4lite_config_BREADY : IN STD_LOGIC;
    s_axi_user_axi4lite_config_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_user_axi_in_AWVALID : OUT STD_LOGIC;
    m_axi_user_axi_in_AWREADY : IN STD_LOGIC;
    m_axi_user_axi_in_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_IN_ADDR_WIDTH-1 downto 0);
    m_axi_user_axi_in_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_IN_ID_WIDTH-1 downto 0);
    m_axi_user_axi_in_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_user_axi_in_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_user_axi_in_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_user_axi_in_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_user_axi_in_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_user_axi_in_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_user_axi_in_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_user_axi_in_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_user_axi_in_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_IN_AWUSER_WIDTH-1 downto 0);
    m_axi_user_axi_in_WVALID : OUT STD_LOGIC;
    m_axi_user_axi_in_WREADY : IN STD_LOGIC;
    m_axi_user_axi_in_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_IN_DATA_WIDTH-1 downto 0);
    m_axi_user_axi_in_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_IN_DATA_WIDTH/8-1 downto 0);
    m_axi_user_axi_in_WLAST : OUT STD_LOGIC;
    m_axi_user_axi_in_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_IN_ID_WIDTH-1 downto 0);
    m_axi_user_axi_in_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_IN_WUSER_WIDTH-1 downto 0);
    m_axi_user_axi_in_ARVALID : OUT STD_LOGIC;
    m_axi_user_axi_in_ARREADY : IN STD_LOGIC;
    m_axi_user_axi_in_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_IN_ADDR_WIDTH-1 downto 0);
    m_axi_user_axi_in_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_IN_ID_WIDTH-1 downto 0);
    m_axi_user_axi_in_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_user_axi_in_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_user_axi_in_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_user_axi_in_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_user_axi_in_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_user_axi_in_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_user_axi_in_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_user_axi_in_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_user_axi_in_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_IN_ARUSER_WIDTH-1 downto 0);
    m_axi_user_axi_in_RVALID : IN STD_LOGIC;
    m_axi_user_axi_in_RREADY : OUT STD_LOGIC;
    m_axi_user_axi_in_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_IN_DATA_WIDTH-1 downto 0);
    m_axi_user_axi_in_RLAST : IN STD_LOGIC;
    m_axi_user_axi_in_RID : IN STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_IN_ID_WIDTH-1 downto 0);
    m_axi_user_axi_in_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_IN_RUSER_WIDTH-1 downto 0);
    m_axi_user_axi_in_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_user_axi_in_BVALID : IN STD_LOGIC;
    m_axi_user_axi_in_BREADY : OUT STD_LOGIC;
    m_axi_user_axi_in_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_user_axi_in_BID : IN STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_IN_ID_WIDTH-1 downto 0);
    m_axi_user_axi_in_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_IN_BUSER_WIDTH-1 downto 0);
    m_axi_user_axi_in2_AWVALID : OUT STD_LOGIC;
    m_axi_user_axi_in2_AWREADY : IN STD_LOGIC;
    m_axi_user_axi_in2_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_IN2_ADDR_WIDTH-1 downto 0);
    m_axi_user_axi_in2_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_IN2_ID_WIDTH-1 downto 0);
    m_axi_user_axi_in2_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_user_axi_in2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_user_axi_in2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_user_axi_in2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_user_axi_in2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_user_axi_in2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_user_axi_in2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_user_axi_in2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_user_axi_in2_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_IN2_AWUSER_WIDTH-1 downto 0);
    m_axi_user_axi_in2_WVALID : OUT STD_LOGIC;
    m_axi_user_axi_in2_WREADY : IN STD_LOGIC;
    m_axi_user_axi_in2_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_IN2_DATA_WIDTH-1 downto 0);
    m_axi_user_axi_in2_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_IN2_DATA_WIDTH/8-1 downto 0);
    m_axi_user_axi_in2_WLAST : OUT STD_LOGIC;
    m_axi_user_axi_in2_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_IN2_ID_WIDTH-1 downto 0);
    m_axi_user_axi_in2_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_IN2_WUSER_WIDTH-1 downto 0);
    m_axi_user_axi_in2_ARVALID : OUT STD_LOGIC;
    m_axi_user_axi_in2_ARREADY : IN STD_LOGIC;
    m_axi_user_axi_in2_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_IN2_ADDR_WIDTH-1 downto 0);
    m_axi_user_axi_in2_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_IN2_ID_WIDTH-1 downto 0);
    m_axi_user_axi_in2_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_user_axi_in2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_user_axi_in2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_user_axi_in2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_user_axi_in2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_user_axi_in2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_user_axi_in2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_user_axi_in2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_user_axi_in2_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_IN2_ARUSER_WIDTH-1 downto 0);
    m_axi_user_axi_in2_RVALID : IN STD_LOGIC;
    m_axi_user_axi_in2_RREADY : OUT STD_LOGIC;
    m_axi_user_axi_in2_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_IN2_DATA_WIDTH-1 downto 0);
    m_axi_user_axi_in2_RLAST : IN STD_LOGIC;
    m_axi_user_axi_in2_RID : IN STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_IN2_ID_WIDTH-1 downto 0);
    m_axi_user_axi_in2_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_IN2_RUSER_WIDTH-1 downto 0);
    m_axi_user_axi_in2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_user_axi_in2_BVALID : IN STD_LOGIC;
    m_axi_user_axi_in2_BREADY : OUT STD_LOGIC;
    m_axi_user_axi_in2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_user_axi_in2_BID : IN STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_IN2_ID_WIDTH-1 downto 0);
    m_axi_user_axi_in2_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_IN2_BUSER_WIDTH-1 downto 0);
    m_axi_user_axi_out_AWVALID : OUT STD_LOGIC;
    m_axi_user_axi_out_AWREADY : IN STD_LOGIC;
    m_axi_user_axi_out_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_OUT_ADDR_WIDTH-1 downto 0);
    m_axi_user_axi_out_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_OUT_ID_WIDTH-1 downto 0);
    m_axi_user_axi_out_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_user_axi_out_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_user_axi_out_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_user_axi_out_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_user_axi_out_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_user_axi_out_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_user_axi_out_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_user_axi_out_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_user_axi_out_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_OUT_AWUSER_WIDTH-1 downto 0);
    m_axi_user_axi_out_WVALID : OUT STD_LOGIC;
    m_axi_user_axi_out_WREADY : IN STD_LOGIC;
    m_axi_user_axi_out_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_OUT_DATA_WIDTH-1 downto 0);
    m_axi_user_axi_out_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_OUT_DATA_WIDTH/8-1 downto 0);
    m_axi_user_axi_out_WLAST : OUT STD_LOGIC;
    m_axi_user_axi_out_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_OUT_ID_WIDTH-1 downto 0);
    m_axi_user_axi_out_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_OUT_WUSER_WIDTH-1 downto 0);
    m_axi_user_axi_out_ARVALID : OUT STD_LOGIC;
    m_axi_user_axi_out_ARREADY : IN STD_LOGIC;
    m_axi_user_axi_out_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_OUT_ADDR_WIDTH-1 downto 0);
    m_axi_user_axi_out_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_OUT_ID_WIDTH-1 downto 0);
    m_axi_user_axi_out_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_user_axi_out_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_user_axi_out_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_user_axi_out_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_user_axi_out_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_user_axi_out_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_user_axi_out_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_user_axi_out_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_user_axi_out_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_OUT_ARUSER_WIDTH-1 downto 0);
    m_axi_user_axi_out_RVALID : IN STD_LOGIC;
    m_axi_user_axi_out_RREADY : OUT STD_LOGIC;
    m_axi_user_axi_out_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_OUT_DATA_WIDTH-1 downto 0);
    m_axi_user_axi_out_RLAST : IN STD_LOGIC;
    m_axi_user_axi_out_RID : IN STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_OUT_ID_WIDTH-1 downto 0);
    m_axi_user_axi_out_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_OUT_RUSER_WIDTH-1 downto 0);
    m_axi_user_axi_out_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_user_axi_out_BVALID : IN STD_LOGIC;
    m_axi_user_axi_out_BREADY : OUT STD_LOGIC;
    m_axi_user_axi_out_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_user_axi_out_BID : IN STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_OUT_ID_WIDTH-1 downto 0);
    m_axi_user_axi_out_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_OUT_BUSER_WIDTH-1 downto 0);
    m_axi_user_axi_out2_AWVALID : OUT STD_LOGIC;
    m_axi_user_axi_out2_AWREADY : IN STD_LOGIC;
    m_axi_user_axi_out2_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_OUT2_ADDR_WIDTH-1 downto 0);
    m_axi_user_axi_out2_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_OUT2_ID_WIDTH-1 downto 0);
    m_axi_user_axi_out2_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_user_axi_out2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_user_axi_out2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_user_axi_out2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_user_axi_out2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_user_axi_out2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_user_axi_out2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_user_axi_out2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_user_axi_out2_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_OUT2_AWUSER_WIDTH-1 downto 0);
    m_axi_user_axi_out2_WVALID : OUT STD_LOGIC;
    m_axi_user_axi_out2_WREADY : IN STD_LOGIC;
    m_axi_user_axi_out2_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_OUT2_DATA_WIDTH-1 downto 0);
    m_axi_user_axi_out2_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_OUT2_DATA_WIDTH/8-1 downto 0);
    m_axi_user_axi_out2_WLAST : OUT STD_LOGIC;
    m_axi_user_axi_out2_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_OUT2_ID_WIDTH-1 downto 0);
    m_axi_user_axi_out2_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_OUT2_WUSER_WIDTH-1 downto 0);
    m_axi_user_axi_out2_ARVALID : OUT STD_LOGIC;
    m_axi_user_axi_out2_ARREADY : IN STD_LOGIC;
    m_axi_user_axi_out2_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_OUT2_ADDR_WIDTH-1 downto 0);
    m_axi_user_axi_out2_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_OUT2_ID_WIDTH-1 downto 0);
    m_axi_user_axi_out2_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_user_axi_out2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_user_axi_out2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_user_axi_out2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_user_axi_out2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_user_axi_out2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_user_axi_out2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_user_axi_out2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_user_axi_out2_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_OUT2_ARUSER_WIDTH-1 downto 0);
    m_axi_user_axi_out2_RVALID : IN STD_LOGIC;
    m_axi_user_axi_out2_RREADY : OUT STD_LOGIC;
    m_axi_user_axi_out2_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_OUT2_DATA_WIDTH-1 downto 0);
    m_axi_user_axi_out2_RLAST : IN STD_LOGIC;
    m_axi_user_axi_out2_RID : IN STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_OUT2_ID_WIDTH-1 downto 0);
    m_axi_user_axi_out2_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_OUT2_RUSER_WIDTH-1 downto 0);
    m_axi_user_axi_out2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_user_axi_out2_BVALID : IN STD_LOGIC;
    m_axi_user_axi_out2_BREADY : OUT STD_LOGIC;
    m_axi_user_axi_out2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_user_axi_out2_BID : IN STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_OUT2_ID_WIDTH-1 downto 0);
    m_axi_user_axi_out2_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_USER_AXI_OUT2_BUSER_WIDTH-1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of HW_2DConv_Mmap_3 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "HW_2DConv_Mmap_3,hls_ip_2014_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160tfbg484-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=131153,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=0}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_pp0_stg0_fsm_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_st11_fsm_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_ST_pp1_stg0_fsm_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_st20_fsm_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_ST_pp2_stg0_fsm_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_ST_st34_fsm_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_ST_st35_fsm_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant C_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv33_20020 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000100000000000100000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv8_16 : STD_LOGIC_VECTOR (7 downto 0) := "00010110";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv18_20020 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000100000";
    constant ap_const_lv18_1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_const_lv9_1E2 : STD_LOGIC_VECTOR (8 downto 0) := "111100010";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv18_1E2 : STD_LOGIC_VECTOR (17 downto 0) := "000000000111100010";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv11_43E : STD_LOGIC_VECTOR (10 downto 0) := "10000111110";

    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal ap_ready : STD_LOGIC;
    signal pixel_in : STD_LOGIC_VECTOR (31 downto 0);
    signal pixel_in_0_data_reg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pixel_in_0_vld_reg : STD_LOGIC := '0';
    signal pixel_in_0_ack_out : STD_LOGIC;
    signal pixel_in2 : STD_LOGIC_VECTOR (31 downto 0);
    signal pixel_in2_0_data_reg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pixel_in2_0_vld_reg : STD_LOGIC := '0';
    signal pixel_in2_0_ack_out : STD_LOGIC;
    signal pixel_out : STD_LOGIC_VECTOR (31 downto 0);
    signal pixel_out_0_data_reg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pixel_out_0_vld_reg : STD_LOGIC := '0';
    signal pixel_out_0_ack_out : STD_LOGIC;
    signal pixel_out2 : STD_LOGIC_VECTOR (31 downto 0);
    signal pixel_out2_0_data_reg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pixel_out2_0_vld_reg : STD_LOGIC := '0';
    signal pixel_out2_0_ack_out : STD_LOGIC;
    signal addr_reserved : STD_LOGIC_VECTOR (31 downto 0);
    signal HW_2DConv_Mmap_3_user_axi4lite_config_s_axi_U_ap_dummy_ce : STD_LOGIC;
    signal user_axi_in_AWVALID : STD_LOGIC;
    signal user_axi_in_AWREADY : STD_LOGIC;
    signal user_axi_in_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal user_axi_in_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal user_axi_in_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal user_axi_in_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal user_axi_in_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal user_axi_in_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal user_axi_in_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal user_axi_in_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal user_axi_in_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal user_axi_in_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal user_axi_in_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal user_axi_in_WVALID : STD_LOGIC;
    signal user_axi_in_WREADY : STD_LOGIC;
    signal user_axi_in_WDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal user_axi_in_WSTRB : STD_LOGIC_VECTOR (0 downto 0);
    signal user_axi_in_WLAST : STD_LOGIC;
    signal user_axi_in_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal user_axi_in_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal user_axi_in_ARVALID : STD_LOGIC;
    signal user_axi_in_ARREADY : STD_LOGIC;
    signal user_axi_in_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal user_axi_in_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal user_axi_in_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal user_axi_in_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal user_axi_in_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal user_axi_in_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal user_axi_in_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal user_axi_in_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal user_axi_in_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal user_axi_in_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal user_axi_in_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal user_axi_in_RVALID : STD_LOGIC;
    signal user_axi_in_RREADY : STD_LOGIC;
    signal user_axi_in_RDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal user_axi_in_RLAST : STD_LOGIC;
    signal user_axi_in_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal user_axi_in_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal user_axi_in_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal user_axi_in_BVALID : STD_LOGIC;
    signal user_axi_in_BREADY : STD_LOGIC;
    signal user_axi_in_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal user_axi_in_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal user_axi_in_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal HW_2DConv_Mmap_3_user_axi_in_m_axi_U_ap_dummy_ce : STD_LOGIC;
    signal user_axi_in2_AWVALID : STD_LOGIC;
    signal user_axi_in2_AWREADY : STD_LOGIC;
    signal user_axi_in2_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal user_axi_in2_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal user_axi_in2_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal user_axi_in2_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal user_axi_in2_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal user_axi_in2_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal user_axi_in2_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal user_axi_in2_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal user_axi_in2_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal user_axi_in2_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal user_axi_in2_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal user_axi_in2_WVALID : STD_LOGIC;
    signal user_axi_in2_WREADY : STD_LOGIC;
    signal user_axi_in2_WDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal user_axi_in2_WSTRB : STD_LOGIC_VECTOR (0 downto 0);
    signal user_axi_in2_WLAST : STD_LOGIC;
    signal user_axi_in2_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal user_axi_in2_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal user_axi_in2_ARVALID : STD_LOGIC;
    signal user_axi_in2_ARREADY : STD_LOGIC;
    signal user_axi_in2_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal user_axi_in2_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal user_axi_in2_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal user_axi_in2_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal user_axi_in2_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal user_axi_in2_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal user_axi_in2_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal user_axi_in2_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal user_axi_in2_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal user_axi_in2_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal user_axi_in2_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal user_axi_in2_RVALID : STD_LOGIC;
    signal user_axi_in2_RREADY : STD_LOGIC;
    signal user_axi_in2_RDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal user_axi_in2_RLAST : STD_LOGIC;
    signal user_axi_in2_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal user_axi_in2_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal user_axi_in2_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal user_axi_in2_BVALID : STD_LOGIC;
    signal user_axi_in2_BREADY : STD_LOGIC;
    signal user_axi_in2_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal user_axi_in2_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal user_axi_in2_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal HW_2DConv_Mmap_3_user_axi_in2_m_axi_U_ap_dummy_ce : STD_LOGIC;
    signal user_axi_out_AWVALID : STD_LOGIC;
    signal user_axi_out_AWREADY : STD_LOGIC;
    signal user_axi_out_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal user_axi_out_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal user_axi_out_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal user_axi_out_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal user_axi_out_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal user_axi_out_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal user_axi_out_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal user_axi_out_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal user_axi_out_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal user_axi_out_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal user_axi_out_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal user_axi_out_WVALID : STD_LOGIC;
    signal user_axi_out_WREADY : STD_LOGIC;
    signal user_axi_out_WDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal user_axi_out_WSTRB : STD_LOGIC_VECTOR (0 downto 0);
    signal user_axi_out_WLAST : STD_LOGIC;
    signal user_axi_out_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal user_axi_out_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal user_axi_out_ARVALID : STD_LOGIC;
    signal user_axi_out_ARREADY : STD_LOGIC;
    signal user_axi_out_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal user_axi_out_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal user_axi_out_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal user_axi_out_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal user_axi_out_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal user_axi_out_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal user_axi_out_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal user_axi_out_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal user_axi_out_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal user_axi_out_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal user_axi_out_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal user_axi_out_RVALID : STD_LOGIC;
    signal user_axi_out_RREADY : STD_LOGIC;
    signal user_axi_out_RDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal user_axi_out_RLAST : STD_LOGIC;
    signal user_axi_out_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal user_axi_out_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal user_axi_out_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal user_axi_out_BVALID : STD_LOGIC;
    signal user_axi_out_BREADY : STD_LOGIC;
    signal user_axi_out_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal user_axi_out_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal user_axi_out_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal HW_2DConv_Mmap_3_user_axi_out_m_axi_U_ap_dummy_ce : STD_LOGIC;
    signal user_axi_out2_AWVALID : STD_LOGIC;
    signal user_axi_out2_AWREADY : STD_LOGIC;
    signal user_axi_out2_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal user_axi_out2_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal user_axi_out2_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal user_axi_out2_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal user_axi_out2_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal user_axi_out2_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal user_axi_out2_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal user_axi_out2_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal user_axi_out2_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal user_axi_out2_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal user_axi_out2_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal user_axi_out2_WVALID : STD_LOGIC;
    signal user_axi_out2_WREADY : STD_LOGIC;
    signal user_axi_out2_WDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal user_axi_out2_WSTRB : STD_LOGIC_VECTOR (0 downto 0);
    signal user_axi_out2_WLAST : STD_LOGIC;
    signal user_axi_out2_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal user_axi_out2_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal user_axi_out2_ARVALID : STD_LOGIC;
    signal user_axi_out2_ARREADY : STD_LOGIC;
    signal user_axi_out2_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal user_axi_out2_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal user_axi_out2_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal user_axi_out2_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal user_axi_out2_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal user_axi_out2_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal user_axi_out2_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal user_axi_out2_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal user_axi_out2_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal user_axi_out2_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal user_axi_out2_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal user_axi_out2_RVALID : STD_LOGIC;
    signal user_axi_out2_RREADY : STD_LOGIC;
    signal user_axi_out2_RDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal user_axi_out2_RLAST : STD_LOGIC;
    signal user_axi_out2_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal user_axi_out2_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal user_axi_out2_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal user_axi_out2_BVALID : STD_LOGIC;
    signal user_axi_out2_BREADY : STD_LOGIC;
    signal user_axi_out2_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal user_axi_out2_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal user_axi_out2_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal HW_2DConv_Mmap_3_user_axi_out2_m_axi_U_ap_dummy_ce : STD_LOGIC;
    signal filter_buffer_2_2_s_reg_410 : STD_LOGIC_VECTOR (7 downto 0);
    signal filter_buffer_2_1_s_reg_422 : STD_LOGIC_VECTOR (7 downto 0);
    signal filter_buffer_2_0_s_reg_434 : STD_LOGIC_VECTOR (7 downto 0);
    signal filter_buffer_1_2_s_reg_446 : STD_LOGIC_VECTOR (7 downto 0);
    signal filter_buffer_1_1_s_reg_458 : STD_LOGIC_VECTOR (7 downto 0);
    signal filter_buffer_1_0_s_reg_470 : STD_LOGIC_VECTOR (7 downto 0);
    signal filter_buffer_0_2_s_reg_482 : STD_LOGIC_VECTOR (7 downto 0);
    signal filter_buffer_0_1_s_reg_494 : STD_LOGIC_VECTOR (7 downto 0);
    signal filter_buffer_0_0_s_reg_506 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar_reg_518 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal exitcond8_reg_3196 : STD_LOGIC_VECTOR (0 downto 0);
    signal isIter0_reg_3205 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_ioackin_user_axi_in_ARREADY : STD_LOGIC;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it5 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond8_reg_3196_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_710 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it6 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it7 : STD_LOGIC := '0';
    signal phi_mul_reg_530 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar1_reg_541 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppiten_pp1_it0 : STD_LOGIC := '0';
    signal exitcond_reg_3331 : STD_LOGIC_VECTOR (0 downto 0);
    signal isIter_reg_3340 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_ioackin_user_axi_in2_ARREADY : STD_LOGIC;
    signal ap_reg_ppiten_pp1_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it5 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond_reg_3331_pp1_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_755 : BOOLEAN;
    signal ap_reg_ppiten_pp1_it6 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it7 : STD_LOGIC := '0';
    signal phi_mul1_reg_553 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar_flatten_reg_564 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_reg_575 : STD_LOGIC_VECTOR (8 downto 0);
    signal c_reg_586 : STD_LOGIC_VECTOR (8 downto 0);
    signal reg_625 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppiten_pp2_it7 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp2_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp2_it1 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_3745 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppiten_pp2_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp2_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp2_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp2_it5 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp2_it6 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_811 : BOOLEAN;
    signal ap_reg_ppiten_pp2_it8 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_20_reg_3791 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_ioackin_user_axi_out_AWREADY : STD_LOGIC;
    signal ap_sig_ioackin_user_axi_out_WREADY : STD_LOGIC;
    signal ap_sig_ioackin_user_axi_out2_AWREADY : STD_LOGIC;
    signal ap_sig_ioackin_user_axi_out2_WREADY : STD_LOGIC;
    signal ap_reg_ppiten_pp2_it9 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp2_it10 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp2_it11 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_20_reg_3791_pp2_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_857 : BOOLEAN;
    signal ap_reg_ppiten_pp2_it12 : STD_LOGIC := '0';
    signal reg_630 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_cast_fu_635_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal pixel_out2_0_data_reg_temp: signed (32-1 downto 0);
    signal tmp_6_cast_reg_3164 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_9_cast_fu_639_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal pixel_out_0_data_reg_temp: signed (32-1 downto 0);
    signal tmp_9_cast_reg_3169 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_10_cast_fu_643_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal pixel_in2_0_data_reg_temp: signed (32-1 downto 0);
    signal tmp_10_cast_reg_3174 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_21_cast_fu_647_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal pixel_in_0_data_reg_temp: signed (32-1 downto 0);
    signal tmp_21_cast_reg_3179 : STD_LOGIC_VECTOR (32 downto 0);
    signal filter_base_reg_3184 : STD_LOGIC_VECTOR (31 downto 0);
    signal filter_base2_reg_3190 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond8_fu_683_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond8_reg_3196_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond8_reg_3196_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond8_reg_3196_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond8_reg_3196_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond8_reg_3196_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_next_fu_689_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_next_reg_3200 : STD_LOGIC_VECTOR (3 downto 0);
    signal isIter0_fu_695_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal next_mul_fu_701_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_t_reg_3214 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_p_t_reg_3214_pp0_it1 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_p_t_reg_3214_pp0_it2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_p_t_reg_3214_pp0_it3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_p_t_reg_3214_pp0_it4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_p_t_reg_3214_pp0_it5 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_p_t_reg_3214_pp0_it6 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_3_fu_723_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_3_reg_3223 : STD_LOGIC_VECTOR (1 downto 0);
    signal newSel_fu_873_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel3_fu_897_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal filter_buffer_2_0_1_fu_905_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel6_fu_929_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel8_fu_945_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal filter_buffer_1_0_1_fu_961_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel12_fu_993_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel15_fu_1017_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel17_fu_1033_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond_fu_1041_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_3331_pp1_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_3331_pp1_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_3331_pp1_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_3331_pp1_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_3331_pp1_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_next1_fu_1047_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_next1_reg_3335 : STD_LOGIC_VECTOR (3 downto 0);
    signal isIter_fu_1053_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal next_mul1_fu_1059_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_t2_reg_3349 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_p_t2_reg_3349_pp1_it1 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_p_t2_reg_3349_pp1_it2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_p_t2_reg_3349_pp1_it3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_p_t2_reg_3349_pp1_it4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_p_t2_reg_3349_pp1_it5 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_p_t2_reg_3349_pp1_it6 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_17_fu_1081_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_17_reg_3358 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_9_fu_1456_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_3475 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp35_fu_1468_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp35_reg_3480 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond7_fu_1474_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond7_reg_3485 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_1492_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_reg_3490 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp37_fu_1504_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp37_reg_3495 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond8_fu_1510_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond8_reg_3500 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_0_1_fu_1528_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_0_1_reg_3505 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp39_fu_1540_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp39_reg_3510 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond9_fu_1546_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond9_reg_3515 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_0_1_fu_1564_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_0_1_reg_3520 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp41_fu_1576_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp41_reg_3525 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond10_fu_1582_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond10_reg_3530 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_0_2_fu_1600_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_0_2_reg_3535 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp43_fu_1612_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp43_reg_3540 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond11_fu_1618_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond11_reg_3545 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_0_2_fu_1636_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_0_2_reg_3550 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp45_fu_1648_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp45_reg_3555 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond12_fu_1654_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond12_reg_3560 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_1_fu_1672_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_1_reg_3565 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp47_fu_1684_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp47_reg_3570 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond13_fu_1690_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond13_reg_3575 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_1_fu_1708_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_1_reg_3580 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp49_fu_1720_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp49_reg_3585 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond14_fu_1726_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond14_reg_3590 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_1_1_fu_1744_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_1_1_reg_3595 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp51_fu_1756_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp51_reg_3600 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond15_fu_1762_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond15_reg_3605 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_1_1_fu_1780_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_1_1_reg_3610 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp53_fu_1792_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp53_reg_3615 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond16_fu_1798_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond16_reg_3620 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_1_2_fu_1816_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_1_2_reg_3625 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp55_fu_1828_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp55_reg_3630 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond17_fu_1834_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond17_reg_3635 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_1_2_fu_1852_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_1_2_reg_3640 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp57_fu_1864_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp57_reg_3645 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond18_fu_1870_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond18_reg_3650 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_2_fu_1888_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_2_reg_3655 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp59_fu_1900_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp59_reg_3660 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond19_fu_1906_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond19_reg_3665 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_2_fu_1924_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_2_reg_3670 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp61_fu_1936_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp61_reg_3675 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond20_fu_1942_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond20_reg_3680 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_2_1_fu_1960_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_2_1_reg_3685 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp63_fu_1972_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp63_reg_3690 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond21_fu_1978_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond21_reg_3695 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_2_1_fu_1996_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_2_1_reg_3700 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp65_fu_2008_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp65_reg_3705 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond22_fu_2014_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond22_reg_3710 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_2_2_fu_2032_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_2_2_reg_3715 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp67_fu_2044_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp67_reg_3720 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond23_fu_2050_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond23_reg_3725 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_2_2_fu_2068_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_2_2_reg_3730 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp69_fu_2080_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp69_reg_3735 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond24_fu_2086_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond24_reg_3740 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_fu_2092_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_2098_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal c_mid2_fu_2110_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal c_mid2_reg_3754 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_reg_ppstg_c_mid2_reg_3754_pp2_it1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_reg_ppstg_c_mid2_reg_3754_pp2_it2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_reg_ppstg_c_mid2_reg_3754_pp2_it3 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_reg_ppstg_c_mid2_reg_3754_pp2_it4 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_reg_ppstg_c_mid2_reg_3754_pp2_it5 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_mid2_fu_2124_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_mid2_reg_3761 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_reg_ppstg_r_mid2_reg_3761_pp2_it1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_reg_ppstg_r_mid2_reg_3761_pp2_it2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_reg_ppstg_r_mid2_reg_3761_pp2_it3 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_reg_ppstg_r_mid2_reg_3761_pp2_it4 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_reg_ppstg_r_mid2_reg_3761_pp2_it5 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_fu_2142_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_3769 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_icmp_reg_3769_pp2_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_icmp_reg_3769_pp2_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_icmp_reg_3769_pp2_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_icmp_reg_3769_pp2_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_icmp_reg_3769_pp2_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_icmp_reg_3769_pp2_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_icmp_reg_3769_pp2_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_20_fu_2164_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_20_reg_3791_pp2_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_20_reg_3791_pp2_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_20_reg_3791_pp2_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_20_reg_3791_pp2_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_20_reg_3791_pp2_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_20_reg_3791_pp2_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_20_reg_3791_pp2_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_20_reg_3791_pp2_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_20_reg_3791_pp2_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_1_fu_2170_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal user_axi_in_addr_reg_3800 : STD_LOGIC_VECTOR (31 downto 0);
    signal user_axi_in2_addr_reg_3806 : STD_LOGIC_VECTOR (31 downto 0);
    signal line_buffer_M_1_addr_reg_3812 : STD_LOGIC_VECTOR (8 downto 0);
    signal line_buffer_M_0_addr_reg_3818 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_reg_ppstg_line_buffer_M_0_addr_reg_3818_pp2_it7 : STD_LOGIC_VECTOR (8 downto 0);
    signal line_buffer2_M_1_addr_reg_3824 : STD_LOGIC_VECTOR (8 downto 0);
    signal line_buffer2_M_0_addr_reg_3830 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_reg_ppstg_line_buffer2_M_0_addr_reg_3830_pp2_it7 : STD_LOGIC_VECTOR (8 downto 0);
    signal user_axi_out_addr_reg_3836 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_user_axi_out_addr_reg_3836_pp2_it7 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_user_axi_out_addr_reg_3836_pp2_it8 : STD_LOGIC_VECTOR (31 downto 0);
    signal user_axi_out2_addr_reg_3841 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_user_axi_out2_addr_reg_3841_pp2_it7 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_user_axi_out2_addr_reg_3841_pp2_it8 : STD_LOGIC_VECTOR (31 downto 0);
    signal line_buffer_M_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal return_value_reg_3846 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_M_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal return_value_1_reg_3851 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer2_M_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal return_value_2_reg_3856 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer2_M_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal return_value_3_reg_3861 : STD_LOGIC_VECTOR (7 downto 0);
    signal store_data_2_2_2_fu_3089_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal store_data_2_2_2_reg_3866 : STD_LOGIC_VECTOR (7 downto 0);
    signal store_data2_2_2_2_fu_3158_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal store_data2_2_2_2_reg_3871 : STD_LOGIC_VECTOR (7 downto 0);
    signal HW_2DConv_Mmap_3_ap_rst : STD_LOGIC;
    signal line_buffer_M_0_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal line_buffer_M_0_ce0 : STD_LOGIC;
    signal line_buffer_M_0_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal line_buffer_M_0_ce1 : STD_LOGIC;
    signal line_buffer_M_0_we1 : STD_LOGIC;
    signal line_buffer_M_0_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_M_1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal line_buffer_M_1_ce0 : STD_LOGIC;
    signal line_buffer_M_1_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal line_buffer_M_1_ce1 : STD_LOGIC;
    signal line_buffer_M_1_we1 : STD_LOGIC;
    signal line_buffer_M_1_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer2_M_0_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal line_buffer2_M_0_ce0 : STD_LOGIC;
    signal line_buffer2_M_0_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal line_buffer2_M_0_ce1 : STD_LOGIC;
    signal line_buffer2_M_0_we1 : STD_LOGIC;
    signal line_buffer2_M_0_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer2_M_1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal line_buffer2_M_1_ce0 : STD_LOGIC;
    signal line_buffer2_M_1_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal line_buffer2_M_1_ce1 : STD_LOGIC;
    signal line_buffer2_M_1_we1 : STD_LOGIC;
    signal line_buffer2_M_1_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar_phi_fu_522_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar1_phi_fu_545_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_phi_fu_579_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_7_fu_2256_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal pixel_in3_sum_cast_fu_657_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal pixel_in3_sum_fu_651_p2_temp: signed (33-1 downto 0);
    signal pixel_in25_sum_cast_fu_673_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal pixel_in25_sum_fu_667_p2_temp: signed (33-1 downto 0);
    signal pixel_in3_sum1_cast_fu_2203_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal pixel_in3_sum1_fu_2198_p2_temp: signed (33-1 downto 0);
    signal pixel_in25_sum1_cast_fu_2218_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal pixel_in25_sum1_fu_2213_p2_temp: signed (33-1 downto 0);
    signal pixel_out7_sum_cast_fu_2291_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal pixel_out7_sum_fu_2286_p2_temp: signed (33-1 downto 0);
    signal pixel_out29_sum_cast_fu_2306_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal pixel_out29_sum_fu_2301_p2_temp: signed (33-1 downto 0);
    signal ap_reg_ioackin_user_axi_in_ARREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_user_axi_in2_ARREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_user_axi_out_AWREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_user_axi_out_WREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_user_axi_out2_AWREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_user_axi_out2_WREADY : STD_LOGIC := '0';
    signal filter_buffer2_0_0_s_fu_176 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel35_fu_1391_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal filter_buffer2_0_1_s_fu_180 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel33_fu_1375_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal filter_buffer2_0_2_s_fu_184 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel30_fu_1351_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal filter_buffer2_1_0_s_fu_188 : STD_LOGIC_VECTOR (7 downto 0);
    signal filter_buffer2_1_0_1_fu_1319_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal filter_buffer2_1_1_s_fu_192 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel26_fu_1303_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal filter_buffer2_1_2_s_fu_196 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel24_fu_1287_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal filter_buffer2_2_0_s_fu_200 : STD_LOGIC_VECTOR (7 downto 0);
    signal filter_buffer2_2_0_1_fu_1263_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal filter_buffer2_2_1_s_fu_204 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel21_fu_1255_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal filter_buffer2_2_2_s_fu_208 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel18_fu_1231_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buffer_M_0_0_2_fu_212 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buffer_M_0_0_1_fu_2485_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buffer_M_0_0_fu_216 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buffer_M_0_1_3_fu_2478_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buffer_M_0_1_fu_220 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buffer_M_0_2_fu_2472_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buffer_M_1_0_2_fu_224 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buffer_M_1_0_1_fu_2465_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buffer_M_1_0_fu_228 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buffer_M_1_1_3_fu_2458_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buffer_M_1_1_fu_232 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buffer_M_1_2_fu_2452_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buffer_M_2_0_2_fu_236 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buffer_M_2_0_1_fu_2445_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buffer_M_2_0_fu_240 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buffer_M_2_1_3_fu_2438_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buffer_M_2_1_fu_244 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buffer_M_2_2_fu_2431_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buffer2_M_0_0_2_fu_248 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buffer2_M_0_0_1_fu_2424_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buffer2_M_0_0_fu_252 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buffer2_M_0_1_3_fu_2417_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buffer2_M_0_1_fu_256 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buffer2_M_0_2_fu_2411_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buffer2_M_1_0_2_fu_260 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buffer2_M_1_0_1_fu_2404_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buffer2_M_1_0_fu_264 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buffer2_M_1_1_3_fu_2397_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buffer2_M_1_1_fu_268 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buffer2_M_1_2_fu_2391_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buffer2_M_2_0_2_fu_272 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buffer2_M_2_0_1_fu_2384_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buffer2_M_2_0_fu_276 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buffer2_M_2_1_3_fu_2377_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buffer2_M_2_1_fu_280 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buffer2_M_2_2_fu_2370_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal pixel_in3_sum_fu_651_p0 : STD_LOGIC_VECTOR (32 downto 0);
    signal pixel_in3_sum_fu_651_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal pixel_in25_sum_fu_667_p0 : STD_LOGIC_VECTOR (32 downto 0);
    signal pixel_in25_sum_fu_667_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_fu_707_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_707_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_707_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sel_tmp3_fu_732_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_fu_737_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_742_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_727_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_fu_754_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_765_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_782_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp10_fu_787_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp11_fu_792_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_804_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal sel_tmp13_fu_814_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp15_fu_825_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp14_fu_819_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_808_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp12_fu_798_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_776_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_fu_770_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_759_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_748_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_831_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_fu_837_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_fu_843_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_fu_849_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_fu_855_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond5_fu_861_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond6_fu_867_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel1_fu_881_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel2_fu_889_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel4_fu_913_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel5_fu_921_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel7_fu_937_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp16_fu_953_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel9_fu_969_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel10_fu_977_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel11_fu_985_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel13_fu_1001_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel14_fu_1009_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel16_fu_1025_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1065_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1065_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1065_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sel_tmp18_fu_1090_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp19_fu_1095_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp6_fu_1100_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp17_fu_1085_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp21_fu_1112_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp23_fu_1123_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp26_fu_1140_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp27_fu_1145_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp28_fu_1150_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_1162_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal sel_tmp30_fu_1172_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp32_fu_1183_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp31_fu_1177_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_1166_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp29_fu_1156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp25_fu_1134_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp24_fu_1128_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp22_fu_1117_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp20_fu_1106_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond25_fu_1189_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond26_fu_1195_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond27_fu_1201_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond28_fu_1207_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond29_fu_1213_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond30_fu_1219_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond31_fu_1225_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel19_fu_1239_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel20_fu_1247_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel22_fu_1271_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel23_fu_1279_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel25_fu_1295_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp33_fu_1311_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel27_fu_1327_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel28_fu_1335_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel29_fu_1343_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel31_fu_1359_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel32_fu_1367_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel34_fu_1383_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_fu_1444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_1450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp34_fu_1462_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_1480_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_1486_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp36_fu_1498_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_0_1_fu_1516_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_0_1_fu_1522_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp38_fu_1534_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_0_1_fu_1552_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_0_1_fu_1558_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp40_fu_1570_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_0_2_fu_1588_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_0_2_fu_1594_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp42_fu_1606_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_0_2_fu_1624_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_0_2_fu_1630_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp44_fu_1642_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_1_fu_1660_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_1_fu_1666_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp46_fu_1678_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_1_fu_1696_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_1_fu_1702_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp48_fu_1714_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_1_1_fu_1732_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_1_1_fu_1738_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp50_fu_1750_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_1_1_fu_1768_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_1_1_fu_1774_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp52_fu_1786_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_1_2_fu_1804_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_1_2_fu_1810_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp54_fu_1822_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_1_2_fu_1840_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_1_2_fu_1846_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp56_fu_1858_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_2_fu_1876_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_2_fu_1882_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp58_fu_1894_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_2_fu_1912_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_2_fu_1918_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp60_fu_1930_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_2_1_fu_1948_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_2_1_fu_1954_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp62_fu_1966_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_2_1_fu_1984_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_2_1_fu_1990_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp64_fu_2002_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_2_2_fu_2020_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_2_2_fu_2026_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp66_fu_2038_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_2_2_fu_2056_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_2_2_fu_2062_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp68_fu_2074_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond1_fu_2104_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_s_fu_2118_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_18_fu_2132_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_19_fu_2148_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp1_fu_2158_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_2179_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_1_fu_2179_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_7_cast_fu_2185_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_sum_fu_2188_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_sum_cast_cast_fu_2194_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal pixel_in3_sum1_fu_2198_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal pixel_in25_sum1_fu_2213_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_shl_fu_2228_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl5_fu_2239_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl_cast_fu_2235_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_shl5_cast_fu_2246_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal col_assign_cast_fu_2263_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp29_fu_2266_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal addconv_fu_2276_p0 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp29_fu_2266_p2_temp: signed (11-1 downto 0);
    signal tmp_4_fu_2250_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal addconv_fu_2276_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal pixel_out7_sum_fu_2286_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_sum2_cast_fu_2282_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal addconv_fu_2276_p2_temp: signed (19-1 downto 0);
    signal pixel_out7_sum_fu_2286_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal pixel_out29_sum_fu_2301_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal pixel_out29_sum_fu_2301_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal res_3_fu_2582_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal res_fu_2588_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel36_fu_2594_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel37_fu_2601_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel39_fu_2615_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel40_fu_2622_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal res_3_0_1_fu_2636_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal res_0_1_fu_2642_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel42_fu_2648_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel43_fu_2655_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel45_fu_2669_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel46_fu_2676_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal res_3_0_2_fu_2690_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal res_0_2_fu_2696_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel48_fu_2702_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel49_fu_2709_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel51_fu_2723_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel52_fu_2730_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal res_3_1_fu_2744_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal res_1_fu_2750_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel54_fu_2756_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel55_fu_2763_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel57_fu_2777_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel58_fu_2784_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal res_3_1_1_fu_2798_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal res_1_1_fu_2804_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel60_fu_2810_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel61_fu_2817_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel63_fu_2831_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel64_fu_2838_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal res_3_1_2_fu_2852_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal res_1_2_fu_2858_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel66_fu_2864_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel67_fu_2871_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel69_fu_2885_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel70_fu_2892_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal res_3_2_fu_2906_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal res_s_fu_2912_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel72_fu_2918_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel73_fu_2925_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel75_fu_2939_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel76_fu_2946_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal res_3_2_1_fu_2960_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal res_235_1_fu_2966_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel78_fu_2972_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel79_fu_2979_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel81_fu_2993_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel82_fu_3000_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal res_3_2_2_fu_3014_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal res_235_2_fu_3020_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel84_fu_3026_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel85_fu_3033_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel44_fu_2662_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel38_fu_2608_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel50_fu_2716_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel56_fu_2770_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp16_fu_3053_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp15_fu_3047_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel62_fu_2824_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel68_fu_2878_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel80_fu_2986_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel86_fu_3040_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp19_fu_3071_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel74_fu_2932_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp20_fu_3077_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp18_fu_3065_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp21_fu_3083_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp17_fu_3059_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel87_fu_3095_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel88_fu_3102_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel47_fu_2683_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel41_fu_2629_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel53_fu_2737_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel59_fu_2791_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp23_fu_3122_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp22_fu_3116_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel65_fu_2845_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel71_fu_2899_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel83_fu_3007_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel89_fu_3109_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp26_fu_3140_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel77_fu_2953_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp27_fu_3146_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp25_fu_3134_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp28_fu_3152_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp24_fu_3128_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_707_ce : STD_LOGIC;
    signal grp_fu_1065_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_1_fu_2179_p00 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_sig_bdd_3091 : BOOLEAN;
    signal ap_sig_bdd_3090 : BOOLEAN;
    signal ap_sig_bdd_3094 : BOOLEAN;
    signal ap_sig_bdd_3096 : BOOLEAN;
    signal ap_sig_bdd_3098 : BOOLEAN;
    signal ap_sig_bdd_1341 : BOOLEAN;
    signal ap_sig_bdd_1328 : BOOLEAN;
    signal ap_sig_bdd_1315 : BOOLEAN;

    component HW_2DConv_Mmap_3_urem_4ns_4ns_4_7 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component HW_2DConv_Mmap_3_line_buffer_M_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component HW_2DConv_Mmap_3_user_axi4lite_config_s_axi IS
    generic (
        C_ADDR_WIDTH : INTEGER;
        C_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESETN : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        pixel_in : OUT STD_LOGIC_VECTOR (31 downto 0);
        pixel_in2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        pixel_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        pixel_out2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        addr_reserved : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component HW_2DConv_Mmap_3_user_axi_in_m_axi IS
    generic (
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        C_ID_WIDTH : INTEGER;
        C_ADDR_WIDTH : INTEGER;
        C_DATA_WIDTH : INTEGER;
        C_AWUSER_WIDTH : INTEGER;
        C_ARUSER_WIDTH : INTEGER;
        C_WUSER_WIDTH : INTEGER;
        C_RUSER_WIDTH : INTEGER;
        C_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESETN : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component HW_2DConv_Mmap_3_user_axi_in2_m_axi IS
    generic (
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        C_ID_WIDTH : INTEGER;
        C_ADDR_WIDTH : INTEGER;
        C_DATA_WIDTH : INTEGER;
        C_AWUSER_WIDTH : INTEGER;
        C_ARUSER_WIDTH : INTEGER;
        C_WUSER_WIDTH : INTEGER;
        C_RUSER_WIDTH : INTEGER;
        C_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESETN : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component HW_2DConv_Mmap_3_user_axi_out_m_axi IS
    generic (
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        C_ID_WIDTH : INTEGER;
        C_ADDR_WIDTH : INTEGER;
        C_DATA_WIDTH : INTEGER;
        C_AWUSER_WIDTH : INTEGER;
        C_ARUSER_WIDTH : INTEGER;
        C_WUSER_WIDTH : INTEGER;
        C_RUSER_WIDTH : INTEGER;
        C_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESETN : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component HW_2DConv_Mmap_3_user_axi_out2_m_axi IS
    generic (
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        C_ID_WIDTH : INTEGER;
        C_ADDR_WIDTH : INTEGER;
        C_DATA_WIDTH : INTEGER;
        C_AWUSER_WIDTH : INTEGER;
        C_ARUSER_WIDTH : INTEGER;
        C_WUSER_WIDTH : INTEGER;
        C_RUSER_WIDTH : INTEGER;
        C_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESETN : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    HW_2DConv_Mmap_3_user_axi4lite_config_s_axi_U : component HW_2DConv_Mmap_3_user_axi4lite_config_s_axi
    generic map (
        C_ADDR_WIDTH => C_S_AXI_USER_AXI4LITE_CONFIG_ADDR_WIDTH,
        C_DATA_WIDTH => C_S_AXI_USER_AXI4LITE_CONFIG_DATA_WIDTH)
    port map (
        AWVALID => s_axi_user_axi4lite_config_AWVALID,
        AWREADY => s_axi_user_axi4lite_config_AWREADY,
        AWADDR => s_axi_user_axi4lite_config_AWADDR,
        WVALID => s_axi_user_axi4lite_config_WVALID,
        WREADY => s_axi_user_axi4lite_config_WREADY,
        WDATA => s_axi_user_axi4lite_config_WDATA,
        WSTRB => s_axi_user_axi4lite_config_WSTRB,
        ARVALID => s_axi_user_axi4lite_config_ARVALID,
        ARREADY => s_axi_user_axi4lite_config_ARREADY,
        ARADDR => s_axi_user_axi4lite_config_ARADDR,
        RVALID => s_axi_user_axi4lite_config_RVALID,
        RREADY => s_axi_user_axi4lite_config_RREADY,
        RDATA => s_axi_user_axi4lite_config_RDATA,
        RRESP => s_axi_user_axi4lite_config_RRESP,
        BVALID => s_axi_user_axi4lite_config_BVALID,
        BREADY => s_axi_user_axi4lite_config_BREADY,
        BRESP => s_axi_user_axi4lite_config_BRESP,
        ACLK => ap_clk,
        ARESETN => ap_rst_n,
        ACLK_EN => HW_2DConv_Mmap_3_user_axi4lite_config_s_axi_U_ap_dummy_ce,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        pixel_in => pixel_in,
        pixel_in2 => pixel_in2,
        pixel_out => pixel_out,
        pixel_out2 => pixel_out2,
        addr_reserved => addr_reserved);

    HW_2DConv_Mmap_3_user_axi_in_m_axi_U : component HW_2DConv_Mmap_3_user_axi_in_m_axi
    generic map (
        USER_DW => 8,
        USER_AW => 32,
        USER_MAXREQS => 5,
        C_ID_WIDTH => C_M_AXI_USER_AXI_IN_ID_WIDTH,
        C_ADDR_WIDTH => C_M_AXI_USER_AXI_IN_ADDR_WIDTH,
        C_DATA_WIDTH => C_M_AXI_USER_AXI_IN_DATA_WIDTH,
        C_AWUSER_WIDTH => C_M_AXI_USER_AXI_IN_AWUSER_WIDTH,
        C_ARUSER_WIDTH => C_M_AXI_USER_AXI_IN_ARUSER_WIDTH,
        C_WUSER_WIDTH => C_M_AXI_USER_AXI_IN_WUSER_WIDTH,
        C_RUSER_WIDTH => C_M_AXI_USER_AXI_IN_RUSER_WIDTH,
        C_BUSER_WIDTH => C_M_AXI_USER_AXI_IN_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_USER_AXI_IN_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_USER_AXI_IN_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_USER_AXI_IN_CACHE_VALUE)
    port map (
        AWVALID => m_axi_user_axi_in_AWVALID,
        AWREADY => m_axi_user_axi_in_AWREADY,
        AWADDR => m_axi_user_axi_in_AWADDR,
        AWID => m_axi_user_axi_in_AWID,
        AWLEN => m_axi_user_axi_in_AWLEN,
        AWSIZE => m_axi_user_axi_in_AWSIZE,
        AWBURST => m_axi_user_axi_in_AWBURST,
        AWLOCK => m_axi_user_axi_in_AWLOCK,
        AWCACHE => m_axi_user_axi_in_AWCACHE,
        AWPROT => m_axi_user_axi_in_AWPROT,
        AWQOS => m_axi_user_axi_in_AWQOS,
        AWREGION => m_axi_user_axi_in_AWREGION,
        AWUSER => m_axi_user_axi_in_AWUSER,
        WVALID => m_axi_user_axi_in_WVALID,
        WREADY => m_axi_user_axi_in_WREADY,
        WDATA => m_axi_user_axi_in_WDATA,
        WSTRB => m_axi_user_axi_in_WSTRB,
        WLAST => m_axi_user_axi_in_WLAST,
        WID => m_axi_user_axi_in_WID,
        WUSER => m_axi_user_axi_in_WUSER,
        ARVALID => m_axi_user_axi_in_ARVALID,
        ARREADY => m_axi_user_axi_in_ARREADY,
        ARADDR => m_axi_user_axi_in_ARADDR,
        ARID => m_axi_user_axi_in_ARID,
        ARLEN => m_axi_user_axi_in_ARLEN,
        ARSIZE => m_axi_user_axi_in_ARSIZE,
        ARBURST => m_axi_user_axi_in_ARBURST,
        ARLOCK => m_axi_user_axi_in_ARLOCK,
        ARCACHE => m_axi_user_axi_in_ARCACHE,
        ARPROT => m_axi_user_axi_in_ARPROT,
        ARQOS => m_axi_user_axi_in_ARQOS,
        ARREGION => m_axi_user_axi_in_ARREGION,
        ARUSER => m_axi_user_axi_in_ARUSER,
        RVALID => m_axi_user_axi_in_RVALID,
        RREADY => m_axi_user_axi_in_RREADY,
        RDATA => m_axi_user_axi_in_RDATA,
        RLAST => m_axi_user_axi_in_RLAST,
        RID => m_axi_user_axi_in_RID,
        RUSER => m_axi_user_axi_in_RUSER,
        RRESP => m_axi_user_axi_in_RRESP,
        BVALID => m_axi_user_axi_in_BVALID,
        BREADY => m_axi_user_axi_in_BREADY,
        BRESP => m_axi_user_axi_in_BRESP,
        BID => m_axi_user_axi_in_BID,
        BUSER => m_axi_user_axi_in_BUSER,
        ACLK => ap_clk,
        ARESETN => ap_rst_n,
        ACLK_EN => HW_2DConv_Mmap_3_user_axi_in_m_axi_U_ap_dummy_ce,
        I_ARVALID => user_axi_in_ARVALID,
        I_ARREADY => user_axi_in_ARREADY,
        I_ARADDR => user_axi_in_ARADDR,
        I_ARID => user_axi_in_ARID,
        I_ARLEN => user_axi_in_ARLEN,
        I_ARSIZE => user_axi_in_ARSIZE,
        I_ARLOCK => user_axi_in_ARLOCK,
        I_ARCACHE => user_axi_in_ARCACHE,
        I_ARQOS => user_axi_in_ARQOS,
        I_ARPROT => user_axi_in_ARPROT,
        I_ARUSER => user_axi_in_ARUSER,
        I_ARBURST => user_axi_in_ARBURST,
        I_ARREGION => user_axi_in_ARREGION,
        I_RVALID => user_axi_in_RVALID,
        I_RREADY => user_axi_in_RREADY,
        I_RDATA => user_axi_in_RDATA,
        I_RID => user_axi_in_RID,
        I_RUSER => user_axi_in_RUSER,
        I_RRESP => user_axi_in_RRESP,
        I_RLAST => user_axi_in_RLAST,
        I_AWVALID => user_axi_in_AWVALID,
        I_AWREADY => user_axi_in_AWREADY,
        I_AWADDR => user_axi_in_AWADDR,
        I_AWID => user_axi_in_AWID,
        I_AWLEN => user_axi_in_AWLEN,
        I_AWSIZE => user_axi_in_AWSIZE,
        I_AWLOCK => user_axi_in_AWLOCK,
        I_AWCACHE => user_axi_in_AWCACHE,
        I_AWQOS => user_axi_in_AWQOS,
        I_AWPROT => user_axi_in_AWPROT,
        I_AWUSER => user_axi_in_AWUSER,
        I_AWBURST => user_axi_in_AWBURST,
        I_AWREGION => user_axi_in_AWREGION,
        I_WVALID => user_axi_in_WVALID,
        I_WREADY => user_axi_in_WREADY,
        I_WDATA => user_axi_in_WDATA,
        I_WID => user_axi_in_WID,
        I_WUSER => user_axi_in_WUSER,
        I_WLAST => user_axi_in_WLAST,
        I_WSTRB => user_axi_in_WSTRB,
        I_BVALID => user_axi_in_BVALID,
        I_BREADY => user_axi_in_BREADY,
        I_BRESP => user_axi_in_BRESP,
        I_BID => user_axi_in_BID,
        I_BUSER => user_axi_in_BUSER);

    HW_2DConv_Mmap_3_user_axi_in2_m_axi_U : component HW_2DConv_Mmap_3_user_axi_in2_m_axi
    generic map (
        USER_DW => 8,
        USER_AW => 32,
        USER_MAXREQS => 5,
        C_ID_WIDTH => C_M_AXI_USER_AXI_IN2_ID_WIDTH,
        C_ADDR_WIDTH => C_M_AXI_USER_AXI_IN2_ADDR_WIDTH,
        C_DATA_WIDTH => C_M_AXI_USER_AXI_IN2_DATA_WIDTH,
        C_AWUSER_WIDTH => C_M_AXI_USER_AXI_IN2_AWUSER_WIDTH,
        C_ARUSER_WIDTH => C_M_AXI_USER_AXI_IN2_ARUSER_WIDTH,
        C_WUSER_WIDTH => C_M_AXI_USER_AXI_IN2_WUSER_WIDTH,
        C_RUSER_WIDTH => C_M_AXI_USER_AXI_IN2_RUSER_WIDTH,
        C_BUSER_WIDTH => C_M_AXI_USER_AXI_IN2_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_USER_AXI_IN2_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_USER_AXI_IN2_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_USER_AXI_IN2_CACHE_VALUE)
    port map (
        AWVALID => m_axi_user_axi_in2_AWVALID,
        AWREADY => m_axi_user_axi_in2_AWREADY,
        AWADDR => m_axi_user_axi_in2_AWADDR,
        AWID => m_axi_user_axi_in2_AWID,
        AWLEN => m_axi_user_axi_in2_AWLEN,
        AWSIZE => m_axi_user_axi_in2_AWSIZE,
        AWBURST => m_axi_user_axi_in2_AWBURST,
        AWLOCK => m_axi_user_axi_in2_AWLOCK,
        AWCACHE => m_axi_user_axi_in2_AWCACHE,
        AWPROT => m_axi_user_axi_in2_AWPROT,
        AWQOS => m_axi_user_axi_in2_AWQOS,
        AWREGION => m_axi_user_axi_in2_AWREGION,
        AWUSER => m_axi_user_axi_in2_AWUSER,
        WVALID => m_axi_user_axi_in2_WVALID,
        WREADY => m_axi_user_axi_in2_WREADY,
        WDATA => m_axi_user_axi_in2_WDATA,
        WSTRB => m_axi_user_axi_in2_WSTRB,
        WLAST => m_axi_user_axi_in2_WLAST,
        WID => m_axi_user_axi_in2_WID,
        WUSER => m_axi_user_axi_in2_WUSER,
        ARVALID => m_axi_user_axi_in2_ARVALID,
        ARREADY => m_axi_user_axi_in2_ARREADY,
        ARADDR => m_axi_user_axi_in2_ARADDR,
        ARID => m_axi_user_axi_in2_ARID,
        ARLEN => m_axi_user_axi_in2_ARLEN,
        ARSIZE => m_axi_user_axi_in2_ARSIZE,
        ARBURST => m_axi_user_axi_in2_ARBURST,
        ARLOCK => m_axi_user_axi_in2_ARLOCK,
        ARCACHE => m_axi_user_axi_in2_ARCACHE,
        ARPROT => m_axi_user_axi_in2_ARPROT,
        ARQOS => m_axi_user_axi_in2_ARQOS,
        ARREGION => m_axi_user_axi_in2_ARREGION,
        ARUSER => m_axi_user_axi_in2_ARUSER,
        RVALID => m_axi_user_axi_in2_RVALID,
        RREADY => m_axi_user_axi_in2_RREADY,
        RDATA => m_axi_user_axi_in2_RDATA,
        RLAST => m_axi_user_axi_in2_RLAST,
        RID => m_axi_user_axi_in2_RID,
        RUSER => m_axi_user_axi_in2_RUSER,
        RRESP => m_axi_user_axi_in2_RRESP,
        BVALID => m_axi_user_axi_in2_BVALID,
        BREADY => m_axi_user_axi_in2_BREADY,
        BRESP => m_axi_user_axi_in2_BRESP,
        BID => m_axi_user_axi_in2_BID,
        BUSER => m_axi_user_axi_in2_BUSER,
        ACLK => ap_clk,
        ARESETN => ap_rst_n,
        ACLK_EN => HW_2DConv_Mmap_3_user_axi_in2_m_axi_U_ap_dummy_ce,
        I_ARVALID => user_axi_in2_ARVALID,
        I_ARREADY => user_axi_in2_ARREADY,
        I_ARADDR => user_axi_in2_ARADDR,
        I_ARID => user_axi_in2_ARID,
        I_ARLEN => user_axi_in2_ARLEN,
        I_ARSIZE => user_axi_in2_ARSIZE,
        I_ARLOCK => user_axi_in2_ARLOCK,
        I_ARCACHE => user_axi_in2_ARCACHE,
        I_ARQOS => user_axi_in2_ARQOS,
        I_ARPROT => user_axi_in2_ARPROT,
        I_ARUSER => user_axi_in2_ARUSER,
        I_ARBURST => user_axi_in2_ARBURST,
        I_ARREGION => user_axi_in2_ARREGION,
        I_RVALID => user_axi_in2_RVALID,
        I_RREADY => user_axi_in2_RREADY,
        I_RDATA => user_axi_in2_RDATA,
        I_RID => user_axi_in2_RID,
        I_RUSER => user_axi_in2_RUSER,
        I_RRESP => user_axi_in2_RRESP,
        I_RLAST => user_axi_in2_RLAST,
        I_AWVALID => user_axi_in2_AWVALID,
        I_AWREADY => user_axi_in2_AWREADY,
        I_AWADDR => user_axi_in2_AWADDR,
        I_AWID => user_axi_in2_AWID,
        I_AWLEN => user_axi_in2_AWLEN,
        I_AWSIZE => user_axi_in2_AWSIZE,
        I_AWLOCK => user_axi_in2_AWLOCK,
        I_AWCACHE => user_axi_in2_AWCACHE,
        I_AWQOS => user_axi_in2_AWQOS,
        I_AWPROT => user_axi_in2_AWPROT,
        I_AWUSER => user_axi_in2_AWUSER,
        I_AWBURST => user_axi_in2_AWBURST,
        I_AWREGION => user_axi_in2_AWREGION,
        I_WVALID => user_axi_in2_WVALID,
        I_WREADY => user_axi_in2_WREADY,
        I_WDATA => user_axi_in2_WDATA,
        I_WID => user_axi_in2_WID,
        I_WUSER => user_axi_in2_WUSER,
        I_WLAST => user_axi_in2_WLAST,
        I_WSTRB => user_axi_in2_WSTRB,
        I_BVALID => user_axi_in2_BVALID,
        I_BREADY => user_axi_in2_BREADY,
        I_BRESP => user_axi_in2_BRESP,
        I_BID => user_axi_in2_BID,
        I_BUSER => user_axi_in2_BUSER);

    HW_2DConv_Mmap_3_user_axi_out_m_axi_U : component HW_2DConv_Mmap_3_user_axi_out_m_axi
    generic map (
        USER_DW => 8,
        USER_AW => 32,
        USER_MAXREQS => 5,
        C_ID_WIDTH => C_M_AXI_USER_AXI_OUT_ID_WIDTH,
        C_ADDR_WIDTH => C_M_AXI_USER_AXI_OUT_ADDR_WIDTH,
        C_DATA_WIDTH => C_M_AXI_USER_AXI_OUT_DATA_WIDTH,
        C_AWUSER_WIDTH => C_M_AXI_USER_AXI_OUT_AWUSER_WIDTH,
        C_ARUSER_WIDTH => C_M_AXI_USER_AXI_OUT_ARUSER_WIDTH,
        C_WUSER_WIDTH => C_M_AXI_USER_AXI_OUT_WUSER_WIDTH,
        C_RUSER_WIDTH => C_M_AXI_USER_AXI_OUT_RUSER_WIDTH,
        C_BUSER_WIDTH => C_M_AXI_USER_AXI_OUT_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_USER_AXI_OUT_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_USER_AXI_OUT_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_USER_AXI_OUT_CACHE_VALUE)
    port map (
        AWVALID => m_axi_user_axi_out_AWVALID,
        AWREADY => m_axi_user_axi_out_AWREADY,
        AWADDR => m_axi_user_axi_out_AWADDR,
        AWID => m_axi_user_axi_out_AWID,
        AWLEN => m_axi_user_axi_out_AWLEN,
        AWSIZE => m_axi_user_axi_out_AWSIZE,
        AWBURST => m_axi_user_axi_out_AWBURST,
        AWLOCK => m_axi_user_axi_out_AWLOCK,
        AWCACHE => m_axi_user_axi_out_AWCACHE,
        AWPROT => m_axi_user_axi_out_AWPROT,
        AWQOS => m_axi_user_axi_out_AWQOS,
        AWREGION => m_axi_user_axi_out_AWREGION,
        AWUSER => m_axi_user_axi_out_AWUSER,
        WVALID => m_axi_user_axi_out_WVALID,
        WREADY => m_axi_user_axi_out_WREADY,
        WDATA => m_axi_user_axi_out_WDATA,
        WSTRB => m_axi_user_axi_out_WSTRB,
        WLAST => m_axi_user_axi_out_WLAST,
        WID => m_axi_user_axi_out_WID,
        WUSER => m_axi_user_axi_out_WUSER,
        ARVALID => m_axi_user_axi_out_ARVALID,
        ARREADY => m_axi_user_axi_out_ARREADY,
        ARADDR => m_axi_user_axi_out_ARADDR,
        ARID => m_axi_user_axi_out_ARID,
        ARLEN => m_axi_user_axi_out_ARLEN,
        ARSIZE => m_axi_user_axi_out_ARSIZE,
        ARBURST => m_axi_user_axi_out_ARBURST,
        ARLOCK => m_axi_user_axi_out_ARLOCK,
        ARCACHE => m_axi_user_axi_out_ARCACHE,
        ARPROT => m_axi_user_axi_out_ARPROT,
        ARQOS => m_axi_user_axi_out_ARQOS,
        ARREGION => m_axi_user_axi_out_ARREGION,
        ARUSER => m_axi_user_axi_out_ARUSER,
        RVALID => m_axi_user_axi_out_RVALID,
        RREADY => m_axi_user_axi_out_RREADY,
        RDATA => m_axi_user_axi_out_RDATA,
        RLAST => m_axi_user_axi_out_RLAST,
        RID => m_axi_user_axi_out_RID,
        RUSER => m_axi_user_axi_out_RUSER,
        RRESP => m_axi_user_axi_out_RRESP,
        BVALID => m_axi_user_axi_out_BVALID,
        BREADY => m_axi_user_axi_out_BREADY,
        BRESP => m_axi_user_axi_out_BRESP,
        BID => m_axi_user_axi_out_BID,
        BUSER => m_axi_user_axi_out_BUSER,
        ACLK => ap_clk,
        ARESETN => ap_rst_n,
        ACLK_EN => HW_2DConv_Mmap_3_user_axi_out_m_axi_U_ap_dummy_ce,
        I_ARVALID => user_axi_out_ARVALID,
        I_ARREADY => user_axi_out_ARREADY,
        I_ARADDR => user_axi_out_ARADDR,
        I_ARID => user_axi_out_ARID,
        I_ARLEN => user_axi_out_ARLEN,
        I_ARSIZE => user_axi_out_ARSIZE,
        I_ARLOCK => user_axi_out_ARLOCK,
        I_ARCACHE => user_axi_out_ARCACHE,
        I_ARQOS => user_axi_out_ARQOS,
        I_ARPROT => user_axi_out_ARPROT,
        I_ARUSER => user_axi_out_ARUSER,
        I_ARBURST => user_axi_out_ARBURST,
        I_ARREGION => user_axi_out_ARREGION,
        I_RVALID => user_axi_out_RVALID,
        I_RREADY => user_axi_out_RREADY,
        I_RDATA => user_axi_out_RDATA,
        I_RID => user_axi_out_RID,
        I_RUSER => user_axi_out_RUSER,
        I_RRESP => user_axi_out_RRESP,
        I_RLAST => user_axi_out_RLAST,
        I_AWVALID => user_axi_out_AWVALID,
        I_AWREADY => user_axi_out_AWREADY,
        I_AWADDR => user_axi_out_AWADDR,
        I_AWID => user_axi_out_AWID,
        I_AWLEN => user_axi_out_AWLEN,
        I_AWSIZE => user_axi_out_AWSIZE,
        I_AWLOCK => user_axi_out_AWLOCK,
        I_AWCACHE => user_axi_out_AWCACHE,
        I_AWQOS => user_axi_out_AWQOS,
        I_AWPROT => user_axi_out_AWPROT,
        I_AWUSER => user_axi_out_AWUSER,
        I_AWBURST => user_axi_out_AWBURST,
        I_AWREGION => user_axi_out_AWREGION,
        I_WVALID => user_axi_out_WVALID,
        I_WREADY => user_axi_out_WREADY,
        I_WDATA => user_axi_out_WDATA,
        I_WID => user_axi_out_WID,
        I_WUSER => user_axi_out_WUSER,
        I_WLAST => user_axi_out_WLAST,
        I_WSTRB => user_axi_out_WSTRB,
        I_BVALID => user_axi_out_BVALID,
        I_BREADY => user_axi_out_BREADY,
        I_BRESP => user_axi_out_BRESP,
        I_BID => user_axi_out_BID,
        I_BUSER => user_axi_out_BUSER);

    HW_2DConv_Mmap_3_user_axi_out2_m_axi_U : component HW_2DConv_Mmap_3_user_axi_out2_m_axi
    generic map (
        USER_DW => 8,
        USER_AW => 32,
        USER_MAXREQS => 5,
        C_ID_WIDTH => C_M_AXI_USER_AXI_OUT2_ID_WIDTH,
        C_ADDR_WIDTH => C_M_AXI_USER_AXI_OUT2_ADDR_WIDTH,
        C_DATA_WIDTH => C_M_AXI_USER_AXI_OUT2_DATA_WIDTH,
        C_AWUSER_WIDTH => C_M_AXI_USER_AXI_OUT2_AWUSER_WIDTH,
        C_ARUSER_WIDTH => C_M_AXI_USER_AXI_OUT2_ARUSER_WIDTH,
        C_WUSER_WIDTH => C_M_AXI_USER_AXI_OUT2_WUSER_WIDTH,
        C_RUSER_WIDTH => C_M_AXI_USER_AXI_OUT2_RUSER_WIDTH,
        C_BUSER_WIDTH => C_M_AXI_USER_AXI_OUT2_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_USER_AXI_OUT2_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_USER_AXI_OUT2_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_USER_AXI_OUT2_CACHE_VALUE)
    port map (
        AWVALID => m_axi_user_axi_out2_AWVALID,
        AWREADY => m_axi_user_axi_out2_AWREADY,
        AWADDR => m_axi_user_axi_out2_AWADDR,
        AWID => m_axi_user_axi_out2_AWID,
        AWLEN => m_axi_user_axi_out2_AWLEN,
        AWSIZE => m_axi_user_axi_out2_AWSIZE,
        AWBURST => m_axi_user_axi_out2_AWBURST,
        AWLOCK => m_axi_user_axi_out2_AWLOCK,
        AWCACHE => m_axi_user_axi_out2_AWCACHE,
        AWPROT => m_axi_user_axi_out2_AWPROT,
        AWQOS => m_axi_user_axi_out2_AWQOS,
        AWREGION => m_axi_user_axi_out2_AWREGION,
        AWUSER => m_axi_user_axi_out2_AWUSER,
        WVALID => m_axi_user_axi_out2_WVALID,
        WREADY => m_axi_user_axi_out2_WREADY,
        WDATA => m_axi_user_axi_out2_WDATA,
        WSTRB => m_axi_user_axi_out2_WSTRB,
        WLAST => m_axi_user_axi_out2_WLAST,
        WID => m_axi_user_axi_out2_WID,
        WUSER => m_axi_user_axi_out2_WUSER,
        ARVALID => m_axi_user_axi_out2_ARVALID,
        ARREADY => m_axi_user_axi_out2_ARREADY,
        ARADDR => m_axi_user_axi_out2_ARADDR,
        ARID => m_axi_user_axi_out2_ARID,
        ARLEN => m_axi_user_axi_out2_ARLEN,
        ARSIZE => m_axi_user_axi_out2_ARSIZE,
        ARBURST => m_axi_user_axi_out2_ARBURST,
        ARLOCK => m_axi_user_axi_out2_ARLOCK,
        ARCACHE => m_axi_user_axi_out2_ARCACHE,
        ARPROT => m_axi_user_axi_out2_ARPROT,
        ARQOS => m_axi_user_axi_out2_ARQOS,
        ARREGION => m_axi_user_axi_out2_ARREGION,
        ARUSER => m_axi_user_axi_out2_ARUSER,
        RVALID => m_axi_user_axi_out2_RVALID,
        RREADY => m_axi_user_axi_out2_RREADY,
        RDATA => m_axi_user_axi_out2_RDATA,
        RLAST => m_axi_user_axi_out2_RLAST,
        RID => m_axi_user_axi_out2_RID,
        RUSER => m_axi_user_axi_out2_RUSER,
        RRESP => m_axi_user_axi_out2_RRESP,
        BVALID => m_axi_user_axi_out2_BVALID,
        BREADY => m_axi_user_axi_out2_BREADY,
        BRESP => m_axi_user_axi_out2_BRESP,
        BID => m_axi_user_axi_out2_BID,
        BUSER => m_axi_user_axi_out2_BUSER,
        ACLK => ap_clk,
        ARESETN => ap_rst_n,
        ACLK_EN => HW_2DConv_Mmap_3_user_axi_out2_m_axi_U_ap_dummy_ce,
        I_ARVALID => user_axi_out2_ARVALID,
        I_ARREADY => user_axi_out2_ARREADY,
        I_ARADDR => user_axi_out2_ARADDR,
        I_ARID => user_axi_out2_ARID,
        I_ARLEN => user_axi_out2_ARLEN,
        I_ARSIZE => user_axi_out2_ARSIZE,
        I_ARLOCK => user_axi_out2_ARLOCK,
        I_ARCACHE => user_axi_out2_ARCACHE,
        I_ARQOS => user_axi_out2_ARQOS,
        I_ARPROT => user_axi_out2_ARPROT,
        I_ARUSER => user_axi_out2_ARUSER,
        I_ARBURST => user_axi_out2_ARBURST,
        I_ARREGION => user_axi_out2_ARREGION,
        I_RVALID => user_axi_out2_RVALID,
        I_RREADY => user_axi_out2_RREADY,
        I_RDATA => user_axi_out2_RDATA,
        I_RID => user_axi_out2_RID,
        I_RUSER => user_axi_out2_RUSER,
        I_RRESP => user_axi_out2_RRESP,
        I_RLAST => user_axi_out2_RLAST,
        I_AWVALID => user_axi_out2_AWVALID,
        I_AWREADY => user_axi_out2_AWREADY,
        I_AWADDR => user_axi_out2_AWADDR,
        I_AWID => user_axi_out2_AWID,
        I_AWLEN => user_axi_out2_AWLEN,
        I_AWSIZE => user_axi_out2_AWSIZE,
        I_AWLOCK => user_axi_out2_AWLOCK,
        I_AWCACHE => user_axi_out2_AWCACHE,
        I_AWQOS => user_axi_out2_AWQOS,
        I_AWPROT => user_axi_out2_AWPROT,
        I_AWUSER => user_axi_out2_AWUSER,
        I_AWBURST => user_axi_out2_AWBURST,
        I_AWREGION => user_axi_out2_AWREGION,
        I_WVALID => user_axi_out2_WVALID,
        I_WREADY => user_axi_out2_WREADY,
        I_WDATA => user_axi_out2_WDATA,
        I_WID => user_axi_out2_WID,
        I_WUSER => user_axi_out2_WUSER,
        I_WLAST => user_axi_out2_WLAST,
        I_WSTRB => user_axi_out2_WSTRB,
        I_BVALID => user_axi_out2_BVALID,
        I_BREADY => user_axi_out2_BREADY,
        I_BRESP => user_axi_out2_BRESP,
        I_BID => user_axi_out2_BID,
        I_BUSER => user_axi_out2_BUSER);

    line_buffer_M_0_U : component HW_2DConv_Mmap_3_line_buffer_M_0
    generic map (
        DataWidth => 8,
        AddressRange => 482,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => HW_2DConv_Mmap_3_ap_rst,
        address0 => line_buffer_M_0_address0,
        ce0 => line_buffer_M_0_ce0,
        q0 => line_buffer_M_0_q0,
        address1 => line_buffer_M_0_address1,
        ce1 => line_buffer_M_0_ce1,
        we1 => line_buffer_M_0_we1,
        d1 => line_buffer_M_0_d1);

    line_buffer_M_1_U : component HW_2DConv_Mmap_3_line_buffer_M_0
    generic map (
        DataWidth => 8,
        AddressRange => 482,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => HW_2DConv_Mmap_3_ap_rst,
        address0 => line_buffer_M_1_address0,
        ce0 => line_buffer_M_1_ce0,
        q0 => line_buffer_M_1_q0,
        address1 => line_buffer_M_1_address1,
        ce1 => line_buffer_M_1_ce1,
        we1 => line_buffer_M_1_we1,
        d1 => line_buffer_M_1_d1);

    line_buffer2_M_0_U : component HW_2DConv_Mmap_3_line_buffer_M_0
    generic map (
        DataWidth => 8,
        AddressRange => 482,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => HW_2DConv_Mmap_3_ap_rst,
        address0 => line_buffer2_M_0_address0,
        ce0 => line_buffer2_M_0_ce0,
        q0 => line_buffer2_M_0_q0,
        address1 => line_buffer2_M_0_address1,
        ce1 => line_buffer2_M_0_ce1,
        we1 => line_buffer2_M_0_we1,
        d1 => line_buffer2_M_0_d1);

    line_buffer2_M_1_U : component HW_2DConv_Mmap_3_line_buffer_M_0
    generic map (
        DataWidth => 8,
        AddressRange => 482,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => HW_2DConv_Mmap_3_ap_rst,
        address0 => line_buffer2_M_1_address0,
        ce0 => line_buffer2_M_1_ce0,
        q0 => line_buffer2_M_1_q0,
        address1 => line_buffer2_M_1_address1,
        ce1 => line_buffer2_M_1_ce1,
        we1 => line_buffer2_M_1_we1,
        d1 => line_buffer2_M_1_d1);

    HW_2DConv_Mmap_3_urem_4ns_4ns_4_7_U0 : component HW_2DConv_Mmap_3_urem_4ns_4ns_4_7
    generic map (
        ID => 0,
        NUM_STAGE => 7,
        din0_WIDTH => 4,
        din1_WIDTH => 4,
        dout_WIDTH => 4)
    port map (
        clk => ap_clk,
        reset => HW_2DConv_Mmap_3_ap_rst,
        din0 => grp_fu_707_p0,
        din1 => grp_fu_707_p1,
        ce => grp_fu_707_ce,
        dout => grp_fu_707_p2);

    HW_2DConv_Mmap_3_urem_4ns_4ns_4_7_U1 : component HW_2DConv_Mmap_3_urem_4ns_4ns_4_7
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 4,
        din1_WIDTH => 4,
        dout_WIDTH => 4)
    port map (
        clk => ap_clk,
        reset => HW_2DConv_Mmap_3_ap_rst,
        din0 => grp_fu_1065_p0,
        din1 => grp_fu_1065_p1,
        ce => grp_fu_1065_ce,
        dout => grp_fu_1065_p2);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_user_axi_in2_ARREADY assign process. --
    ap_reg_ioackin_user_axi_in2_ARREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ioackin_user_axi_in2_ARREADY <= ap_const_logic_0;
            else
                if ((((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12))))) or ((ap_ST_pp1_stg0_fsm_4 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond_reg_3331) and not((ap_const_lv1_0 = isIter_reg_3340)) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((((ap_const_lv1_0 = exitcond_reg_3331) and not((ap_const_lv1_0 = isIter_reg_3340)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)) or (ap_sig_bdd_755 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it6))))))) then 
                    ap_reg_ioackin_user_axi_in2_ARREADY <= ap_const_logic_0;
                elsif ((((ap_ST_pp1_stg0_fsm_4 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond_reg_3331) and not((ap_const_lv1_0 = isIter_reg_3340)) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = user_axi_in2_ARREADY) and not((ap_sig_bdd_755 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it6)))) or ((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))) and (ap_const_logic_1 = user_axi_in2_ARREADY)))) then 
                    ap_reg_ioackin_user_axi_in2_ARREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_user_axi_in_ARREADY assign process. --
    ap_reg_ioackin_user_axi_in_ARREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ioackin_user_axi_in_ARREADY <= ap_const_logic_0;
            else
                if ((((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (exitcond8_reg_3196 = ap_const_lv1_0) and not((ap_const_lv1_0 = isIter0_reg_3205)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((exitcond8_reg_3196 = ap_const_lv1_0) and not((ap_const_lv1_0 = isIter0_reg_3205)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_710 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6))))) or ((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12))))))) then 
                    ap_reg_ioackin_user_axi_in_ARREADY <= ap_const_logic_0;
                elsif ((((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (exitcond8_reg_3196 = ap_const_lv1_0) and not((ap_const_lv1_0 = isIter0_reg_3205)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = user_axi_in_ARREADY) and not((ap_sig_bdd_710 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))) or ((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2) and (ap_const_logic_1 = user_axi_in_ARREADY) and not((((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12))))))) then 
                    ap_reg_ioackin_user_axi_in_ARREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_user_axi_out2_AWREADY assign process. --
    ap_reg_ioackin_user_axi_out2_AWREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ioackin_user_axi_out2_AWREADY <= ap_const_logic_0;
            else
                if (ap_sig_bdd_3090) then
                    if (not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12))))) then 
                        ap_reg_ioackin_user_axi_out2_AWREADY <= ap_const_logic_0;
                    elsif (ap_sig_bdd_3091) then 
                        ap_reg_ioackin_user_axi_out2_AWREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_user_axi_out2_WREADY assign process. --
    ap_reg_ioackin_user_axi_out2_WREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ioackin_user_axi_out2_WREADY <= ap_const_logic_0;
            else
                if (ap_sig_bdd_3090) then
                    if (not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12))))) then 
                        ap_reg_ioackin_user_axi_out2_WREADY <= ap_const_logic_0;
                    elsif (ap_sig_bdd_3094) then 
                        ap_reg_ioackin_user_axi_out2_WREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_user_axi_out_AWREADY assign process. --
    ap_reg_ioackin_user_axi_out_AWREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ioackin_user_axi_out_AWREADY <= ap_const_logic_0;
            else
                if (ap_sig_bdd_3090) then
                    if (not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12))))) then 
                        ap_reg_ioackin_user_axi_out_AWREADY <= ap_const_logic_0;
                    elsif (ap_sig_bdd_3096) then 
                        ap_reg_ioackin_user_axi_out_AWREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_user_axi_out_WREADY assign process. --
    ap_reg_ioackin_user_axi_out_WREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ioackin_user_axi_out_WREADY <= ap_const_logic_0;
            else
                if (ap_sig_bdd_3090) then
                    if (not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12))))) then 
                        ap_reg_ioackin_user_axi_out_WREADY <= ap_const_logic_0;
                    elsif (ap_sig_bdd_3098) then 
                        ap_reg_ioackin_user_axi_out_WREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not((((exitcond8_reg_3196 = ap_const_lv1_0) and not((ap_const_lv1_0 = isIter0_reg_3205)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_710 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))) and not((ap_const_lv1_0 = exitcond8_fu_683_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not((((exitcond8_reg_3196 = ap_const_lv1_0) and not((ap_const_lv1_0 = isIter0_reg_3205)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_710 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))) and (ap_const_lv1_0 = exitcond8_fu_683_p2))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif (((ap_ST_st2_fsm_1 = ap_CS_fsm) or ((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not((((exitcond8_reg_3196 = ap_const_lv1_0) and not((ap_const_lv1_0 = isIter0_reg_3205)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_710 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))) and not((ap_const_lv1_0 = exitcond8_fu_683_p2))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not((((exitcond8_reg_3196 = ap_const_lv1_0) and not((ap_const_lv1_0 = isIter0_reg_3205)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_710 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it3 assign process. --
    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not((((exitcond8_reg_3196 = ap_const_lv1_0) and not((ap_const_lv1_0 = isIter0_reg_3205)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_710 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it4 assign process. --
    ap_reg_ppiten_pp0_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not((((exitcond8_reg_3196 = ap_const_lv1_0) and not((ap_const_lv1_0 = isIter0_reg_3205)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_710 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))))) then 
                    ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it5 assign process. --
    ap_reg_ppiten_pp0_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not((((exitcond8_reg_3196 = ap_const_lv1_0) and not((ap_const_lv1_0 = isIter0_reg_3205)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_710 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))))) then 
                    ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it6 assign process. --
    ap_reg_ppiten_pp0_it6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not((((exitcond8_reg_3196 = ap_const_lv1_0) and not((ap_const_lv1_0 = isIter0_reg_3205)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_710 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))))) then 
                    ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it7 assign process. --
    ap_reg_ppiten_pp0_it7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not((((exitcond8_reg_3196 = ap_const_lv1_0) and not((ap_const_lv1_0 = isIter0_reg_3205)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_710 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))))) then 
                    ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
                elsif ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then 
                    ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it0 assign process. --
    ap_reg_ppiten_pp1_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
            else
                if (((ap_ST_pp1_stg0_fsm_4 = ap_CS_fsm) and not((((ap_const_lv1_0 = exitcond_reg_3331) and not((ap_const_lv1_0 = isIter_reg_3340)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)) or (ap_sig_bdd_755 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it6)))) and not((ap_const_lv1_0 = exitcond_fu_1041_p2)))) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
                elsif ((ap_ST_st11_fsm_3 = ap_CS_fsm)) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it1 assign process. --
    ap_reg_ppiten_pp1_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
            else
                if (((ap_ST_pp1_stg0_fsm_4 = ap_CS_fsm) and not((((ap_const_lv1_0 = exitcond_reg_3331) and not((ap_const_lv1_0 = isIter_reg_3340)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)) or (ap_sig_bdd_755 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it6)))) and (ap_const_lv1_0 = exitcond_fu_1041_p2))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_1;
                elsif (((ap_ST_st11_fsm_3 = ap_CS_fsm) or ((ap_ST_pp1_stg0_fsm_4 = ap_CS_fsm) and not((((ap_const_lv1_0 = exitcond_reg_3331) and not((ap_const_lv1_0 = isIter_reg_3340)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)) or (ap_sig_bdd_755 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it6)))) and not((ap_const_lv1_0 = exitcond_fu_1041_p2))))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it2 assign process. --
    ap_reg_ppiten_pp1_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp1_it2 <= ap_const_logic_0;
            else
                if (((ap_ST_pp1_stg0_fsm_4 = ap_CS_fsm) and not((((ap_const_lv1_0 = exitcond_reg_3331) and not((ap_const_lv1_0 = isIter_reg_3340)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)) or (ap_sig_bdd_755 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it6)))))) then 
                    ap_reg_ppiten_pp1_it2 <= ap_reg_ppiten_pp1_it1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it3 assign process. --
    ap_reg_ppiten_pp1_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp1_it3 <= ap_const_logic_0;
            else
                if (((ap_ST_pp1_stg0_fsm_4 = ap_CS_fsm) and not((((ap_const_lv1_0 = exitcond_reg_3331) and not((ap_const_lv1_0 = isIter_reg_3340)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)) or (ap_sig_bdd_755 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it6)))))) then 
                    ap_reg_ppiten_pp1_it3 <= ap_reg_ppiten_pp1_it2;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it4 assign process. --
    ap_reg_ppiten_pp1_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp1_it4 <= ap_const_logic_0;
            else
                if (((ap_ST_pp1_stg0_fsm_4 = ap_CS_fsm) and not((((ap_const_lv1_0 = exitcond_reg_3331) and not((ap_const_lv1_0 = isIter_reg_3340)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)) or (ap_sig_bdd_755 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it6)))))) then 
                    ap_reg_ppiten_pp1_it4 <= ap_reg_ppiten_pp1_it3;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it5 assign process. --
    ap_reg_ppiten_pp1_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp1_it5 <= ap_const_logic_0;
            else
                if (((ap_ST_pp1_stg0_fsm_4 = ap_CS_fsm) and not((((ap_const_lv1_0 = exitcond_reg_3331) and not((ap_const_lv1_0 = isIter_reg_3340)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)) or (ap_sig_bdd_755 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it6)))))) then 
                    ap_reg_ppiten_pp1_it5 <= ap_reg_ppiten_pp1_it4;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it6 assign process. --
    ap_reg_ppiten_pp1_it6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp1_it6 <= ap_const_logic_0;
            else
                if (((ap_ST_pp1_stg0_fsm_4 = ap_CS_fsm) and not((((ap_const_lv1_0 = exitcond_reg_3331) and not((ap_const_lv1_0 = isIter_reg_3340)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)) or (ap_sig_bdd_755 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it6)))))) then 
                    ap_reg_ppiten_pp1_it6 <= ap_reg_ppiten_pp1_it5;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it7 assign process. --
    ap_reg_ppiten_pp1_it7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp1_it7 <= ap_const_logic_0;
            else
                if (((ap_ST_pp1_stg0_fsm_4 = ap_CS_fsm) and not((((ap_const_lv1_0 = exitcond_reg_3331) and not((ap_const_lv1_0 = isIter_reg_3340)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)) or (ap_sig_bdd_755 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it6)))))) then 
                    ap_reg_ppiten_pp1_it7 <= ap_reg_ppiten_pp1_it6;
                elsif ((ap_ST_st11_fsm_3 = ap_CS_fsm)) then 
                    ap_reg_ppiten_pp1_it7 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp2_it0 assign process. --
    ap_reg_ppiten_pp2_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp2_it0 <= ap_const_logic_0;
            else
                if (((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))) and not((ap_const_lv1_0 = exitcond_flatten_fu_2092_p2)))) then 
                    ap_reg_ppiten_pp2_it0 <= ap_const_logic_0;
                elsif ((ap_ST_st20_fsm_5 = ap_CS_fsm)) then 
                    ap_reg_ppiten_pp2_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp2_it1 assign process. --
    ap_reg_ppiten_pp2_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp2_it1 <= ap_const_logic_0;
            else
                if (((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))) and (ap_const_lv1_0 = exitcond_flatten_fu_2092_p2))) then 
                    ap_reg_ppiten_pp2_it1 <= ap_const_logic_1;
                elsif (((ap_ST_st20_fsm_5 = ap_CS_fsm) or ((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))) and not((ap_const_lv1_0 = exitcond_flatten_fu_2092_p2))))) then 
                    ap_reg_ppiten_pp2_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp2_it10 assign process. --
    ap_reg_ppiten_pp2_it10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp2_it10 <= ap_const_logic_0;
            else
                if (((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))))) then 
                    ap_reg_ppiten_pp2_it10 <= ap_reg_ppiten_pp2_it9;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp2_it11 assign process. --
    ap_reg_ppiten_pp2_it11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp2_it11 <= ap_const_logic_0;
            else
                if (((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))))) then 
                    ap_reg_ppiten_pp2_it11 <= ap_reg_ppiten_pp2_it10;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp2_it12 assign process. --
    ap_reg_ppiten_pp2_it12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp2_it12 <= ap_const_logic_0;
            else
                if (((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))))) then 
                    ap_reg_ppiten_pp2_it12 <= ap_reg_ppiten_pp2_it11;
                elsif ((ap_ST_st20_fsm_5 = ap_CS_fsm)) then 
                    ap_reg_ppiten_pp2_it12 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp2_it2 assign process. --
    ap_reg_ppiten_pp2_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp2_it2 <= ap_const_logic_0;
            else
                if (((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))))) then 
                    ap_reg_ppiten_pp2_it2 <= ap_reg_ppiten_pp2_it1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp2_it3 assign process. --
    ap_reg_ppiten_pp2_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp2_it3 <= ap_const_logic_0;
            else
                if (((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))))) then 
                    ap_reg_ppiten_pp2_it3 <= ap_reg_ppiten_pp2_it2;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp2_it4 assign process. --
    ap_reg_ppiten_pp2_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp2_it4 <= ap_const_logic_0;
            else
                if (((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))))) then 
                    ap_reg_ppiten_pp2_it4 <= ap_reg_ppiten_pp2_it3;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp2_it5 assign process. --
    ap_reg_ppiten_pp2_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp2_it5 <= ap_const_logic_0;
            else
                if (((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))))) then 
                    ap_reg_ppiten_pp2_it5 <= ap_reg_ppiten_pp2_it4;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp2_it6 assign process. --
    ap_reg_ppiten_pp2_it6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp2_it6 <= ap_const_logic_0;
            else
                if (((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))))) then 
                    ap_reg_ppiten_pp2_it6 <= ap_reg_ppiten_pp2_it5;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp2_it7 assign process. --
    ap_reg_ppiten_pp2_it7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp2_it7 <= ap_const_logic_0;
            else
                if (((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))))) then 
                    ap_reg_ppiten_pp2_it7 <= ap_reg_ppiten_pp2_it6;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp2_it8 assign process. --
    ap_reg_ppiten_pp2_it8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp2_it8 <= ap_const_logic_0;
            else
                if (((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))))) then 
                    ap_reg_ppiten_pp2_it8 <= ap_reg_ppiten_pp2_it7;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp2_it9 assign process. --
    ap_reg_ppiten_pp2_it9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp2_it9 <= ap_const_logic_0;
            else
                if (((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))))) then 
                    ap_reg_ppiten_pp2_it9 <= ap_reg_ppiten_pp2_it8;
                end if; 
            end if;
        end if;
    end process;


    -- pixel_in2_0_data_reg assign process. --
    pixel_in2_0_data_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                pixel_in2_0_data_reg <= ap_const_lv32_0;
            else
                if (((not((not((ap_const_logic_1 = ap_start)) and (ap_ST_st1_fsm_0 = ap_CS_fsm))) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_0 = pixel_in2_0_vld_reg)) or (not((not((ap_const_logic_1 = ap_start)) and (ap_ST_st1_fsm_0 = ap_CS_fsm))) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = pixel_in2_0_vld_reg) and (ap_const_logic_1 = pixel_in2_0_ack_out)))) then 
                    pixel_in2_0_data_reg <= pixel_in2;
                end if; 
            end if;
        end if;
    end process;


    -- pixel_in2_0_vld_reg assign process. --
    pixel_in2_0_vld_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                
            else
            end if;
        end if;
    end process;


    -- pixel_in_0_data_reg assign process. --
    pixel_in_0_data_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                pixel_in_0_data_reg <= ap_const_lv32_0;
            else
                if (((not((not((ap_const_logic_1 = ap_start)) and (ap_ST_st1_fsm_0 = ap_CS_fsm))) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_0 = pixel_in_0_vld_reg)) or (not((not((ap_const_logic_1 = ap_start)) and (ap_ST_st1_fsm_0 = ap_CS_fsm))) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = pixel_in_0_vld_reg) and (ap_const_logic_1 = pixel_in_0_ack_out)))) then 
                    pixel_in_0_data_reg <= pixel_in;
                end if; 
            end if;
        end if;
    end process;


    -- pixel_in_0_vld_reg assign process. --
    pixel_in_0_vld_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                
            else
            end if;
        end if;
    end process;


    -- pixel_out2_0_data_reg assign process. --
    pixel_out2_0_data_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                pixel_out2_0_data_reg <= ap_const_lv32_0;
            else
                if (((not((not((ap_const_logic_1 = ap_start)) and (ap_ST_st1_fsm_0 = ap_CS_fsm))) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_0 = pixel_out2_0_vld_reg)) or (not((not((ap_const_logic_1 = ap_start)) and (ap_ST_st1_fsm_0 = ap_CS_fsm))) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = pixel_out2_0_vld_reg) and (ap_const_logic_1 = pixel_out2_0_ack_out)))) then 
                    pixel_out2_0_data_reg <= pixel_out2;
                end if; 
            end if;
        end if;
    end process;


    -- pixel_out2_0_vld_reg assign process. --
    pixel_out2_0_vld_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                
            else
            end if;
        end if;
    end process;


    -- pixel_out_0_data_reg assign process. --
    pixel_out_0_data_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                pixel_out_0_data_reg <= ap_const_lv32_0;
            else
                if (((not((not((ap_const_logic_1 = ap_start)) and (ap_ST_st1_fsm_0 = ap_CS_fsm))) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_0 = pixel_out_0_vld_reg)) or (not((not((ap_const_logic_1 = ap_start)) and (ap_ST_st1_fsm_0 = ap_CS_fsm))) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = pixel_out_0_vld_reg) and (ap_const_logic_1 = pixel_out_0_ack_out)))) then 
                    pixel_out_0_data_reg <= pixel_out;
                end if; 
            end if;
        end if;
    end process;


    -- pixel_out_0_vld_reg assign process. --
    pixel_out_0_vld_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                
            else
            end if;
        end if;
    end process;


    -- c_reg_586 assign process. --
    c_reg_586_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))) and (ap_const_lv1_0 = exitcond_flatten_fu_2092_p2))) then 
                c_reg_586 <= c_1_fu_2170_p2;
            elsif ((ap_ST_st20_fsm_5 = ap_CS_fsm)) then 
                c_reg_586 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    -- indvar1_reg_541 assign process. --
    indvar1_reg_541_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st11_fsm_3 = ap_CS_fsm)) then 
                indvar1_reg_541 <= ap_const_lv4_0;
            elsif (((ap_ST_pp1_stg0_fsm_4 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond_reg_3331) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((((ap_const_lv1_0 = exitcond_reg_3331) and not((ap_const_lv1_0 = isIter_reg_3340)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)) or (ap_sig_bdd_755 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it6)))))) then 
                indvar1_reg_541 <= indvar_next1_reg_3335;
            end if; 
        end if;
    end process;

    -- indvar_flatten_reg_564 assign process. --
    indvar_flatten_reg_564_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))) and (ap_const_lv1_0 = exitcond_flatten_fu_2092_p2))) then 
                indvar_flatten_reg_564 <= indvar_flatten_next_fu_2098_p2;
            elsif ((ap_ST_st20_fsm_5 = ap_CS_fsm)) then 
                indvar_flatten_reg_564 <= ap_const_lv18_0;
            end if; 
        end if;
    end process;

    -- indvar_reg_518 assign process. --
    indvar_reg_518_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (exitcond8_reg_3196 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((exitcond8_reg_3196 = ap_const_lv1_0) and not((ap_const_lv1_0 = isIter0_reg_3205)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_710 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))))) then 
                indvar_reg_518 <= indvar_next_reg_3200;
            elsif ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then 
                indvar_reg_518 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    -- phi_mul1_reg_553 assign process. --
    phi_mul1_reg_553_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st11_fsm_3 = ap_CS_fsm)) then 
                phi_mul1_reg_553 <= ap_const_lv8_0;
            elsif (((ap_ST_pp1_stg0_fsm_4 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((((ap_const_lv1_0 = exitcond_reg_3331) and not((ap_const_lv1_0 = isIter_reg_3340)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)) or (ap_sig_bdd_755 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it6)))) and (ap_const_lv1_0 = exitcond_fu_1041_p2))) then 
                phi_mul1_reg_553 <= next_mul1_fu_1059_p2;
            end if; 
        end if;
    end process;

    -- phi_mul_reg_530 assign process. --
    phi_mul_reg_530_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((exitcond8_reg_3196 = ap_const_lv1_0) and not((ap_const_lv1_0 = isIter0_reg_3205)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_710 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))) and (ap_const_lv1_0 = exitcond8_fu_683_p2))) then 
                phi_mul_reg_530 <= next_mul_fu_701_p2;
            elsif ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then 
                phi_mul_reg_530 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    -- r_reg_575 assign process. --
    r_reg_575_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))) and (ap_const_lv1_0 = exitcond_flatten_reg_3745))) then 
                r_reg_575 <= r_mid2_reg_3761;
            elsif ((ap_ST_st20_fsm_5 = ap_CS_fsm)) then 
                r_reg_575 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))))) then
                ap_reg_ppstg_c_mid2_reg_3754_pp2_it1 <= c_mid2_reg_3754;
                ap_reg_ppstg_c_mid2_reg_3754_pp2_it2 <= ap_reg_ppstg_c_mid2_reg_3754_pp2_it1;
                ap_reg_ppstg_c_mid2_reg_3754_pp2_it3 <= ap_reg_ppstg_c_mid2_reg_3754_pp2_it2;
                ap_reg_ppstg_c_mid2_reg_3754_pp2_it4 <= ap_reg_ppstg_c_mid2_reg_3754_pp2_it3;
                ap_reg_ppstg_c_mid2_reg_3754_pp2_it5 <= ap_reg_ppstg_c_mid2_reg_3754_pp2_it4;
                ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1 <= exitcond_flatten_reg_3745;
                ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it10 <= ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it9;
                ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it11 <= ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it10;
                ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it2 <= ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1;
                ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it3 <= ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it2;
                ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it4 <= ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it3;
                ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it5 <= ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it4;
                ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it6 <= ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it5;
                ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it7 <= ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it6;
                ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8 <= ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it7;
                ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it9 <= ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8;
                ap_reg_ppstg_icmp_reg_3769_pp2_it1 <= icmp_reg_3769;
                ap_reg_ppstg_icmp_reg_3769_pp2_it2 <= ap_reg_ppstg_icmp_reg_3769_pp2_it1;
                ap_reg_ppstg_icmp_reg_3769_pp2_it3 <= ap_reg_ppstg_icmp_reg_3769_pp2_it2;
                ap_reg_ppstg_icmp_reg_3769_pp2_it4 <= ap_reg_ppstg_icmp_reg_3769_pp2_it3;
                ap_reg_ppstg_icmp_reg_3769_pp2_it5 <= ap_reg_ppstg_icmp_reg_3769_pp2_it4;
                ap_reg_ppstg_icmp_reg_3769_pp2_it6 <= ap_reg_ppstg_icmp_reg_3769_pp2_it5;
                ap_reg_ppstg_icmp_reg_3769_pp2_it7 <= ap_reg_ppstg_icmp_reg_3769_pp2_it6;
                ap_reg_ppstg_line_buffer2_M_0_addr_reg_3830_pp2_it7 <= line_buffer2_M_0_addr_reg_3830;
                ap_reg_ppstg_line_buffer_M_0_addr_reg_3818_pp2_it7 <= line_buffer_M_0_addr_reg_3818;
                ap_reg_ppstg_or_cond_20_reg_3791_pp2_it1 <= or_cond_20_reg_3791;
                ap_reg_ppstg_or_cond_20_reg_3791_pp2_it10 <= ap_reg_ppstg_or_cond_20_reg_3791_pp2_it9;
                ap_reg_ppstg_or_cond_20_reg_3791_pp2_it11 <= ap_reg_ppstg_or_cond_20_reg_3791_pp2_it10;
                ap_reg_ppstg_or_cond_20_reg_3791_pp2_it2 <= ap_reg_ppstg_or_cond_20_reg_3791_pp2_it1;
                ap_reg_ppstg_or_cond_20_reg_3791_pp2_it3 <= ap_reg_ppstg_or_cond_20_reg_3791_pp2_it2;
                ap_reg_ppstg_or_cond_20_reg_3791_pp2_it4 <= ap_reg_ppstg_or_cond_20_reg_3791_pp2_it3;
                ap_reg_ppstg_or_cond_20_reg_3791_pp2_it5 <= ap_reg_ppstg_or_cond_20_reg_3791_pp2_it4;
                ap_reg_ppstg_or_cond_20_reg_3791_pp2_it6 <= ap_reg_ppstg_or_cond_20_reg_3791_pp2_it5;
                ap_reg_ppstg_or_cond_20_reg_3791_pp2_it7 <= ap_reg_ppstg_or_cond_20_reg_3791_pp2_it6;
                ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8 <= ap_reg_ppstg_or_cond_20_reg_3791_pp2_it7;
                ap_reg_ppstg_or_cond_20_reg_3791_pp2_it9 <= ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8;
                ap_reg_ppstg_r_mid2_reg_3761_pp2_it1 <= r_mid2_reg_3761;
                ap_reg_ppstg_r_mid2_reg_3761_pp2_it2 <= ap_reg_ppstg_r_mid2_reg_3761_pp2_it1;
                ap_reg_ppstg_r_mid2_reg_3761_pp2_it3 <= ap_reg_ppstg_r_mid2_reg_3761_pp2_it2;
                ap_reg_ppstg_r_mid2_reg_3761_pp2_it4 <= ap_reg_ppstg_r_mid2_reg_3761_pp2_it3;
                ap_reg_ppstg_r_mid2_reg_3761_pp2_it5 <= ap_reg_ppstg_r_mid2_reg_3761_pp2_it4;
                ap_reg_ppstg_user_axi_out2_addr_reg_3841_pp2_it7 <= user_axi_out2_addr_reg_3841;
                ap_reg_ppstg_user_axi_out2_addr_reg_3841_pp2_it8 <= ap_reg_ppstg_user_axi_out2_addr_reg_3841_pp2_it7;
                ap_reg_ppstg_user_axi_out_addr_reg_3836_pp2_it7 <= user_axi_out_addr_reg_3836;
                ap_reg_ppstg_user_axi_out_addr_reg_3836_pp2_it8 <= ap_reg_ppstg_user_axi_out_addr_reg_3836_pp2_it7;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not((((exitcond8_reg_3196 = ap_const_lv1_0) and not((ap_const_lv1_0 = isIter0_reg_3205)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_710 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))))) then
                ap_reg_ppstg_exitcond8_reg_3196_pp0_it1 <= exitcond8_reg_3196;
                ap_reg_ppstg_exitcond8_reg_3196_pp0_it2 <= ap_reg_ppstg_exitcond8_reg_3196_pp0_it1;
                ap_reg_ppstg_exitcond8_reg_3196_pp0_it3 <= ap_reg_ppstg_exitcond8_reg_3196_pp0_it2;
                ap_reg_ppstg_exitcond8_reg_3196_pp0_it4 <= ap_reg_ppstg_exitcond8_reg_3196_pp0_it3;
                ap_reg_ppstg_exitcond8_reg_3196_pp0_it5 <= ap_reg_ppstg_exitcond8_reg_3196_pp0_it4;
                ap_reg_ppstg_exitcond8_reg_3196_pp0_it6 <= ap_reg_ppstg_exitcond8_reg_3196_pp0_it5;
                ap_reg_ppstg_p_t_reg_3214_pp0_it1 <= p_t_reg_3214;
                ap_reg_ppstg_p_t_reg_3214_pp0_it2 <= ap_reg_ppstg_p_t_reg_3214_pp0_it1;
                ap_reg_ppstg_p_t_reg_3214_pp0_it3 <= ap_reg_ppstg_p_t_reg_3214_pp0_it2;
                ap_reg_ppstg_p_t_reg_3214_pp0_it4 <= ap_reg_ppstg_p_t_reg_3214_pp0_it3;
                ap_reg_ppstg_p_t_reg_3214_pp0_it5 <= ap_reg_ppstg_p_t_reg_3214_pp0_it4;
                ap_reg_ppstg_p_t_reg_3214_pp0_it6 <= ap_reg_ppstg_p_t_reg_3214_pp0_it5;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp1_stg0_fsm_4 = ap_CS_fsm) and not((((ap_const_lv1_0 = exitcond_reg_3331) and not((ap_const_lv1_0 = isIter_reg_3340)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)) or (ap_sig_bdd_755 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it6)))))) then
                ap_reg_ppstg_exitcond_reg_3331_pp1_it1 <= exitcond_reg_3331;
                ap_reg_ppstg_exitcond_reg_3331_pp1_it2 <= ap_reg_ppstg_exitcond_reg_3331_pp1_it1;
                ap_reg_ppstg_exitcond_reg_3331_pp1_it3 <= ap_reg_ppstg_exitcond_reg_3331_pp1_it2;
                ap_reg_ppstg_exitcond_reg_3331_pp1_it4 <= ap_reg_ppstg_exitcond_reg_3331_pp1_it3;
                ap_reg_ppstg_exitcond_reg_3331_pp1_it5 <= ap_reg_ppstg_exitcond_reg_3331_pp1_it4;
                ap_reg_ppstg_exitcond_reg_3331_pp1_it6 <= ap_reg_ppstg_exitcond_reg_3331_pp1_it5;
                ap_reg_ppstg_p_t2_reg_3349_pp1_it1 <= p_t2_reg_3349;
                ap_reg_ppstg_p_t2_reg_3349_pp1_it2 <= ap_reg_ppstg_p_t2_reg_3349_pp1_it1;
                ap_reg_ppstg_p_t2_reg_3349_pp1_it3 <= ap_reg_ppstg_p_t2_reg_3349_pp1_it2;
                ap_reg_ppstg_p_t2_reg_3349_pp1_it4 <= ap_reg_ppstg_p_t2_reg_3349_pp1_it3;
                ap_reg_ppstg_p_t2_reg_3349_pp1_it5 <= ap_reg_ppstg_p_t2_reg_3349_pp1_it4;
                ap_reg_ppstg_p_t2_reg_3349_pp1_it6 <= ap_reg_ppstg_p_t2_reg_3349_pp1_it5;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))) and (ap_const_lv1_0 = exitcond_flatten_fu_2092_p2))) then
                c_mid2_reg_3754 <= c_mid2_fu_2110_p3;
                icmp_reg_3769 <= icmp_fu_2142_p2;
                or_cond_20_reg_3791 <= or_cond_20_fu_2164_p2;
                r_mid2_reg_3761 <= r_mid2_fu_2124_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((exitcond8_reg_3196 = ap_const_lv1_0) and not((ap_const_lv1_0 = isIter0_reg_3205)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_710 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))))) then
                exitcond8_reg_3196 <= exitcond8_fu_683_p2;
                indvar_next_reg_3200 <= indvar_next_fu_689_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))))) then
                exitcond_flatten_reg_3745 <= exitcond_flatten_fu_2092_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp1_stg0_fsm_4 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((((ap_const_lv1_0 = exitcond_reg_3331) and not((ap_const_lv1_0 = isIter_reg_3340)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)) or (ap_sig_bdd_755 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it6)))))) then
                exitcond_reg_3331 <= exitcond_fu_1041_p2;
                indvar_next1_reg_3335 <= indvar_next1_fu_1047_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
                filter_base2_reg_3190 <= pixel_in25_sum_cast_fu_673_p1(32 - 1 downto 0);
                filter_base_reg_3184 <= pixel_in3_sum_cast_fu_657_p1(32 - 1 downto 0);
                tmp_10_cast_reg_3174 <= tmp_10_cast_fu_643_p1;
                tmp_21_cast_reg_3179 <= tmp_21_cast_fu_647_p1;
                tmp_6_cast_reg_3164 <= tmp_6_cast_fu_635_p1;
                tmp_9_cast_reg_3169 <= tmp_9_cast_fu_639_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp1_stg0_fsm_4 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it7) and not((((ap_const_lv1_0 = exitcond_reg_3331) and not((ap_const_lv1_0 = isIter_reg_3340)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)) or (ap_sig_bdd_755 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it6)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_3331_pp1_it6))) then
                filter_buffer2_0_0_s_fu_176 <= newSel35_fu_1391_p3;
                filter_buffer2_0_1_s_fu_180 <= newSel33_fu_1375_p3;
                filter_buffer2_0_2_s_fu_184 <= newSel30_fu_1351_p3;
                filter_buffer2_1_0_s_fu_188 <= filter_buffer2_1_0_1_fu_1319_p3;
                filter_buffer2_1_1_s_fu_192 <= newSel26_fu_1303_p3;
                filter_buffer2_1_2_s_fu_196 <= newSel24_fu_1287_p3;
                filter_buffer2_2_0_s_fu_200 <= filter_buffer2_2_0_1_fu_1263_p3;
                filter_buffer2_2_1_s_fu_204 <= newSel21_fu_1255_p3;
                filter_buffer2_2_2_s_fu_208 <= newSel18_fu_1231_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and not((((exitcond8_reg_3196 = ap_const_lv1_0) and not((ap_const_lv1_0 = isIter0_reg_3205)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_710 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond8_reg_3196_pp0_it6))) then
                filter_buffer_0_0_s_reg_506 <= newSel17_fu_1033_p3;
                filter_buffer_0_1_s_reg_494 <= newSel15_fu_1017_p3;
                filter_buffer_0_2_s_reg_482 <= newSel12_fu_993_p3;
                filter_buffer_1_0_s_reg_470 <= filter_buffer_1_0_1_fu_961_p3;
                filter_buffer_1_1_s_reg_458 <= newSel8_fu_945_p3;
                filter_buffer_1_2_s_reg_446 <= newSel6_fu_929_p3;
                filter_buffer_2_0_s_reg_434 <= filter_buffer_2_0_1_fu_905_p3;
                filter_buffer_2_1_s_reg_422 <= newSel3_fu_897_p3;
                filter_buffer_2_2_s_reg_410 <= newSel_fu_873_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((exitcond8_reg_3196 = ap_const_lv1_0) and not((ap_const_lv1_0 = isIter0_reg_3205)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_710 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))) and (ap_const_lv1_0 = exitcond8_fu_683_p2))) then
                isIter0_reg_3205 <= isIter0_fu_695_p2;
                p_t_reg_3214 <= phi_mul_reg_530(7 downto 6);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp1_stg0_fsm_4 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((((ap_const_lv1_0 = exitcond_reg_3331) and not((ap_const_lv1_0 = isIter_reg_3340)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)) or (ap_sig_bdd_755 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it6)))) and (ap_const_lv1_0 = exitcond_fu_1041_p2))) then
                isIter_reg_3340 <= isIter_fu_1053_p2;
                p_t2_reg_3349 <= phi_mul1_reg_553(7 downto 6);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it6) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it5))) then
                line_buffer2_M_0_addr_reg_3830 <= tmp_7_fu_2256_p1(9 - 1 downto 0);
                line_buffer2_M_1_addr_reg_3824 <= tmp_7_fu_2256_p1(9 - 1 downto 0);
                line_buffer_M_0_addr_reg_3818 <= tmp_7_fu_2256_p1(9 - 1 downto 0);
                line_buffer_M_1_addr_reg_3812 <= tmp_7_fu_2256_p1(9 - 1 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st20_fsm_5 = ap_CS_fsm)) then
                or_cond10_reg_3530 <= or_cond10_fu_1582_p2;
                or_cond11_reg_3545 <= or_cond11_fu_1618_p2;
                or_cond12_reg_3560 <= or_cond12_fu_1654_p2;
                or_cond13_reg_3575 <= or_cond13_fu_1690_p2;
                or_cond14_reg_3590 <= or_cond14_fu_1726_p2;
                or_cond15_reg_3605 <= or_cond15_fu_1762_p2;
                or_cond16_reg_3620 <= or_cond16_fu_1798_p2;
                or_cond17_reg_3635 <= or_cond17_fu_1834_p2;
                or_cond18_reg_3650 <= or_cond18_fu_1870_p2;
                or_cond19_reg_3665 <= or_cond19_fu_1906_p2;
                or_cond20_reg_3680 <= or_cond20_fu_1942_p2;
                or_cond21_reg_3695 <= or_cond21_fu_1978_p2;
                or_cond22_reg_3710 <= or_cond22_fu_2014_p2;
                or_cond23_reg_3725 <= or_cond23_fu_2050_p2;
                or_cond24_reg_3740 <= or_cond24_fu_2086_p2;
                or_cond7_reg_3485 <= or_cond7_fu_1474_p2;
                or_cond8_reg_3500 <= or_cond8_fu_1510_p2;
                or_cond9_reg_3515 <= or_cond9_fu_1546_p2;
                sel_tmp35_reg_3480 <= sel_tmp35_fu_1468_p2;
                sel_tmp37_reg_3495 <= sel_tmp37_fu_1504_p2;
                sel_tmp39_reg_3510 <= sel_tmp39_fu_1540_p2;
                sel_tmp41_reg_3525 <= sel_tmp41_fu_1576_p2;
                sel_tmp43_reg_3540 <= sel_tmp43_fu_1612_p2;
                sel_tmp45_reg_3555 <= sel_tmp45_fu_1648_p2;
                sel_tmp47_reg_3570 <= sel_tmp47_fu_1684_p2;
                sel_tmp49_reg_3585 <= sel_tmp49_fu_1720_p2;
                sel_tmp51_reg_3600 <= sel_tmp51_fu_1756_p2;
                sel_tmp53_reg_3615 <= sel_tmp53_fu_1792_p2;
                sel_tmp55_reg_3630 <= sel_tmp55_fu_1828_p2;
                sel_tmp57_reg_3645 <= sel_tmp57_fu_1864_p2;
                sel_tmp59_reg_3660 <= sel_tmp59_fu_1900_p2;
                sel_tmp61_reg_3675 <= sel_tmp61_fu_1936_p2;
                sel_tmp63_reg_3690 <= sel_tmp63_fu_1972_p2;
                sel_tmp65_reg_3705 <= sel_tmp65_fu_2008_p2;
                sel_tmp67_reg_3720 <= sel_tmp67_fu_2044_p2;
                sel_tmp69_reg_3735 <= sel_tmp69_fu_2080_p2;
                tmp_16_reg_3490 <= tmp_16_fu_1492_p2;
                tmp_23_0_1_reg_3505 <= tmp_23_0_1_fu_1528_p2;
                tmp_23_0_2_reg_3535 <= tmp_23_0_2_fu_1600_p2;
                tmp_23_1_1_reg_3595 <= tmp_23_1_1_fu_1744_p2;
                tmp_23_1_2_reg_3625 <= tmp_23_1_2_fu_1816_p2;
                tmp_23_1_reg_3565 <= tmp_23_1_fu_1672_p2;
                tmp_23_2_1_reg_3685 <= tmp_23_2_1_fu_1960_p2;
                tmp_23_2_2_reg_3715 <= tmp_23_2_2_fu_2032_p2;
                tmp_23_2_reg_3655 <= tmp_23_2_fu_1888_p2;
                tmp_26_0_1_reg_3520 <= tmp_26_0_1_fu_1564_p2;
                tmp_26_0_2_reg_3550 <= tmp_26_0_2_fu_1636_p2;
                tmp_26_1_1_reg_3610 <= tmp_26_1_1_fu_1780_p2;
                tmp_26_1_2_reg_3640 <= tmp_26_1_2_fu_1852_p2;
                tmp_26_1_reg_3580 <= tmp_26_1_fu_1708_p2;
                tmp_26_2_1_reg_3700 <= tmp_26_2_1_fu_1996_p2;
                tmp_26_2_2_reg_3730 <= tmp_26_2_2_fu_2068_p2;
                tmp_26_2_reg_3670 <= tmp_26_2_fu_1924_p2;
                tmp_9_reg_3475 <= tmp_9_fu_1456_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond8_reg_3196_pp0_it5) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6) and not((((exitcond8_reg_3196 = ap_const_lv1_0) and not((ap_const_lv1_0 = isIter0_reg_3205)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_710 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6))))) or ((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it6) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12))))))) then
                reg_625 <= user_axi_in_RDATA;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it6) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12))))) or ((ap_ST_pp1_stg0_fsm_4 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_3331_pp1_it5) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it6) and not((((ap_const_lv1_0 = exitcond_reg_3331) and not((ap_const_lv1_0 = isIter_reg_3340)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)) or (ap_sig_bdd_755 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it6))))))) then
                reg_630 <= user_axi_in2_RDATA;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it6) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))))) then
                return_value_1_reg_3851 <= line_buffer_M_0_q0;
                return_value_3_reg_3861 <= line_buffer2_M_0_q0;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it6) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))) and not((ap_const_lv1_0 = ap_reg_ppstg_icmp_reg_3769_pp2_it6)))) then
                return_value_2_reg_3856 <= line_buffer2_M_1_q0;
                return_value_reg_3846 <= line_buffer_M_1_q0;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it8) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it7) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it7)))) then
                store_data2_2_2_2_reg_3871 <= store_data2_2_2_2_fu_3158_p2;
                store_data_2_2_2_reg_3866 <= store_data_2_2_2_fu_3089_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp1_stg0_fsm_4 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_3331_pp1_it5) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it6) and not((((ap_const_lv1_0 = exitcond_reg_3331) and not((ap_const_lv1_0 = isIter_reg_3340)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)) or (ap_sig_bdd_755 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it6)))))) then
                tmp_17_reg_3358 <= tmp_17_fu_1081_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond8_reg_3196_pp0_it5) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6) and not((((exitcond8_reg_3196 = ap_const_lv1_0) and not((ap_const_lv1_0 = isIter0_reg_3205)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_710 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))))) then
                tmp_3_reg_3223 <= tmp_3_fu_723_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))) and (ap_const_lv1_0 = exitcond_flatten_reg_3745))) then
                user_axi_in2_addr_reg_3806 <= pixel_in25_sum1_cast_fu_2218_p1(32 - 1 downto 0);
                user_axi_in_addr_reg_3800 <= pixel_in3_sum1_cast_fu_2203_p1(32 - 1 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it6) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it5) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it5)))) then
                user_axi_out2_addr_reg_3841 <= pixel_out29_sum_cast_fu_2306_p1(32 - 1 downto 0);
                user_axi_out_addr_reg_3836 <= pixel_out7_sum_cast_fu_2291_p1(32 - 1 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it8) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it7))) then
                window_buffer2_M_0_0_2_fu_248 <= window_buffer2_M_0_0_1_fu_2424_p3;
                window_buffer2_M_0_0_fu_252 <= window_buffer2_M_0_1_3_fu_2417_p3;
                window_buffer2_M_0_1_fu_256 <= window_buffer2_M_0_2_fu_2411_p3;
                window_buffer2_M_1_0_2_fu_260 <= window_buffer2_M_1_0_1_fu_2404_p3;
                window_buffer2_M_1_0_fu_264 <= window_buffer2_M_1_1_3_fu_2397_p3;
                window_buffer2_M_1_1_fu_268 <= window_buffer2_M_1_2_fu_2391_p3;
                window_buffer2_M_2_0_2_fu_272 <= window_buffer2_M_2_0_1_fu_2384_p3;
                window_buffer2_M_2_0_fu_276 <= window_buffer2_M_2_1_3_fu_2377_p3;
                window_buffer2_M_2_1_fu_280 <= window_buffer2_M_2_2_fu_2370_p3;
                window_buffer_M_0_0_2_fu_212 <= window_buffer_M_0_0_1_fu_2485_p3;
                window_buffer_M_0_0_fu_216 <= window_buffer_M_0_1_3_fu_2478_p3;
                window_buffer_M_0_1_fu_220 <= window_buffer_M_0_2_fu_2472_p3;
                window_buffer_M_1_0_2_fu_224 <= window_buffer_M_1_0_1_fu_2465_p3;
                window_buffer_M_1_0_fu_228 <= window_buffer_M_1_1_3_fu_2458_p3;
                window_buffer_M_1_1_fu_232 <= window_buffer_M_1_2_fu_2452_p3;
                window_buffer_M_2_0_2_fu_236 <= window_buffer_M_2_0_1_fu_2445_p3;
                window_buffer_M_2_0_fu_240 <= window_buffer_M_2_1_3_fu_2438_p3;
                window_buffer_M_2_1_fu_244 <= window_buffer_M_2_2_fu_2431_p3;
            end if;
        end if;
    end process;
    pixel_in_0_vld_reg <= '0';
    pixel_in2_0_vld_reg <= '0';
    pixel_out_0_vld_reg <= '0';
    pixel_out2_0_vld_reg <= '0';

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it0, exitcond8_reg_3196, isIter0_reg_3205, ap_sig_ioackin_user_axi_in_ARREADY, ap_reg_ppiten_pp0_it1, ap_sig_bdd_710, ap_reg_ppiten_pp0_it6, ap_reg_ppiten_pp0_it7, ap_reg_ppiten_pp1_it0, exitcond_reg_3331, isIter_reg_3340, ap_sig_ioackin_user_axi_in2_ARREADY, ap_reg_ppiten_pp1_it1, ap_sig_bdd_755, ap_reg_ppiten_pp1_it6, ap_reg_ppiten_pp1_it7, ap_reg_ppiten_pp2_it7, ap_reg_ppiten_pp2_it0, ap_reg_ppiten_pp2_it1, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1, ap_reg_ppiten_pp2_it2, ap_sig_bdd_811, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8, ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8, ap_sig_ioackin_user_axi_out_AWREADY, ap_sig_ioackin_user_axi_out_WREADY, ap_sig_ioackin_user_axi_out2_AWREADY, ap_sig_ioackin_user_axi_out2_WREADY, ap_reg_ppiten_pp2_it9, ap_reg_ppiten_pp2_it11, ap_sig_bdd_857, ap_reg_ppiten_pp2_it12, exitcond8_fu_683_p2, exitcond_fu_1041_p2, exitcond_flatten_fu_2092_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
            when ap_ST_pp0_stg0_fsm_2 => 
                if ((not(((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and not((((exitcond8_reg_3196 = ap_const_lv1_0) and not((ap_const_lv1_0 = isIter0_reg_3205)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_710 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((exitcond8_reg_3196 = ap_const_lv1_0) and not((ap_const_lv1_0 = isIter0_reg_3205)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_710 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))) and not((ap_const_lv1_0 = exitcond8_fu_683_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                elsif ((((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and not((((exitcond8_reg_3196 = ap_const_lv1_0) and not((ap_const_lv1_0 = isIter0_reg_3205)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_710 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it6))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((exitcond8_reg_3196 = ap_const_lv1_0) and not((ap_const_lv1_0 = isIter0_reg_3205)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_710 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))) and not((ap_const_lv1_0 = exitcond8_fu_683_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_st11_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when ap_ST_st11_fsm_3 => 
                ap_NS_fsm <= ap_ST_pp1_stg0_fsm_4;
            when ap_ST_pp1_stg0_fsm_4 => 
                if ((not(((ap_ST_pp1_stg0_fsm_4 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it7) and not((((ap_const_lv1_0 = exitcond_reg_3331) and not((ap_const_lv1_0 = isIter_reg_3340)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)) or (ap_sig_bdd_755 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it6)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it6)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((((ap_const_lv1_0 = exitcond_reg_3331) and not((ap_const_lv1_0 = isIter_reg_3340)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)) or (ap_sig_bdd_755 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it6)))) and not((ap_const_lv1_0 = exitcond_fu_1041_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_4;
                elsif ((((ap_ST_pp1_stg0_fsm_4 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it7) and not((((ap_const_lv1_0 = exitcond_reg_3331) and not((ap_const_lv1_0 = isIter_reg_3340)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)) or (ap_sig_bdd_755 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it6)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it6))) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((((ap_const_lv1_0 = exitcond_reg_3331) and not((ap_const_lv1_0 = isIter_reg_3340)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)) or (ap_sig_bdd_755 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it6)))) and not((ap_const_lv1_0 = exitcond_fu_1041_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it1))))) then
                    ap_NS_fsm <= ap_ST_st20_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_4;
                end if;
            when ap_ST_st20_fsm_5 => 
                ap_NS_fsm <= ap_ST_pp2_stg0_fsm_6;
            when ap_ST_pp2_stg0_fsm_6 => 
                if ((not(((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp2_it11)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))) and not((ap_const_lv1_0 = exitcond_flatten_fu_2092_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp2_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp2_stg0_fsm_6;
                elsif ((((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp2_it11))) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))) and not((ap_const_lv1_0 = exitcond_flatten_fu_2092_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp2_it1))))) then
                    ap_NS_fsm <= ap_ST_st34_fsm_7;
                else
                    ap_NS_fsm <= ap_ST_pp2_stg0_fsm_6;
                end if;
            when ap_ST_st34_fsm_7 => 
                ap_NS_fsm <= ap_ST_st35_fsm_8;
            when ap_ST_st35_fsm_8 => 
                ap_NS_fsm <= ap_ST_st1_fsm_0;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;

    -- HW_2DConv_Mmap_3_ap_rst assign process. --
    HW_2DConv_Mmap_3_ap_rst_assign_proc : process(ap_rst_n)
    begin
                HW_2DConv_Mmap_3_ap_rst <= not(ap_rst_n);
    end process;

    HW_2DConv_Mmap_3_user_axi4lite_config_s_axi_U_ap_dummy_ce <= ap_const_logic_1;
    HW_2DConv_Mmap_3_user_axi_in2_m_axi_U_ap_dummy_ce <= ap_const_logic_1;
    HW_2DConv_Mmap_3_user_axi_in_m_axi_U_ap_dummy_ce <= ap_const_logic_1;
    HW_2DConv_Mmap_3_user_axi_out2_m_axi_U_ap_dummy_ce <= ap_const_logic_1;
    HW_2DConv_Mmap_3_user_axi_out_m_axi_U_ap_dummy_ce <= ap_const_logic_1;
    
    tmp29_fu_2266_p2_temp <= signed(tmp29_fu_2266_p2);
    addconv_fu_2276_p0 <= std_logic_vector(resize(tmp29_fu_2266_p2_temp,19));

    addconv_fu_2276_p2 <= std_logic_vector(unsigned(addconv_fu_2276_p0) + unsigned(tmp_4_fu_2250_p2));

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_st35_fsm_8 = ap_CS_fsm)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_CS_fsm)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_ST_st1_fsm_0 = ap_CS_fsm))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_st35_fsm_8 = ap_CS_fsm)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_1315 assign process. --
    ap_sig_bdd_1315_assign_proc : process(ap_CS_fsm, exitcond8_reg_3196, isIter0_reg_3205, ap_reg_ppiten_pp0_it1, ap_sig_bdd_710, ap_reg_ppiten_pp0_it6)
    begin
                ap_sig_bdd_1315 <= ((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (exitcond8_reg_3196 = ap_const_lv1_0) and not((ap_const_lv1_0 = isIter0_reg_3205)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_710 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6))));
    end process;


    -- ap_sig_bdd_1328 assign process. --
    ap_sig_bdd_1328_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp2_it7, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1, ap_reg_ppiten_pp2_it2, ap_sig_bdd_811, ap_sig_bdd_857, ap_reg_ppiten_pp2_it12)
    begin
                ap_sig_bdd_1328 <= ((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))));
    end process;


    -- ap_sig_bdd_1341 assign process. --
    ap_sig_bdd_1341_assign_proc : process(ap_CS_fsm, exitcond_reg_3331, isIter_reg_3340, ap_reg_ppiten_pp1_it1, ap_sig_bdd_755, ap_reg_ppiten_pp1_it6)
    begin
                ap_sig_bdd_1341 <= ((ap_ST_pp1_stg0_fsm_4 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond_reg_3331) and not((ap_const_lv1_0 = isIter_reg_3340)) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_sig_bdd_755 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it6))));
    end process;


    -- ap_sig_bdd_3090 assign process. --
    ap_sig_bdd_3090_assign_proc : process(ap_CS_fsm, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8, ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8, ap_reg_ppiten_pp2_it9)
    begin
                ap_sig_bdd_3090 <= ((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9));
    end process;


    -- ap_sig_bdd_3091 assign process. --
    ap_sig_bdd_3091_assign_proc : process(user_axi_out2_AWREADY, ap_reg_ppiten_pp2_it7, ap_sig_bdd_811, ap_sig_bdd_857, ap_reg_ppiten_pp2_it12)
    begin
                ap_sig_bdd_3091 <= (not((((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))) and (ap_const_logic_1 = user_axi_out2_AWREADY));
    end process;


    -- ap_sig_bdd_3094 assign process. --
    ap_sig_bdd_3094_assign_proc : process(user_axi_out2_WREADY, ap_reg_ppiten_pp2_it7, ap_sig_bdd_811, ap_sig_bdd_857, ap_reg_ppiten_pp2_it12)
    begin
                ap_sig_bdd_3094 <= (not((((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))) and (ap_const_logic_1 = user_axi_out2_WREADY));
    end process;


    -- ap_sig_bdd_3096 assign process. --
    ap_sig_bdd_3096_assign_proc : process(user_axi_out_AWREADY, ap_reg_ppiten_pp2_it7, ap_sig_bdd_811, ap_sig_bdd_857, ap_reg_ppiten_pp2_it12)
    begin
                ap_sig_bdd_3096 <= (not((((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))) and (ap_const_logic_1 = user_axi_out_AWREADY));
    end process;


    -- ap_sig_bdd_3098 assign process. --
    ap_sig_bdd_3098_assign_proc : process(user_axi_out_WREADY, ap_reg_ppiten_pp2_it7, ap_sig_bdd_811, ap_sig_bdd_857, ap_reg_ppiten_pp2_it12)
    begin
                ap_sig_bdd_3098 <= (not((((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))) and (ap_const_logic_1 = user_axi_out_WREADY));
    end process;


    -- ap_sig_bdd_710 assign process. --
    ap_sig_bdd_710_assign_proc : process(user_axi_in_RVALID, ap_reg_ppstg_exitcond8_reg_3196_pp0_it5)
    begin
                ap_sig_bdd_710 <= ((user_axi_in_RVALID = ap_const_logic_0) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond8_reg_3196_pp0_it5));
    end process;


    -- ap_sig_bdd_755 assign process. --
    ap_sig_bdd_755_assign_proc : process(user_axi_in2_RVALID, ap_reg_ppstg_exitcond_reg_3331_pp1_it5)
    begin
                ap_sig_bdd_755 <= ((user_axi_in2_RVALID = ap_const_logic_0) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_3331_pp1_it5));
    end process;


    -- ap_sig_bdd_811 assign process. --
    ap_sig_bdd_811_assign_proc : process(user_axi_in_RVALID, user_axi_in2_RVALID, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it6)
    begin
                ap_sig_bdd_811 <= (((user_axi_in_RVALID = ap_const_logic_0) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it6)) or ((user_axi_in2_RVALID = ap_const_logic_0) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it6)));
    end process;


    -- ap_sig_bdd_857 assign process. --
    ap_sig_bdd_857_assign_proc : process(user_axi_out_BVALID, user_axi_out2_BVALID, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it11, ap_reg_ppstg_or_cond_20_reg_3791_pp2_it11)
    begin
                ap_sig_bdd_857 <= (((user_axi_out_BVALID = ap_const_logic_0) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it11) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it11))) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it11) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it11)) and (user_axi_out2_BVALID = ap_const_logic_0)));
    end process;


    -- ap_sig_ioackin_user_axi_in2_ARREADY assign process. --
    ap_sig_ioackin_user_axi_in2_ARREADY_assign_proc : process(user_axi_in2_ARREADY, ap_reg_ioackin_user_axi_in2_ARREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_user_axi_in2_ARREADY)) then 
            ap_sig_ioackin_user_axi_in2_ARREADY <= user_axi_in2_ARREADY;
        else 
            ap_sig_ioackin_user_axi_in2_ARREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ioackin_user_axi_in_ARREADY assign process. --
    ap_sig_ioackin_user_axi_in_ARREADY_assign_proc : process(user_axi_in_ARREADY, ap_reg_ioackin_user_axi_in_ARREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_user_axi_in_ARREADY)) then 
            ap_sig_ioackin_user_axi_in_ARREADY <= user_axi_in_ARREADY;
        else 
            ap_sig_ioackin_user_axi_in_ARREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ioackin_user_axi_out2_AWREADY assign process. --
    ap_sig_ioackin_user_axi_out2_AWREADY_assign_proc : process(user_axi_out2_AWREADY, ap_reg_ioackin_user_axi_out2_AWREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_user_axi_out2_AWREADY)) then 
            ap_sig_ioackin_user_axi_out2_AWREADY <= user_axi_out2_AWREADY;
        else 
            ap_sig_ioackin_user_axi_out2_AWREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ioackin_user_axi_out2_WREADY assign process. --
    ap_sig_ioackin_user_axi_out2_WREADY_assign_proc : process(user_axi_out2_WREADY, ap_reg_ioackin_user_axi_out2_WREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_user_axi_out2_WREADY)) then 
            ap_sig_ioackin_user_axi_out2_WREADY <= user_axi_out2_WREADY;
        else 
            ap_sig_ioackin_user_axi_out2_WREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ioackin_user_axi_out_AWREADY assign process. --
    ap_sig_ioackin_user_axi_out_AWREADY_assign_proc : process(user_axi_out_AWREADY, ap_reg_ioackin_user_axi_out_AWREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_user_axi_out_AWREADY)) then 
            ap_sig_ioackin_user_axi_out_AWREADY <= user_axi_out_AWREADY;
        else 
            ap_sig_ioackin_user_axi_out_AWREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ioackin_user_axi_out_WREADY assign process. --
    ap_sig_ioackin_user_axi_out_WREADY_assign_proc : process(user_axi_out_WREADY, ap_reg_ioackin_user_axi_out_WREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_user_axi_out_WREADY)) then 
            ap_sig_ioackin_user_axi_out_WREADY <= user_axi_out_WREADY;
        else 
            ap_sig_ioackin_user_axi_out_WREADY <= ap_const_logic_1;
        end if; 
    end process;

    c_1_fu_2170_p2 <= std_logic_vector(unsigned(c_mid2_fu_2110_p3) + unsigned(ap_const_lv9_1));
    c_mid2_fu_2110_p3 <= 
        ap_const_lv9_0 when (exitcond1_fu_2104_p2(0) = '1') else 
        c_reg_586;
    col_assign_cast_fu_2263_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_c_mid2_reg_3754_pp2_it5),11));
    exitcond1_fu_2104_p2 <= "1" when (c_reg_586 = ap_const_lv9_1E2) else "0";
    exitcond8_fu_683_p2 <= "1" when (indvar_phi_fu_522_p4 = ap_const_lv4_9) else "0";
    exitcond_flatten_fu_2092_p2 <= "1" when (indvar_flatten_reg_564 = ap_const_lv18_20020) else "0";
    exitcond_fu_1041_p2 <= "1" when (indvar1_phi_fu_545_p4 = ap_const_lv4_9) else "0";
    filter_buffer2_1_0_1_fu_1319_p3 <= 
        filter_buffer2_1_0_s_fu_188 when (sel_tmp32_fu_1183_p2(0) = '1') else 
        sel_tmp33_fu_1311_p3;
    filter_buffer2_2_0_1_fu_1263_p3 <= 
        reg_630 when (sel_tmp32_fu_1183_p2(0) = '1') else 
        filter_buffer2_2_0_s_fu_200;
    filter_buffer_1_0_1_fu_961_p3 <= 
        filter_buffer_1_0_s_reg_470 when (sel_tmp15_fu_825_p2(0) = '1') else 
        sel_tmp16_fu_953_p3;
    filter_buffer_2_0_1_fu_905_p3 <= 
        reg_625 when (sel_tmp15_fu_825_p2(0) = '1') else 
        filter_buffer_2_0_s_reg_434;

    -- grp_fu_1065_ce assign process. --
    grp_fu_1065_ce_assign_proc : process(ap_CS_fsm, exitcond_reg_3331, isIter_reg_3340, ap_sig_ioackin_user_axi_in2_ARREADY, ap_reg_ppiten_pp1_it1, ap_reg_ppstg_exitcond_reg_3331_pp1_it5, ap_sig_bdd_755, ap_reg_ppiten_pp1_it6, exitcond_fu_1041_p2, ap_reg_ppstg_exitcond_reg_3331_pp1_it1, ap_reg_ppstg_exitcond_reg_3331_pp1_it2, ap_reg_ppstg_exitcond_reg_3331_pp1_it3, ap_reg_ppstg_exitcond_reg_3331_pp1_it4)
    begin
        if (((ap_ST_pp1_stg0_fsm_4 = ap_CS_fsm) and not((((ap_const_lv1_0 = exitcond_reg_3331) and not((ap_const_lv1_0 = isIter_reg_3340)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)) or (ap_sig_bdd_755 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it6)))) and ((ap_const_lv1_0 = exitcond_reg_3331) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_3331_pp1_it5) or (ap_const_lv1_0 = exitcond_fu_1041_p2) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_3331_pp1_it1) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_3331_pp1_it2) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_3331_pp1_it3) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_3331_pp1_it4)))) then 
            grp_fu_1065_ce <= ap_const_logic_1;
        else 
            grp_fu_1065_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1065_p0 <= indvar1_phi_fu_545_p4;
    grp_fu_1065_p1 <= ap_const_lv4_3;

    -- grp_fu_707_ce assign process. --
    grp_fu_707_ce_assign_proc : process(ap_CS_fsm, exitcond8_reg_3196, isIter0_reg_3205, ap_sig_ioackin_user_axi_in_ARREADY, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_exitcond8_reg_3196_pp0_it5, ap_sig_bdd_710, ap_reg_ppiten_pp0_it6, exitcond8_fu_683_p2, ap_reg_ppstg_exitcond8_reg_3196_pp0_it1, ap_reg_ppstg_exitcond8_reg_3196_pp0_it2, ap_reg_ppstg_exitcond8_reg_3196_pp0_it3, ap_reg_ppstg_exitcond8_reg_3196_pp0_it4)
    begin
        if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not((((exitcond8_reg_3196 = ap_const_lv1_0) and not((ap_const_lv1_0 = isIter0_reg_3205)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_710 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))) and ((exitcond8_reg_3196 = ap_const_lv1_0) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond8_reg_3196_pp0_it5) or (ap_const_lv1_0 = exitcond8_fu_683_p2) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond8_reg_3196_pp0_it1) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond8_reg_3196_pp0_it2) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond8_reg_3196_pp0_it3) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond8_reg_3196_pp0_it4)))) then 
            grp_fu_707_ce <= ap_const_logic_1;
        else 
            grp_fu_707_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_707_p0 <= indvar_phi_fu_522_p4;
    grp_fu_707_p1 <= ap_const_lv4_3;
    icmp1_fu_2158_p2 <= "0" when (tmp_19_fu_2148_p4 = ap_const_lv8_0) else "1";
    icmp_fu_2142_p2 <= "0" when (tmp_18_fu_2132_p4 = ap_const_lv8_0) else "1";

    -- indvar1_phi_fu_545_p4 assign process. --
    indvar1_phi_fu_545_p4_assign_proc : process(ap_CS_fsm, indvar1_reg_541, exitcond_reg_3331, ap_reg_ppiten_pp1_it1, indvar_next1_reg_3335)
    begin
        if (((ap_ST_pp1_stg0_fsm_4 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond_reg_3331) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) then 
            indvar1_phi_fu_545_p4 <= indvar_next1_reg_3335;
        else 
            indvar1_phi_fu_545_p4 <= indvar1_reg_541;
        end if; 
    end process;

    indvar_flatten_next_fu_2098_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_564) + unsigned(ap_const_lv18_1));
    indvar_next1_fu_1047_p2 <= std_logic_vector(unsigned(indvar1_phi_fu_545_p4) + unsigned(ap_const_lv4_1));
    indvar_next_fu_689_p2 <= std_logic_vector(unsigned(indvar_phi_fu_522_p4) + unsigned(ap_const_lv4_1));

    -- indvar_phi_fu_522_p4 assign process. --
    indvar_phi_fu_522_p4_assign_proc : process(ap_CS_fsm, indvar_reg_518, exitcond8_reg_3196, ap_reg_ppiten_pp0_it1, indvar_next_reg_3200)
    begin
        if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (exitcond8_reg_3196 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            indvar_phi_fu_522_p4 <= indvar_next_reg_3200;
        else 
            indvar_phi_fu_522_p4 <= indvar_reg_518;
        end if; 
    end process;

    isIter0_fu_695_p2 <= "1" when (indvar_phi_fu_522_p4 = ap_const_lv4_0) else "0";
    isIter_fu_1053_p2 <= "1" when (indvar1_phi_fu_545_p4 = ap_const_lv4_0) else "0";
    line_buffer2_M_0_address0 <= tmp_7_fu_2256_p1(9 - 1 downto 0);
    line_buffer2_M_0_address1 <= ap_reg_ppstg_line_buffer2_M_0_addr_reg_3830_pp2_it7;

    -- line_buffer2_M_0_ce0 assign process. --
    line_buffer2_M_0_ce0_assign_proc : process(ap_CS_fsm, ap_sig_ioackin_user_axi_in_ARREADY, ap_sig_ioackin_user_axi_in2_ARREADY, ap_reg_ppiten_pp2_it7, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1, ap_reg_ppiten_pp2_it2, ap_reg_ppiten_pp2_it6, ap_sig_bdd_811, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8, ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8, ap_sig_ioackin_user_axi_out_AWREADY, ap_sig_ioackin_user_axi_out_WREADY, ap_sig_ioackin_user_axi_out2_AWREADY, ap_sig_ioackin_user_axi_out2_WREADY, ap_reg_ppiten_pp2_it9, ap_sig_bdd_857, ap_reg_ppiten_pp2_it12)
    begin
        if (((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it6) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))))) then 
            line_buffer2_M_0_ce0 <= ap_const_logic_1;
        else 
            line_buffer2_M_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- line_buffer2_M_0_ce1 assign process. --
    line_buffer2_M_0_ce1_assign_proc : process(ap_CS_fsm, ap_sig_ioackin_user_axi_in_ARREADY, ap_sig_ioackin_user_axi_in2_ARREADY, ap_reg_ppiten_pp2_it7, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1, ap_reg_ppiten_pp2_it2, ap_sig_bdd_811, ap_reg_ppiten_pp2_it8, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8, ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8, ap_sig_ioackin_user_axi_out_AWREADY, ap_sig_ioackin_user_axi_out_WREADY, ap_sig_ioackin_user_axi_out2_AWREADY, ap_sig_ioackin_user_axi_out2_WREADY, ap_reg_ppiten_pp2_it9, ap_sig_bdd_857, ap_reg_ppiten_pp2_it12)
    begin
        if (((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it8) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))))) then 
            line_buffer2_M_0_ce1 <= ap_const_logic_1;
        else 
            line_buffer2_M_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer2_M_0_d1 <= reg_630;

    -- line_buffer2_M_0_we1 assign process. --
    line_buffer2_M_0_we1_assign_proc : process(ap_CS_fsm, ap_sig_ioackin_user_axi_in_ARREADY, ap_sig_ioackin_user_axi_in2_ARREADY, ap_reg_ppiten_pp2_it7, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1, ap_reg_ppiten_pp2_it2, ap_sig_bdd_811, ap_reg_ppiten_pp2_it8, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8, ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8, ap_sig_ioackin_user_axi_out_AWREADY, ap_sig_ioackin_user_axi_out_WREADY, ap_sig_ioackin_user_axi_out2_AWREADY, ap_sig_ioackin_user_axi_out2_WREADY, ap_reg_ppiten_pp2_it9, ap_sig_bdd_857, ap_reg_ppiten_pp2_it12, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it7)
    begin
        if ((((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it8) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it7)))) then 
            line_buffer2_M_0_we1 <= ap_const_logic_1;
        else 
            line_buffer2_M_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer2_M_1_address0 <= tmp_7_fu_2256_p1(9 - 1 downto 0);
    line_buffer2_M_1_address1 <= line_buffer2_M_1_addr_reg_3824;

    -- line_buffer2_M_1_ce0 assign process. --
    line_buffer2_M_1_ce0_assign_proc : process(ap_CS_fsm, ap_sig_ioackin_user_axi_in_ARREADY, ap_sig_ioackin_user_axi_in2_ARREADY, ap_reg_ppiten_pp2_it7, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1, ap_reg_ppiten_pp2_it2, ap_reg_ppiten_pp2_it6, ap_sig_bdd_811, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8, ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8, ap_sig_ioackin_user_axi_out_AWREADY, ap_sig_ioackin_user_axi_out_WREADY, ap_sig_ioackin_user_axi_out2_AWREADY, ap_sig_ioackin_user_axi_out2_WREADY, ap_reg_ppiten_pp2_it9, ap_sig_bdd_857, ap_reg_ppiten_pp2_it12)
    begin
        if (((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it6) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))))) then 
            line_buffer2_M_1_ce0 <= ap_const_logic_1;
        else 
            line_buffer2_M_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- line_buffer2_M_1_ce1 assign process. --
    line_buffer2_M_1_ce1_assign_proc : process(ap_CS_fsm, ap_sig_ioackin_user_axi_in_ARREADY, ap_sig_ioackin_user_axi_in2_ARREADY, ap_reg_ppiten_pp2_it7, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1, ap_reg_ppiten_pp2_it2, ap_sig_bdd_811, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8, ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8, ap_sig_ioackin_user_axi_out_AWREADY, ap_sig_ioackin_user_axi_out_WREADY, ap_sig_ioackin_user_axi_out2_AWREADY, ap_sig_ioackin_user_axi_out2_WREADY, ap_reg_ppiten_pp2_it9, ap_sig_bdd_857, ap_reg_ppiten_pp2_it12)
    begin
        if (((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))))) then 
            line_buffer2_M_1_ce1 <= ap_const_logic_1;
        else 
            line_buffer2_M_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer2_M_1_d1 <= line_buffer2_M_0_q0;

    -- line_buffer2_M_1_we1 assign process. --
    line_buffer2_M_1_we1_assign_proc : process(ap_CS_fsm, ap_sig_ioackin_user_axi_in_ARREADY, ap_sig_ioackin_user_axi_in2_ARREADY, ap_reg_ppiten_pp2_it7, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1, ap_reg_ppiten_pp2_it2, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it6, ap_sig_bdd_811, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8, ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8, ap_sig_ioackin_user_axi_out_AWREADY, ap_sig_ioackin_user_axi_out_WREADY, ap_sig_ioackin_user_axi_out2_AWREADY, ap_sig_ioackin_user_axi_out2_WREADY, ap_reg_ppiten_pp2_it9, ap_sig_bdd_857, ap_reg_ppiten_pp2_it12)
    begin
        if ((((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it6) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12))))))) then 
            line_buffer2_M_1_we1 <= ap_const_logic_1;
        else 
            line_buffer2_M_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_M_0_address0 <= tmp_7_fu_2256_p1(9 - 1 downto 0);
    line_buffer_M_0_address1 <= ap_reg_ppstg_line_buffer_M_0_addr_reg_3818_pp2_it7;

    -- line_buffer_M_0_ce0 assign process. --
    line_buffer_M_0_ce0_assign_proc : process(ap_CS_fsm, ap_sig_ioackin_user_axi_in_ARREADY, ap_sig_ioackin_user_axi_in2_ARREADY, ap_reg_ppiten_pp2_it7, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1, ap_reg_ppiten_pp2_it2, ap_reg_ppiten_pp2_it6, ap_sig_bdd_811, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8, ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8, ap_sig_ioackin_user_axi_out_AWREADY, ap_sig_ioackin_user_axi_out_WREADY, ap_sig_ioackin_user_axi_out2_AWREADY, ap_sig_ioackin_user_axi_out2_WREADY, ap_reg_ppiten_pp2_it9, ap_sig_bdd_857, ap_reg_ppiten_pp2_it12)
    begin
        if (((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it6) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))))) then 
            line_buffer_M_0_ce0 <= ap_const_logic_1;
        else 
            line_buffer_M_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- line_buffer_M_0_ce1 assign process. --
    line_buffer_M_0_ce1_assign_proc : process(ap_CS_fsm, ap_sig_ioackin_user_axi_in_ARREADY, ap_sig_ioackin_user_axi_in2_ARREADY, ap_reg_ppiten_pp2_it7, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1, ap_reg_ppiten_pp2_it2, ap_sig_bdd_811, ap_reg_ppiten_pp2_it8, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8, ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8, ap_sig_ioackin_user_axi_out_AWREADY, ap_sig_ioackin_user_axi_out_WREADY, ap_sig_ioackin_user_axi_out2_AWREADY, ap_sig_ioackin_user_axi_out2_WREADY, ap_reg_ppiten_pp2_it9, ap_sig_bdd_857, ap_reg_ppiten_pp2_it12)
    begin
        if (((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it8) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))))) then 
            line_buffer_M_0_ce1 <= ap_const_logic_1;
        else 
            line_buffer_M_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_M_0_d1 <= reg_625;

    -- line_buffer_M_0_we1 assign process. --
    line_buffer_M_0_we1_assign_proc : process(ap_CS_fsm, ap_sig_ioackin_user_axi_in_ARREADY, ap_sig_ioackin_user_axi_in2_ARREADY, ap_reg_ppiten_pp2_it7, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1, ap_reg_ppiten_pp2_it2, ap_sig_bdd_811, ap_reg_ppiten_pp2_it8, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8, ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8, ap_sig_ioackin_user_axi_out_AWREADY, ap_sig_ioackin_user_axi_out_WREADY, ap_sig_ioackin_user_axi_out2_AWREADY, ap_sig_ioackin_user_axi_out2_WREADY, ap_reg_ppiten_pp2_it9, ap_sig_bdd_857, ap_reg_ppiten_pp2_it12, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it7)
    begin
        if ((((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it8) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it7)))) then 
            line_buffer_M_0_we1 <= ap_const_logic_1;
        else 
            line_buffer_M_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_M_1_address0 <= tmp_7_fu_2256_p1(9 - 1 downto 0);
    line_buffer_M_1_address1 <= line_buffer_M_1_addr_reg_3812;

    -- line_buffer_M_1_ce0 assign process. --
    line_buffer_M_1_ce0_assign_proc : process(ap_CS_fsm, ap_sig_ioackin_user_axi_in_ARREADY, ap_sig_ioackin_user_axi_in2_ARREADY, ap_reg_ppiten_pp2_it7, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1, ap_reg_ppiten_pp2_it2, ap_reg_ppiten_pp2_it6, ap_sig_bdd_811, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8, ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8, ap_sig_ioackin_user_axi_out_AWREADY, ap_sig_ioackin_user_axi_out_WREADY, ap_sig_ioackin_user_axi_out2_AWREADY, ap_sig_ioackin_user_axi_out2_WREADY, ap_reg_ppiten_pp2_it9, ap_sig_bdd_857, ap_reg_ppiten_pp2_it12)
    begin
        if (((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it6) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))))) then 
            line_buffer_M_1_ce0 <= ap_const_logic_1;
        else 
            line_buffer_M_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- line_buffer_M_1_ce1 assign process. --
    line_buffer_M_1_ce1_assign_proc : process(ap_CS_fsm, ap_sig_ioackin_user_axi_in_ARREADY, ap_sig_ioackin_user_axi_in2_ARREADY, ap_reg_ppiten_pp2_it7, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1, ap_reg_ppiten_pp2_it2, ap_sig_bdd_811, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8, ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8, ap_sig_ioackin_user_axi_out_AWREADY, ap_sig_ioackin_user_axi_out_WREADY, ap_sig_ioackin_user_axi_out2_AWREADY, ap_sig_ioackin_user_axi_out2_WREADY, ap_reg_ppiten_pp2_it9, ap_sig_bdd_857, ap_reg_ppiten_pp2_it12)
    begin
        if (((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))))) then 
            line_buffer_M_1_ce1 <= ap_const_logic_1;
        else 
            line_buffer_M_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_M_1_d1 <= line_buffer_M_0_q0;

    -- line_buffer_M_1_we1 assign process. --
    line_buffer_M_1_we1_assign_proc : process(ap_CS_fsm, ap_sig_ioackin_user_axi_in_ARREADY, ap_sig_ioackin_user_axi_in2_ARREADY, ap_reg_ppiten_pp2_it7, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1, ap_reg_ppiten_pp2_it2, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it6, ap_sig_bdd_811, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8, ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8, ap_sig_ioackin_user_axi_out_AWREADY, ap_sig_ioackin_user_axi_out_WREADY, ap_sig_ioackin_user_axi_out2_AWREADY, ap_sig_ioackin_user_axi_out2_WREADY, ap_reg_ppiten_pp2_it9, ap_sig_bdd_857, ap_reg_ppiten_pp2_it12)
    begin
        if ((((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it6) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12))))))) then 
            line_buffer_M_1_we1 <= ap_const_logic_1;
        else 
            line_buffer_M_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    newSel10_fu_977_p3 <= 
        filter_buffer_0_2_s_reg_482 when (or_cond2_fu_843_p2(0) = '1') else 
        newSel9_fu_969_p3;
    newSel11_fu_985_p3 <= 
        filter_buffer_0_2_s_reg_482 when (or_cond4_fu_855_p2(0) = '1') else 
        newSel10_fu_977_p3;
    newSel12_fu_993_p3 <= 
        newSel11_fu_985_p3 when (or_cond6_fu_867_p2(0) = '1') else 
        filter_buffer_0_2_s_reg_482;
    newSel13_fu_1001_p3 <= 
        reg_625 when (sel_tmp1_fu_759_p2(0) = '1') else 
        filter_buffer_0_1_s_reg_494;
    newSel14_fu_1009_p3 <= 
        filter_buffer_0_1_s_reg_494 when (or_cond2_fu_843_p2(0) = '1') else 
        newSel13_fu_1001_p3;
    newSel15_fu_1017_p3 <= 
        filter_buffer_0_1_s_reg_494 when (or_cond4_fu_855_p2(0) = '1') else 
        newSel14_fu_1009_p3;
    newSel16_fu_1025_p3 <= 
        reg_625 when (tmp_5_fu_808_p2(0) = '1') else 
        filter_buffer_0_0_s_reg_506;
    newSel17_fu_1033_p3 <= 
        filter_buffer_0_0_s_reg_506 when (or_cond_fu_831_p2(0) = '1') else 
        newSel16_fu_1025_p3;
    newSel18_fu_1231_p3 <= 
        filter_buffer2_2_2_s_fu_208 when (or_cond31_fu_1225_p2(0) = '1') else 
        reg_630;
    newSel19_fu_1239_p3 <= 
        filter_buffer2_2_1_s_fu_204 when (tmp_14_fu_1166_p2(0) = '1') else 
        reg_630;
    newSel1_fu_881_p3 <= 
        filter_buffer_2_1_s_reg_422 when (tmp_5_fu_808_p2(0) = '1') else 
        reg_625;
    newSel20_fu_1247_p3 <= 
        filter_buffer2_2_1_s_fu_204 when (or_cond25_fu_1189_p2(0) = '1') else 
        newSel19_fu_1239_p3;
    newSel21_fu_1255_p3 <= 
        newSel20_fu_1247_p3 when (or_cond29_fu_1213_p2(0) = '1') else 
        filter_buffer2_2_1_s_fu_204;
    newSel22_fu_1271_p3 <= 
        filter_buffer2_1_2_s_fu_196 when (sel_tmp25_fu_1134_p2(0) = '1') else 
        reg_630;
    newSel23_fu_1279_p3 <= 
        newSel22_fu_1271_p3 when (or_cond27_fu_1201_p2(0) = '1') else 
        filter_buffer2_1_2_s_fu_196;
    newSel24_fu_1287_p3 <= 
        filter_buffer2_1_2_s_fu_196 when (or_cond29_fu_1213_p2(0) = '1') else 
        newSel23_fu_1279_p3;
    newSel25_fu_1295_p3 <= 
        reg_630 when (sel_tmp25_fu_1134_p2(0) = '1') else 
        filter_buffer2_1_1_s_fu_192;
    newSel26_fu_1303_p3 <= 
        filter_buffer2_1_1_s_fu_192 when (or_cond29_fu_1213_p2(0) = '1') else 
        newSel25_fu_1295_p3;
    newSel27_fu_1327_p3 <= 
        filter_buffer2_0_2_s_fu_184 when (sel_tmp22_fu_1117_p2(0) = '1') else 
        reg_630;
    newSel28_fu_1335_p3 <= 
        filter_buffer2_0_2_s_fu_184 when (or_cond27_fu_1201_p2(0) = '1') else 
        newSel27_fu_1327_p3;
    newSel29_fu_1343_p3 <= 
        filter_buffer2_0_2_s_fu_184 when (or_cond29_fu_1213_p2(0) = '1') else 
        newSel28_fu_1335_p3;
    newSel2_fu_889_p3 <= 
        filter_buffer_2_1_s_reg_422 when (or_cond_fu_831_p2(0) = '1') else 
        newSel1_fu_881_p3;
    newSel30_fu_1351_p3 <= 
        newSel29_fu_1343_p3 when (or_cond31_fu_1225_p2(0) = '1') else 
        filter_buffer2_0_2_s_fu_184;
    newSel31_fu_1359_p3 <= 
        reg_630 when (sel_tmp22_fu_1117_p2(0) = '1') else 
        filter_buffer2_0_1_s_fu_180;
    newSel32_fu_1367_p3 <= 
        filter_buffer2_0_1_s_fu_180 when (or_cond27_fu_1201_p2(0) = '1') else 
        newSel31_fu_1359_p3;
    newSel33_fu_1375_p3 <= 
        filter_buffer2_0_1_s_fu_180 when (or_cond29_fu_1213_p2(0) = '1') else 
        newSel32_fu_1367_p3;
    newSel34_fu_1383_p3 <= 
        reg_630 when (tmp_14_fu_1166_p2(0) = '1') else 
        filter_buffer2_0_0_s_fu_176;
    newSel35_fu_1391_p3 <= 
        filter_buffer2_0_0_s_fu_176 when (or_cond25_fu_1189_p2(0) = '1') else 
        newSel34_fu_1383_p3;
    newSel36_fu_2594_p3 <= 
        res_3_fu_2582_p2 when (sel_tmp35_reg_3480(0) = '1') else 
        ap_const_lv8_0;
    newSel37_fu_2601_p3 <= 
        res_fu_2588_p2 when (tmp_9_reg_3475(0) = '1') else 
        ap_const_lv8_0;
    newSel38_fu_2608_p3 <= 
        newSel36_fu_2594_p3 when (or_cond7_reg_3485(0) = '1') else 
        newSel37_fu_2601_p3;
    newSel39_fu_2615_p3 <= 
        res_3_fu_2582_p2 when (sel_tmp37_reg_3495(0) = '1') else 
        ap_const_lv8_0;
    newSel3_fu_897_p3 <= 
        newSel2_fu_889_p3 when (or_cond4_fu_855_p2(0) = '1') else 
        filter_buffer_2_1_s_reg_422;
    newSel40_fu_2622_p3 <= 
        res_fu_2588_p2 when (tmp_16_reg_3490(0) = '1') else 
        ap_const_lv8_0;
    newSel41_fu_2629_p3 <= 
        newSel39_fu_2615_p3 when (or_cond8_reg_3500(0) = '1') else 
        newSel40_fu_2622_p3;
    newSel42_fu_2648_p3 <= 
        res_3_0_1_fu_2636_p2 when (sel_tmp39_reg_3510(0) = '1') else 
        ap_const_lv8_0;
    newSel43_fu_2655_p3 <= 
        res_0_1_fu_2642_p2 when (tmp_23_0_1_reg_3505(0) = '1') else 
        ap_const_lv8_0;
    newSel44_fu_2662_p3 <= 
        newSel42_fu_2648_p3 when (or_cond9_reg_3515(0) = '1') else 
        newSel43_fu_2655_p3;
    newSel45_fu_2669_p3 <= 
        res_3_0_1_fu_2636_p2 when (sel_tmp41_reg_3525(0) = '1') else 
        ap_const_lv8_0;
    newSel46_fu_2676_p3 <= 
        res_0_1_fu_2642_p2 when (tmp_26_0_1_reg_3520(0) = '1') else 
        ap_const_lv8_0;
    newSel47_fu_2683_p3 <= 
        newSel45_fu_2669_p3 when (or_cond10_reg_3530(0) = '1') else 
        newSel46_fu_2676_p3;
    newSel48_fu_2702_p3 <= 
        res_3_0_2_fu_2690_p2 when (sel_tmp43_reg_3540(0) = '1') else 
        ap_const_lv8_0;
    newSel49_fu_2709_p3 <= 
        res_0_2_fu_2696_p2 when (tmp_23_0_2_reg_3535(0) = '1') else 
        ap_const_lv8_0;
    newSel4_fu_913_p3 <= 
        filter_buffer_1_2_s_reg_446 when (sel_tmp7_fu_776_p2(0) = '1') else 
        reg_625;
    newSel50_fu_2716_p3 <= 
        newSel48_fu_2702_p3 when (or_cond11_reg_3545(0) = '1') else 
        newSel49_fu_2709_p3;
    newSel51_fu_2723_p3 <= 
        res_3_0_2_fu_2690_p2 when (sel_tmp45_reg_3555(0) = '1') else 
        ap_const_lv8_0;
    newSel52_fu_2730_p3 <= 
        res_0_2_fu_2696_p2 when (tmp_26_0_2_reg_3550(0) = '1') else 
        ap_const_lv8_0;
    newSel53_fu_2737_p3 <= 
        newSel51_fu_2723_p3 when (or_cond12_reg_3560(0) = '1') else 
        newSel52_fu_2730_p3;
    newSel54_fu_2756_p3 <= 
        res_3_1_fu_2744_p2 when (sel_tmp47_reg_3570(0) = '1') else 
        ap_const_lv8_0;
    newSel55_fu_2763_p3 <= 
        res_1_fu_2750_p2 when (tmp_23_1_reg_3565(0) = '1') else 
        ap_const_lv8_0;
    newSel56_fu_2770_p3 <= 
        newSel54_fu_2756_p3 when (or_cond13_reg_3575(0) = '1') else 
        newSel55_fu_2763_p3;
    newSel57_fu_2777_p3 <= 
        res_3_1_fu_2744_p2 when (sel_tmp49_reg_3585(0) = '1') else 
        ap_const_lv8_0;
    newSel58_fu_2784_p3 <= 
        res_1_fu_2750_p2 when (tmp_26_1_reg_3580(0) = '1') else 
        ap_const_lv8_0;
    newSel59_fu_2791_p3 <= 
        newSel57_fu_2777_p3 when (or_cond14_reg_3590(0) = '1') else 
        newSel58_fu_2784_p3;
    newSel5_fu_921_p3 <= 
        newSel4_fu_913_p3 when (or_cond2_fu_843_p2(0) = '1') else 
        filter_buffer_1_2_s_reg_446;
    newSel60_fu_2810_p3 <= 
        res_3_1_1_fu_2798_p2 when (sel_tmp51_reg_3600(0) = '1') else 
        ap_const_lv8_0;
    newSel61_fu_2817_p3 <= 
        res_1_1_fu_2804_p2 when (tmp_23_1_1_reg_3595(0) = '1') else 
        ap_const_lv8_0;
    newSel62_fu_2824_p3 <= 
        newSel60_fu_2810_p3 when (or_cond15_reg_3605(0) = '1') else 
        newSel61_fu_2817_p3;
    newSel63_fu_2831_p3 <= 
        res_3_1_1_fu_2798_p2 when (sel_tmp53_reg_3615(0) = '1') else 
        ap_const_lv8_0;
    newSel64_fu_2838_p3 <= 
        res_1_1_fu_2804_p2 when (tmp_26_1_1_reg_3610(0) = '1') else 
        ap_const_lv8_0;
    newSel65_fu_2845_p3 <= 
        newSel63_fu_2831_p3 when (or_cond16_reg_3620(0) = '1') else 
        newSel64_fu_2838_p3;
    newSel66_fu_2864_p3 <= 
        res_3_1_2_fu_2852_p2 when (sel_tmp55_reg_3630(0) = '1') else 
        ap_const_lv8_0;
    newSel67_fu_2871_p3 <= 
        res_1_2_fu_2858_p2 when (tmp_23_1_2_reg_3625(0) = '1') else 
        ap_const_lv8_0;
    newSel68_fu_2878_p3 <= 
        newSel66_fu_2864_p3 when (or_cond17_reg_3635(0) = '1') else 
        newSel67_fu_2871_p3;
    newSel69_fu_2885_p3 <= 
        res_3_1_2_fu_2852_p2 when (sel_tmp57_reg_3645(0) = '1') else 
        ap_const_lv8_0;
    newSel6_fu_929_p3 <= 
        filter_buffer_1_2_s_reg_446 when (or_cond4_fu_855_p2(0) = '1') else 
        newSel5_fu_921_p3;
    newSel70_fu_2892_p3 <= 
        res_1_2_fu_2858_p2 when (tmp_26_1_2_reg_3640(0) = '1') else 
        ap_const_lv8_0;
    newSel71_fu_2899_p3 <= 
        newSel69_fu_2885_p3 when (or_cond18_reg_3650(0) = '1') else 
        newSel70_fu_2892_p3;
    newSel72_fu_2918_p3 <= 
        res_3_2_fu_2906_p2 when (sel_tmp59_reg_3660(0) = '1') else 
        ap_const_lv8_0;
    newSel73_fu_2925_p3 <= 
        res_s_fu_2912_p2 when (tmp_23_2_reg_3655(0) = '1') else 
        ap_const_lv8_0;
    newSel74_fu_2932_p3 <= 
        newSel72_fu_2918_p3 when (or_cond19_reg_3665(0) = '1') else 
        newSel73_fu_2925_p3;
    newSel75_fu_2939_p3 <= 
        res_3_2_fu_2906_p2 when (sel_tmp61_reg_3675(0) = '1') else 
        ap_const_lv8_0;
    newSel76_fu_2946_p3 <= 
        res_s_fu_2912_p2 when (tmp_26_2_reg_3670(0) = '1') else 
        ap_const_lv8_0;
    newSel77_fu_2953_p3 <= 
        newSel75_fu_2939_p3 when (or_cond20_reg_3680(0) = '1') else 
        newSel76_fu_2946_p3;
    newSel78_fu_2972_p3 <= 
        res_3_2_1_fu_2960_p2 when (sel_tmp63_reg_3690(0) = '1') else 
        ap_const_lv8_0;
    newSel79_fu_2979_p3 <= 
        res_235_1_fu_2966_p2 when (tmp_23_2_1_reg_3685(0) = '1') else 
        ap_const_lv8_0;
    newSel7_fu_937_p3 <= 
        reg_625 when (sel_tmp7_fu_776_p2(0) = '1') else 
        filter_buffer_1_1_s_reg_458;
    newSel80_fu_2986_p3 <= 
        newSel78_fu_2972_p3 when (or_cond21_reg_3695(0) = '1') else 
        newSel79_fu_2979_p3;
    newSel81_fu_2993_p3 <= 
        res_3_2_1_fu_2960_p2 when (sel_tmp65_reg_3705(0) = '1') else 
        ap_const_lv8_0;
    newSel82_fu_3000_p3 <= 
        res_235_1_fu_2966_p2 when (tmp_26_2_1_reg_3700(0) = '1') else 
        ap_const_lv8_0;
    newSel83_fu_3007_p3 <= 
        newSel81_fu_2993_p3 when (or_cond22_reg_3710(0) = '1') else 
        newSel82_fu_3000_p3;
    newSel84_fu_3026_p3 <= 
        res_3_2_2_fu_3014_p2 when (sel_tmp67_reg_3720(0) = '1') else 
        ap_const_lv8_0;
    newSel85_fu_3033_p3 <= 
        res_235_2_fu_3020_p2 when (tmp_23_2_2_reg_3715(0) = '1') else 
        ap_const_lv8_0;
    newSel86_fu_3040_p3 <= 
        newSel84_fu_3026_p3 when (or_cond23_reg_3725(0) = '1') else 
        newSel85_fu_3033_p3;
    newSel87_fu_3095_p3 <= 
        res_3_2_2_fu_3014_p2 when (sel_tmp69_reg_3735(0) = '1') else 
        ap_const_lv8_0;
    newSel88_fu_3102_p3 <= 
        res_235_2_fu_3020_p2 when (tmp_26_2_2_reg_3730(0) = '1') else 
        ap_const_lv8_0;
    newSel89_fu_3109_p3 <= 
        newSel87_fu_3095_p3 when (or_cond24_reg_3740(0) = '1') else 
        newSel88_fu_3102_p3;
    newSel8_fu_945_p3 <= 
        filter_buffer_1_1_s_reg_458 when (or_cond4_fu_855_p2(0) = '1') else 
        newSel7_fu_937_p3;
    newSel9_fu_969_p3 <= 
        filter_buffer_0_2_s_reg_482 when (sel_tmp1_fu_759_p2(0) = '1') else 
        reg_625;
    newSel_fu_873_p3 <= 
        filter_buffer_2_2_s_reg_410 when (or_cond6_fu_867_p2(0) = '1') else 
        reg_625;
    next_mul1_fu_1059_p2 <= std_logic_vector(unsigned(phi_mul1_reg_553) + unsigned(ap_const_lv8_16));
    next_mul_fu_701_p2 <= std_logic_vector(unsigned(phi_mul_reg_530) + unsigned(ap_const_lv8_16));
    or_cond10_fu_1582_p2 <= (sel_tmp41_fu_1576_p2 or tmp_24_0_1_fu_1552_p2);
    or_cond11_fu_1618_p2 <= (sel_tmp43_fu_1612_p2 or tmp_21_0_2_fu_1588_p2);
    or_cond12_fu_1654_p2 <= (sel_tmp45_fu_1648_p2 or tmp_24_0_2_fu_1624_p2);
    or_cond13_fu_1690_p2 <= (sel_tmp47_fu_1684_p2 or tmp_21_1_fu_1660_p2);
    or_cond14_fu_1726_p2 <= (sel_tmp49_fu_1720_p2 or tmp_24_1_fu_1696_p2);
    or_cond15_fu_1762_p2 <= (sel_tmp51_fu_1756_p2 or tmp_21_1_1_fu_1732_p2);
    or_cond16_fu_1798_p2 <= (sel_tmp53_fu_1792_p2 or tmp_24_1_1_fu_1768_p2);
    or_cond17_fu_1834_p2 <= (sel_tmp55_fu_1828_p2 or tmp_21_1_2_fu_1804_p2);
    or_cond18_fu_1870_p2 <= (sel_tmp57_fu_1864_p2 or tmp_24_1_2_fu_1840_p2);
    or_cond19_fu_1906_p2 <= (sel_tmp59_fu_1900_p2 or tmp_21_2_fu_1876_p2);
    or_cond1_fu_837_p2 <= (tmp_5_fu_808_p2 or sel_tmp12_fu_798_p2);
    or_cond20_fu_1942_p2 <= (sel_tmp61_fu_1936_p2 or tmp_24_2_fu_1912_p2);
    or_cond21_fu_1978_p2 <= (sel_tmp63_fu_1972_p2 or tmp_21_2_1_fu_1948_p2);
    or_cond22_fu_2014_p2 <= (sel_tmp65_fu_2008_p2 or tmp_24_2_1_fu_1984_p2);
    or_cond23_fu_2050_p2 <= (sel_tmp67_fu_2044_p2 or tmp_21_2_2_fu_2020_p2);
    or_cond24_fu_2086_p2 <= (sel_tmp69_fu_2080_p2 or tmp_24_2_2_fu_2056_p2);
    or_cond25_fu_1189_p2 <= (sel_tmp32_fu_1183_p2 or sel_tmp31_fu_1177_p2);
    or_cond26_fu_1195_p2 <= (tmp_14_fu_1166_p2 or sel_tmp29_fu_1156_p2);
    or_cond27_fu_1201_p2 <= (sel_tmp25_fu_1134_p2 or sel_tmp24_fu_1128_p2);
    or_cond28_fu_1207_p2 <= (sel_tmp22_fu_1117_p2 or sel_tmp20_fu_1106_p2);
    or_cond29_fu_1213_p2 <= (or_cond25_fu_1189_p2 or or_cond26_fu_1195_p2);
    or_cond2_fu_843_p2 <= (sel_tmp7_fu_776_p2 or sel_tmp4_fu_770_p2);
    or_cond30_fu_1219_p2 <= (or_cond27_fu_1201_p2 or or_cond28_fu_1207_p2);
    or_cond31_fu_1225_p2 <= (or_cond29_fu_1213_p2 or or_cond30_fu_1219_p2);
    or_cond3_fu_849_p2 <= (sel_tmp1_fu_759_p2 or sel_tmp6_fu_748_p2);
    or_cond4_fu_855_p2 <= (or_cond_fu_831_p2 or or_cond1_fu_837_p2);
    or_cond5_fu_861_p2 <= (or_cond2_fu_843_p2 or or_cond3_fu_849_p2);
    or_cond6_fu_867_p2 <= (or_cond4_fu_855_p2 or or_cond5_fu_861_p2);
    or_cond7_fu_1474_p2 <= (sel_tmp35_fu_1468_p2 or tmp_s_fu_1444_p2);
    or_cond8_fu_1510_p2 <= (sel_tmp37_fu_1504_p2 or tmp_10_fu_1480_p2);
    or_cond9_fu_1546_p2 <= (sel_tmp39_fu_1540_p2 or tmp_21_0_1_fu_1516_p2);
    or_cond_20_fu_2164_p2 <= (icmp_fu_2142_p2 and icmp1_fu_2158_p2);
    or_cond_fu_831_p2 <= (sel_tmp15_fu_825_p2 or sel_tmp14_fu_819_p2);
    p_shl5_cast_fu_2246_p1 <= std_logic_vector(resize(unsigned(p_shl5_fu_2239_p3),19));
    p_shl5_fu_2239_p3 <= (ap_reg_ppstg_r_mid2_reg_3761_pp2_it5 & ap_const_lv5_0);
    p_shl_cast_fu_2235_p1 <= std_logic_vector(resize(unsigned(p_shl_fu_2228_p3),19));
    p_shl_fu_2228_p3 <= (ap_reg_ppstg_r_mid2_reg_3761_pp2_it5 & ap_const_lv9_0);
    
    addconv_fu_2276_p2_temp <= signed(addconv_fu_2276_p2);
    p_sum2_cast_fu_2282_p1 <= std_logic_vector(resize(addconv_fu_2276_p2_temp,33));

    p_sum_cast_cast_fu_2194_p1 <= std_logic_vector(resize(unsigned(p_sum_fu_2188_p2),33));
    p_sum_fu_2188_p2 <= std_logic_vector(unsigned(tmp_1_fu_2179_p2) + unsigned(tmp_7_cast_fu_2185_p1));
    
    pixel_in25_sum1_fu_2213_p2_temp <= signed(pixel_in25_sum1_fu_2213_p2);
    pixel_in25_sum1_cast_fu_2218_p1 <= std_logic_vector(resize(pixel_in25_sum1_fu_2213_p2_temp,64));

    pixel_in25_sum1_fu_2213_p2 <= std_logic_vector(unsigned(tmp_10_cast_reg_3174) + unsigned(p_sum_cast_cast_fu_2194_p1));
    
    pixel_in25_sum_fu_667_p2_temp <= signed(pixel_in25_sum_fu_667_p2);
    pixel_in25_sum_cast_fu_673_p1 <= std_logic_vector(resize(pixel_in25_sum_fu_667_p2_temp,64));

    
    pixel_in2_0_data_reg_temp <= signed(pixel_in2_0_data_reg);
    pixel_in25_sum_fu_667_p0 <= std_logic_vector(resize(pixel_in2_0_data_reg_temp,33));

    pixel_in25_sum_fu_667_p2 <= std_logic_vector(unsigned(pixel_in25_sum_fu_667_p0) + unsigned(ap_const_lv33_20020));

    -- pixel_in2_0_ack_out assign process. --
    pixel_in2_0_ack_out_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_st35_fsm_8 = ap_CS_fsm)) then 
            pixel_in2_0_ack_out <= ap_const_logic_1;
        else 
            pixel_in2_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;

    
    pixel_in3_sum1_fu_2198_p2_temp <= signed(pixel_in3_sum1_fu_2198_p2);
    pixel_in3_sum1_cast_fu_2203_p1 <= std_logic_vector(resize(pixel_in3_sum1_fu_2198_p2_temp,64));

    pixel_in3_sum1_fu_2198_p2 <= std_logic_vector(unsigned(tmp_21_cast_reg_3179) + unsigned(p_sum_cast_cast_fu_2194_p1));
    
    pixel_in3_sum_fu_651_p2_temp <= signed(pixel_in3_sum_fu_651_p2);
    pixel_in3_sum_cast_fu_657_p1 <= std_logic_vector(resize(pixel_in3_sum_fu_651_p2_temp,64));

    
    pixel_in_0_data_reg_temp <= signed(pixel_in_0_data_reg);
    pixel_in3_sum_fu_651_p0 <= std_logic_vector(resize(pixel_in_0_data_reg_temp,33));

    pixel_in3_sum_fu_651_p2 <= std_logic_vector(unsigned(pixel_in3_sum_fu_651_p0) + unsigned(ap_const_lv33_20020));

    -- pixel_in_0_ack_out assign process. --
    pixel_in_0_ack_out_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_st35_fsm_8 = ap_CS_fsm)) then 
            pixel_in_0_ack_out <= ap_const_logic_1;
        else 
            pixel_in_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;

    
    pixel_out29_sum_fu_2301_p2_temp <= signed(pixel_out29_sum_fu_2301_p2);
    pixel_out29_sum_cast_fu_2306_p1 <= std_logic_vector(resize(pixel_out29_sum_fu_2301_p2_temp,64));

    pixel_out29_sum_fu_2301_p1 <= p_sum2_cast_fu_2282_p1;
    pixel_out29_sum_fu_2301_p2 <= std_logic_vector(unsigned(tmp_6_cast_reg_3164) + unsigned(pixel_out29_sum_fu_2301_p1));

    -- pixel_out2_0_ack_out assign process. --
    pixel_out2_0_ack_out_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_st35_fsm_8 = ap_CS_fsm)) then 
            pixel_out2_0_ack_out <= ap_const_logic_1;
        else 
            pixel_out2_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;

    
    pixel_out7_sum_fu_2286_p2_temp <= signed(pixel_out7_sum_fu_2286_p2);
    pixel_out7_sum_cast_fu_2291_p1 <= std_logic_vector(resize(pixel_out7_sum_fu_2286_p2_temp,64));

    pixel_out7_sum_fu_2286_p1 <= p_sum2_cast_fu_2282_p1;
    pixel_out7_sum_fu_2286_p2 <= std_logic_vector(unsigned(tmp_9_cast_reg_3169) + unsigned(pixel_out7_sum_fu_2286_p1));

    -- pixel_out_0_ack_out assign process. --
    pixel_out_0_ack_out_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_st35_fsm_8 = ap_CS_fsm)) then 
            pixel_out_0_ack_out <= ap_const_logic_1;
        else 
            pixel_out_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;

    r_mid2_fu_2124_p3 <= 
        r_s_fu_2118_p2 when (exitcond1_fu_2104_p2(0) = '1') else 
        r_phi_fu_579_p4;

    -- r_phi_fu_579_p4 assign process. --
    r_phi_fu_579_p4_assign_proc : process(ap_CS_fsm, r_reg_575, ap_reg_ppiten_pp2_it1, exitcond_flatten_reg_3745, r_mid2_reg_3761)
    begin
        if (((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1) and (ap_const_lv1_0 = exitcond_flatten_reg_3745))) then 
            r_phi_fu_579_p4 <= r_mid2_reg_3761;
        else 
            r_phi_fu_579_p4 <= r_reg_575;
        end if; 
    end process;

    r_s_fu_2118_p2 <= std_logic_vector(unsigned(r_phi_fu_579_p4) + unsigned(ap_const_lv9_1));
    res_0_1_fu_2642_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(res_3_0_1_fu_2636_p2));
    res_0_2_fu_2696_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(res_3_0_2_fu_2690_p2));
    res_1_1_fu_2804_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(res_3_1_1_fu_2798_p2));
    res_1_2_fu_2858_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(res_3_1_2_fu_2852_p2));
    res_1_fu_2750_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(res_3_1_fu_2744_p2));
    res_235_1_fu_2966_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(res_3_2_1_fu_2960_p2));
    res_235_2_fu_3020_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(res_3_2_2_fu_3014_p2));
    res_3_0_1_fu_2636_p2 <= std_logic_vector(unsigned(window_buffer2_M_0_1_3_fu_2417_p3) + unsigned(window_buffer_M_0_1_3_fu_2478_p3));
    res_3_0_2_fu_2690_p2 <= std_logic_vector(unsigned(window_buffer2_M_0_2_fu_2411_p3) + unsigned(window_buffer_M_0_2_fu_2472_p3));
    res_3_1_1_fu_2798_p2 <= std_logic_vector(unsigned(window_buffer2_M_1_1_3_fu_2397_p3) + unsigned(window_buffer_M_1_1_3_fu_2458_p3));
    res_3_1_2_fu_2852_p2 <= std_logic_vector(unsigned(window_buffer2_M_1_2_fu_2391_p3) + unsigned(window_buffer_M_1_2_fu_2452_p3));
    res_3_1_fu_2744_p2 <= std_logic_vector(unsigned(window_buffer2_M_1_0_1_fu_2404_p3) + unsigned(window_buffer_M_1_0_1_fu_2465_p3));
    res_3_2_1_fu_2960_p2 <= std_logic_vector(unsigned(window_buffer2_M_2_1_3_fu_2377_p3) + unsigned(window_buffer_M_2_1_3_fu_2438_p3));
    res_3_2_2_fu_3014_p2 <= std_logic_vector(unsigned(window_buffer2_M_2_2_fu_2370_p3) + unsigned(window_buffer_M_2_2_fu_2431_p3));
    res_3_2_fu_2906_p2 <= std_logic_vector(unsigned(window_buffer2_M_2_0_1_fu_2384_p3) + unsigned(window_buffer_M_2_0_1_fu_2445_p3));
    res_3_fu_2582_p2 <= std_logic_vector(unsigned(window_buffer2_M_0_0_1_fu_2424_p3) + unsigned(window_buffer_M_0_0_1_fu_2485_p3));
    res_fu_2588_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(res_3_fu_2582_p2));
    res_s_fu_2912_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(res_3_2_fu_2906_p2));
    sel_tmp10_fu_787_p2 <= "0" when (ap_reg_ppstg_p_t_reg_3214_pp0_it6 = ap_const_lv2_1) else "1";
    sel_tmp11_fu_792_p2 <= (sel_tmp8_fu_782_p2 and sel_tmp10_fu_787_p2);
    sel_tmp12_fu_798_p2 <= (sel_tmp11_fu_792_p2 and sel_tmp9_fu_754_p2);
    sel_tmp13_fu_814_p2 <= "1" when (tmp_3_reg_3223 = ap_const_lv2_0) else "0";
    sel_tmp14_fu_819_p2 <= (sel_tmp2_fu_765_p2 and sel_tmp13_fu_814_p2);
    sel_tmp15_fu_825_p2 <= (sel_tmp11_fu_792_p2 and sel_tmp13_fu_814_p2);
    sel_tmp16_fu_953_p3 <= 
        reg_625 when (sel_tmp14_fu_819_p2(0) = '1') else 
        filter_buffer_1_0_s_reg_470;
    sel_tmp17_fu_1085_p2 <= "1" when (ap_reg_ppstg_p_t2_reg_3349_pp1_it6 = ap_const_lv2_0) else "0";
    sel_tmp18_fu_1090_p2 <= "0" when (tmp_17_reg_3358 = ap_const_lv2_0) else "1";
    sel_tmp19_fu_1095_p2 <= "0" when (tmp_17_reg_3358 = ap_const_lv2_1) else "1";
    sel_tmp1_fu_759_p2 <= (sel_tmp_fu_727_p2 and sel_tmp9_fu_754_p2);
    sel_tmp20_fu_1106_p2 <= (tmp6_fu_1100_p2 and sel_tmp17_fu_1085_p2);
    sel_tmp21_fu_1112_p2 <= "1" when (tmp_17_reg_3358 = ap_const_lv2_1) else "0";
    sel_tmp22_fu_1117_p2 <= (sel_tmp17_fu_1085_p2 and sel_tmp21_fu_1112_p2);
    sel_tmp23_fu_1123_p2 <= "1" when (ap_reg_ppstg_p_t2_reg_3349_pp1_it6 = ap_const_lv2_1) else "0";
    sel_tmp24_fu_1128_p2 <= (tmp6_fu_1100_p2 and sel_tmp23_fu_1123_p2);
    sel_tmp25_fu_1134_p2 <= (sel_tmp23_fu_1123_p2 and sel_tmp21_fu_1112_p2);
    sel_tmp26_fu_1140_p2 <= "0" when (ap_reg_ppstg_p_t2_reg_3349_pp1_it6 = ap_const_lv2_0) else "1";
    sel_tmp27_fu_1145_p2 <= "0" when (ap_reg_ppstg_p_t2_reg_3349_pp1_it6 = ap_const_lv2_1) else "1";
    sel_tmp28_fu_1150_p2 <= (sel_tmp26_fu_1140_p2 and sel_tmp27_fu_1145_p2);
    sel_tmp29_fu_1156_p2 <= (sel_tmp28_fu_1150_p2 and sel_tmp21_fu_1112_p2);
    sel_tmp2_fu_765_p2 <= "1" when (ap_reg_ppstg_p_t_reg_3214_pp0_it6 = ap_const_lv2_1) else "0";
    sel_tmp30_fu_1172_p2 <= "1" when (tmp_17_reg_3358 = ap_const_lv2_0) else "0";
    sel_tmp31_fu_1177_p2 <= (sel_tmp23_fu_1123_p2 and sel_tmp30_fu_1172_p2);
    sel_tmp32_fu_1183_p2 <= (sel_tmp28_fu_1150_p2 and sel_tmp30_fu_1172_p2);
    sel_tmp33_fu_1311_p3 <= 
        reg_630 when (sel_tmp31_fu_1177_p2(0) = '1') else 
        filter_buffer2_1_0_s_fu_188;
    sel_tmp34_fu_1462_p2 <= (tmp_s_fu_1444_p2 xor ap_const_lv1_1);
    sel_tmp35_fu_1468_p2 <= (tmp_6_fu_1450_p2 and sel_tmp34_fu_1462_p2);
    sel_tmp36_fu_1498_p2 <= (tmp_10_fu_1480_p2 xor ap_const_lv1_1);
    sel_tmp37_fu_1504_p2 <= (tmp_15_fu_1486_p2 and sel_tmp36_fu_1498_p2);
    sel_tmp38_fu_1534_p2 <= (tmp_21_0_1_fu_1516_p2 xor ap_const_lv1_1);
    sel_tmp39_fu_1540_p2 <= (tmp_22_0_1_fu_1522_p2 and sel_tmp38_fu_1534_p2);
    sel_tmp3_fu_732_p2 <= "0" when (tmp_3_reg_3223 = ap_const_lv2_0) else "1";
    sel_tmp40_fu_1570_p2 <= (tmp_24_0_1_fu_1552_p2 xor ap_const_lv1_1);
    sel_tmp41_fu_1576_p2 <= (tmp_25_0_1_fu_1558_p2 and sel_tmp40_fu_1570_p2);
    sel_tmp42_fu_1606_p2 <= (tmp_21_0_2_fu_1588_p2 xor ap_const_lv1_1);
    sel_tmp43_fu_1612_p2 <= (tmp_22_0_2_fu_1594_p2 and sel_tmp42_fu_1606_p2);
    sel_tmp44_fu_1642_p2 <= (tmp_24_0_2_fu_1624_p2 xor ap_const_lv1_1);
    sel_tmp45_fu_1648_p2 <= (tmp_25_0_2_fu_1630_p2 and sel_tmp44_fu_1642_p2);
    sel_tmp46_fu_1678_p2 <= (tmp_21_1_fu_1660_p2 xor ap_const_lv1_1);
    sel_tmp47_fu_1684_p2 <= (tmp_22_1_fu_1666_p2 and sel_tmp46_fu_1678_p2);
    sel_tmp48_fu_1714_p2 <= (tmp_24_1_fu_1696_p2 xor ap_const_lv1_1);
    sel_tmp49_fu_1720_p2 <= (tmp_25_1_fu_1702_p2 and sel_tmp48_fu_1714_p2);
    sel_tmp4_fu_770_p2 <= (tmp_fu_742_p2 and sel_tmp2_fu_765_p2);
    sel_tmp50_fu_1750_p2 <= (tmp_21_1_1_fu_1732_p2 xor ap_const_lv1_1);
    sel_tmp51_fu_1756_p2 <= (tmp_22_1_1_fu_1738_p2 and sel_tmp50_fu_1750_p2);
    sel_tmp52_fu_1786_p2 <= (tmp_24_1_1_fu_1768_p2 xor ap_const_lv1_1);
    sel_tmp53_fu_1792_p2 <= (tmp_25_1_1_fu_1774_p2 and sel_tmp52_fu_1786_p2);
    sel_tmp54_fu_1822_p2 <= (tmp_21_1_2_fu_1804_p2 xor ap_const_lv1_1);
    sel_tmp55_fu_1828_p2 <= (tmp_22_1_2_fu_1810_p2 and sel_tmp54_fu_1822_p2);
    sel_tmp56_fu_1858_p2 <= (tmp_24_1_2_fu_1840_p2 xor ap_const_lv1_1);
    sel_tmp57_fu_1864_p2 <= (tmp_25_1_2_fu_1846_p2 and sel_tmp56_fu_1858_p2);
    sel_tmp58_fu_1894_p2 <= (tmp_21_2_fu_1876_p2 xor ap_const_lv1_1);
    sel_tmp59_fu_1900_p2 <= (tmp_22_2_fu_1882_p2 and sel_tmp58_fu_1894_p2);
    sel_tmp5_fu_737_p2 <= "0" when (tmp_3_reg_3223 = ap_const_lv2_1) else "1";
    sel_tmp60_fu_1930_p2 <= (tmp_24_2_fu_1912_p2 xor ap_const_lv1_1);
    sel_tmp61_fu_1936_p2 <= (tmp_25_2_fu_1918_p2 and sel_tmp60_fu_1930_p2);
    sel_tmp62_fu_1966_p2 <= (tmp_21_2_1_fu_1948_p2 xor ap_const_lv1_1);
    sel_tmp63_fu_1972_p2 <= (tmp_22_2_1_fu_1954_p2 and sel_tmp62_fu_1966_p2);
    sel_tmp64_fu_2002_p2 <= (tmp_24_2_1_fu_1984_p2 xor ap_const_lv1_1);
    sel_tmp65_fu_2008_p2 <= (tmp_25_2_1_fu_1990_p2 and sel_tmp64_fu_2002_p2);
    sel_tmp66_fu_2038_p2 <= (tmp_21_2_2_fu_2020_p2 xor ap_const_lv1_1);
    sel_tmp67_fu_2044_p2 <= (tmp_22_2_2_fu_2026_p2 and sel_tmp66_fu_2038_p2);
    sel_tmp68_fu_2074_p2 <= (tmp_24_2_2_fu_2056_p2 xor ap_const_lv1_1);
    sel_tmp69_fu_2080_p2 <= (tmp_25_2_2_fu_2062_p2 and sel_tmp68_fu_2074_p2);
    sel_tmp6_fu_748_p2 <= (tmp_fu_742_p2 and sel_tmp_fu_727_p2);
    sel_tmp7_fu_776_p2 <= (sel_tmp2_fu_765_p2 and sel_tmp9_fu_754_p2);
    sel_tmp8_fu_782_p2 <= "0" when (ap_reg_ppstg_p_t_reg_3214_pp0_it6 = ap_const_lv2_0) else "1";
    sel_tmp9_fu_754_p2 <= "1" when (tmp_3_reg_3223 = ap_const_lv2_1) else "0";
    sel_tmp_fu_727_p2 <= "1" when (ap_reg_ppstg_p_t_reg_3214_pp0_it6 = ap_const_lv2_0) else "0";
    store_data2_2_2_2_fu_3158_p2 <= std_logic_vector(unsigned(tmp28_fu_3152_p2) + unsigned(tmp24_fu_3128_p2));
    store_data_2_2_2_fu_3089_p2 <= std_logic_vector(unsigned(tmp21_fu_3083_p2) + unsigned(tmp17_fu_3059_p2));
    tmp15_fu_3047_p2 <= std_logic_vector(unsigned(newSel44_fu_2662_p3) + unsigned(newSel38_fu_2608_p3));
    tmp16_fu_3053_p2 <= std_logic_vector(unsigned(newSel50_fu_2716_p3) + unsigned(newSel56_fu_2770_p3));
    tmp17_fu_3059_p2 <= std_logic_vector(unsigned(tmp16_fu_3053_p2) + unsigned(tmp15_fu_3047_p2));
    tmp18_fu_3065_p2 <= std_logic_vector(unsigned(newSel62_fu_2824_p3) + unsigned(newSel68_fu_2878_p3));
    tmp19_fu_3071_p2 <= std_logic_vector(unsigned(newSel80_fu_2986_p3) + unsigned(newSel86_fu_3040_p3));
    tmp20_fu_3077_p2 <= std_logic_vector(unsigned(tmp19_fu_3071_p2) + unsigned(newSel74_fu_2932_p3));
    tmp21_fu_3083_p2 <= std_logic_vector(unsigned(tmp20_fu_3077_p2) + unsigned(tmp18_fu_3065_p2));
    tmp22_fu_3116_p2 <= std_logic_vector(unsigned(newSel47_fu_2683_p3) + unsigned(newSel41_fu_2629_p3));
    tmp23_fu_3122_p2 <= std_logic_vector(unsigned(newSel53_fu_2737_p3) + unsigned(newSel59_fu_2791_p3));
    tmp24_fu_3128_p2 <= std_logic_vector(unsigned(tmp23_fu_3122_p2) + unsigned(tmp22_fu_3116_p2));
    tmp25_fu_3134_p2 <= std_logic_vector(unsigned(newSel65_fu_2845_p3) + unsigned(newSel71_fu_2899_p3));
    tmp26_fu_3140_p2 <= std_logic_vector(unsigned(newSel83_fu_3007_p3) + unsigned(newSel89_fu_3109_p3));
    tmp27_fu_3146_p2 <= std_logic_vector(unsigned(tmp26_fu_3140_p2) + unsigned(newSel77_fu_2953_p3));
    tmp28_fu_3152_p2 <= std_logic_vector(unsigned(tmp27_fu_3146_p2) + unsigned(tmp25_fu_3134_p2));
    tmp29_fu_2266_p2 <= std_logic_vector(unsigned(col_assign_cast_fu_2263_p1) + unsigned(ap_const_lv11_43E));
    tmp6_fu_1100_p2 <= (sel_tmp18_fu_1090_p2 and sel_tmp19_fu_1095_p2);
    
    pixel_in2_0_data_reg_temp <= signed(pixel_in2_0_data_reg);
    tmp_10_cast_fu_643_p1 <= std_logic_vector(resize(pixel_in2_0_data_reg_temp,33));

    tmp_10_fu_1480_p2 <= "1" when (filter_buffer2_0_0_s_fu_176 = ap_const_lv8_0) else "0";
    tmp_13_fu_1162_p2 <= (ap_reg_ppstg_p_t2_reg_3349_pp1_it6 or tmp_17_reg_3358);
    tmp_14_fu_1166_p2 <= "1" when (tmp_13_fu_1162_p2 = ap_const_lv2_0) else "0";
    tmp_15_fu_1486_p2 <= "1" when (filter_buffer2_0_0_s_fu_176 = ap_const_lv8_1) else "0";
    tmp_16_fu_1492_p2 <= "1" when (filter_buffer2_0_0_s_fu_176 = ap_const_lv8_FF) else "0";
    tmp_17_fu_1081_p1 <= grp_fu_1065_p2(2 - 1 downto 0);
    tmp_18_fu_2132_p4 <= r_mid2_fu_2124_p3(8 downto 1);
    tmp_19_fu_2148_p4 <= c_mid2_fu_2110_p3(8 downto 1);
    tmp_1_fu_2179_p0 <= tmp_1_fu_2179_p00(9 - 1 downto 0);
    tmp_1_fu_2179_p00 <= std_logic_vector(resize(unsigned(r_mid2_reg_3761),18));
    tmp_1_fu_2179_p2 <= std_logic_vector(resize(unsigned(tmp_1_fu_2179_p0) * unsigned(ap_const_lv18_1E2), 18));
    tmp_21_0_1_fu_1516_p2 <= "1" when (filter_buffer_0_1_s_reg_494 = ap_const_lv8_0) else "0";
    tmp_21_0_2_fu_1588_p2 <= "1" when (filter_buffer_0_2_s_reg_482 = ap_const_lv8_0) else "0";
    tmp_21_1_1_fu_1732_p2 <= "1" when (filter_buffer_1_1_s_reg_458 = ap_const_lv8_0) else "0";
    tmp_21_1_2_fu_1804_p2 <= "1" when (filter_buffer_1_2_s_reg_446 = ap_const_lv8_0) else "0";
    tmp_21_1_fu_1660_p2 <= "1" when (filter_buffer_1_0_s_reg_470 = ap_const_lv8_0) else "0";
    tmp_21_2_1_fu_1948_p2 <= "1" when (filter_buffer_2_1_s_reg_422 = ap_const_lv8_0) else "0";
    tmp_21_2_2_fu_2020_p2 <= "1" when (filter_buffer_2_2_s_reg_410 = ap_const_lv8_0) else "0";
    tmp_21_2_fu_1876_p2 <= "1" when (filter_buffer_2_0_s_reg_434 = ap_const_lv8_0) else "0";
    
    pixel_in_0_data_reg_temp <= signed(pixel_in_0_data_reg);
    tmp_21_cast_fu_647_p1 <= std_logic_vector(resize(pixel_in_0_data_reg_temp,33));

    tmp_22_0_1_fu_1522_p2 <= "1" when (filter_buffer_0_1_s_reg_494 = ap_const_lv8_1) else "0";
    tmp_22_0_2_fu_1594_p2 <= "1" when (filter_buffer_0_2_s_reg_482 = ap_const_lv8_1) else "0";
    tmp_22_1_1_fu_1738_p2 <= "1" when (filter_buffer_1_1_s_reg_458 = ap_const_lv8_1) else "0";
    tmp_22_1_2_fu_1810_p2 <= "1" when (filter_buffer_1_2_s_reg_446 = ap_const_lv8_1) else "0";
    tmp_22_1_fu_1666_p2 <= "1" when (filter_buffer_1_0_s_reg_470 = ap_const_lv8_1) else "0";
    tmp_22_2_1_fu_1954_p2 <= "1" when (filter_buffer_2_1_s_reg_422 = ap_const_lv8_1) else "0";
    tmp_22_2_2_fu_2026_p2 <= "1" when (filter_buffer_2_2_s_reg_410 = ap_const_lv8_1) else "0";
    tmp_22_2_fu_1882_p2 <= "1" when (filter_buffer_2_0_s_reg_434 = ap_const_lv8_1) else "0";
    tmp_23_0_1_fu_1528_p2 <= "1" when (filter_buffer_0_1_s_reg_494 = ap_const_lv8_FF) else "0";
    tmp_23_0_2_fu_1600_p2 <= "1" when (filter_buffer_0_2_s_reg_482 = ap_const_lv8_FF) else "0";
    tmp_23_1_1_fu_1744_p2 <= "1" when (filter_buffer_1_1_s_reg_458 = ap_const_lv8_FF) else "0";
    tmp_23_1_2_fu_1816_p2 <= "1" when (filter_buffer_1_2_s_reg_446 = ap_const_lv8_FF) else "0";
    tmp_23_1_fu_1672_p2 <= "1" when (filter_buffer_1_0_s_reg_470 = ap_const_lv8_FF) else "0";
    tmp_23_2_1_fu_1960_p2 <= "1" when (filter_buffer_2_1_s_reg_422 = ap_const_lv8_FF) else "0";
    tmp_23_2_2_fu_2032_p2 <= "1" when (filter_buffer_2_2_s_reg_410 = ap_const_lv8_FF) else "0";
    tmp_23_2_fu_1888_p2 <= "1" when (filter_buffer_2_0_s_reg_434 = ap_const_lv8_FF) else "0";
    tmp_24_0_1_fu_1552_p2 <= "1" when (filter_buffer2_0_1_s_fu_180 = ap_const_lv8_0) else "0";
    tmp_24_0_2_fu_1624_p2 <= "1" when (filter_buffer2_0_2_s_fu_184 = ap_const_lv8_0) else "0";
    tmp_24_1_1_fu_1768_p2 <= "1" when (filter_buffer2_1_1_s_fu_192 = ap_const_lv8_0) else "0";
    tmp_24_1_2_fu_1840_p2 <= "1" when (filter_buffer2_1_2_s_fu_196 = ap_const_lv8_0) else "0";
    tmp_24_1_fu_1696_p2 <= "1" when (filter_buffer2_1_0_s_fu_188 = ap_const_lv8_0) else "0";
    tmp_24_2_1_fu_1984_p2 <= "1" when (filter_buffer2_2_1_s_fu_204 = ap_const_lv8_0) else "0";
    tmp_24_2_2_fu_2056_p2 <= "1" when (filter_buffer2_2_2_s_fu_208 = ap_const_lv8_0) else "0";
    tmp_24_2_fu_1912_p2 <= "1" when (filter_buffer2_2_0_s_fu_200 = ap_const_lv8_0) else "0";
    tmp_25_0_1_fu_1558_p2 <= "1" when (filter_buffer2_0_1_s_fu_180 = ap_const_lv8_1) else "0";
    tmp_25_0_2_fu_1630_p2 <= "1" when (filter_buffer2_0_2_s_fu_184 = ap_const_lv8_1) else "0";
    tmp_25_1_1_fu_1774_p2 <= "1" when (filter_buffer2_1_1_s_fu_192 = ap_const_lv8_1) else "0";
    tmp_25_1_2_fu_1846_p2 <= "1" when (filter_buffer2_1_2_s_fu_196 = ap_const_lv8_1) else "0";
    tmp_25_1_fu_1702_p2 <= "1" when (filter_buffer2_1_0_s_fu_188 = ap_const_lv8_1) else "0";
    tmp_25_2_1_fu_1990_p2 <= "1" when (filter_buffer2_2_1_s_fu_204 = ap_const_lv8_1) else "0";
    tmp_25_2_2_fu_2062_p2 <= "1" when (filter_buffer2_2_2_s_fu_208 = ap_const_lv8_1) else "0";
    tmp_25_2_fu_1918_p2 <= "1" when (filter_buffer2_2_0_s_fu_200 = ap_const_lv8_1) else "0";
    tmp_26_0_1_fu_1564_p2 <= "1" when (filter_buffer2_0_1_s_fu_180 = ap_const_lv8_FF) else "0";
    tmp_26_0_2_fu_1636_p2 <= "1" when (filter_buffer2_0_2_s_fu_184 = ap_const_lv8_FF) else "0";
    tmp_26_1_1_fu_1780_p2 <= "1" when (filter_buffer2_1_1_s_fu_192 = ap_const_lv8_FF) else "0";
    tmp_26_1_2_fu_1852_p2 <= "1" when (filter_buffer2_1_2_s_fu_196 = ap_const_lv8_FF) else "0";
    tmp_26_1_fu_1708_p2 <= "1" when (filter_buffer2_1_0_s_fu_188 = ap_const_lv8_FF) else "0";
    tmp_26_2_1_fu_1996_p2 <= "1" when (filter_buffer2_2_1_s_fu_204 = ap_const_lv8_FF) else "0";
    tmp_26_2_2_fu_2068_p2 <= "1" when (filter_buffer2_2_2_s_fu_208 = ap_const_lv8_FF) else "0";
    tmp_26_2_fu_1924_p2 <= "1" when (filter_buffer2_2_0_s_fu_200 = ap_const_lv8_FF) else "0";
    tmp_2_fu_804_p2 <= (ap_reg_ppstg_p_t_reg_3214_pp0_it6 or tmp_3_reg_3223);
    tmp_3_fu_723_p1 <= grp_fu_707_p2(2 - 1 downto 0);
    tmp_4_fu_2250_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_2235_p1) - unsigned(p_shl5_cast_fu_2246_p1));
    tmp_5_fu_808_p2 <= "1" when (tmp_2_fu_804_p2 = ap_const_lv2_0) else "0";
    
    pixel_out2_0_data_reg_temp <= signed(pixel_out2_0_data_reg);
    tmp_6_cast_fu_635_p1 <= std_logic_vector(resize(pixel_out2_0_data_reg_temp,33));

    tmp_6_fu_1450_p2 <= "1" when (filter_buffer_0_0_s_reg_506 = ap_const_lv8_1) else "0";
    tmp_7_cast_fu_2185_p1 <= std_logic_vector(resize(unsigned(c_mid2_reg_3754),18));
    tmp_7_fu_2256_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_c_mid2_reg_3754_pp2_it5),64));
    
    pixel_out_0_data_reg_temp <= signed(pixel_out_0_data_reg);
    tmp_9_cast_fu_639_p1 <= std_logic_vector(resize(pixel_out_0_data_reg_temp,33));

    tmp_9_fu_1456_p2 <= "1" when (filter_buffer_0_0_s_reg_506 = ap_const_lv8_FF) else "0";
    tmp_fu_742_p2 <= (sel_tmp3_fu_732_p2 and sel_tmp5_fu_737_p2);
    tmp_s_fu_1444_p2 <= "1" when (filter_buffer_0_0_s_reg_506 = ap_const_lv8_0) else "0";

    -- user_axi_in2_ARADDR assign process. --
    user_axi_in2_ARADDR_assign_proc : process(filter_base2_reg_3190, user_axi_in2_addr_reg_3806, ap_reg_ioackin_user_axi_in2_ARREADY, ap_sig_bdd_1341, ap_sig_bdd_1328)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_user_axi_in2_ARREADY)) then
            if (ap_sig_bdd_1328) then 
                user_axi_in2_ARADDR <= user_axi_in2_addr_reg_3806;
            elsif (ap_sig_bdd_1341) then 
                user_axi_in2_ARADDR <= filter_base2_reg_3190;
            else 
                user_axi_in2_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            user_axi_in2_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    user_axi_in2_ARBURST <= ap_const_lv2_0;
    user_axi_in2_ARCACHE <= ap_const_lv4_0;
    user_axi_in2_ARID <= ap_const_lv1_0;

    -- user_axi_in2_ARLEN assign process. --
    user_axi_in2_ARLEN_assign_proc : process(ap_reg_ioackin_user_axi_in2_ARREADY, ap_sig_bdd_1341, ap_sig_bdd_1328)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_user_axi_in2_ARREADY)) then
            if (ap_sig_bdd_1328) then 
                user_axi_in2_ARLEN <= ap_const_lv32_1;
            elsif (ap_sig_bdd_1341) then 
                user_axi_in2_ARLEN <= ap_const_lv32_9;
            else 
                user_axi_in2_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            user_axi_in2_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    user_axi_in2_ARLOCK <= ap_const_lv2_0;
    user_axi_in2_ARPROT <= ap_const_lv3_0;
    user_axi_in2_ARQOS <= ap_const_lv4_0;
    user_axi_in2_ARREGION <= ap_const_lv4_0;
    user_axi_in2_ARSIZE <= ap_const_lv3_0;
    user_axi_in2_ARUSER <= ap_const_lv1_0;

    -- user_axi_in2_ARVALID assign process. --
    user_axi_in2_ARVALID_assign_proc : process(ap_CS_fsm, exitcond_reg_3331, isIter_reg_3340, ap_reg_ppiten_pp1_it1, ap_sig_bdd_755, ap_reg_ppiten_pp1_it6, ap_reg_ppiten_pp2_it7, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1, ap_reg_ppiten_pp2_it2, ap_sig_bdd_811, ap_sig_bdd_857, ap_reg_ppiten_pp2_it12, ap_reg_ioackin_user_axi_in2_ARREADY)
    begin
        if ((((ap_ST_pp1_stg0_fsm_4 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond_reg_3331) and not((ap_const_lv1_0 = isIter_reg_3340)) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_sig_bdd_755 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it6))) and (ap_const_logic_0 = ap_reg_ioackin_user_axi_in2_ARREADY)) or ((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))) and (ap_const_logic_0 = ap_reg_ioackin_user_axi_in2_ARREADY)))) then 
            user_axi_in2_ARVALID <= ap_const_logic_1;
        else 
            user_axi_in2_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    user_axi_in2_AWADDR <= ap_const_lv32_0;
    user_axi_in2_AWBURST <= ap_const_lv2_0;
    user_axi_in2_AWCACHE <= ap_const_lv4_0;
    user_axi_in2_AWID <= ap_const_lv1_0;
    user_axi_in2_AWLEN <= ap_const_lv32_0;
    user_axi_in2_AWLOCK <= ap_const_lv2_0;
    user_axi_in2_AWPROT <= ap_const_lv3_0;
    user_axi_in2_AWQOS <= ap_const_lv4_0;
    user_axi_in2_AWREGION <= ap_const_lv4_0;
    user_axi_in2_AWSIZE <= ap_const_lv3_0;
    user_axi_in2_AWUSER <= ap_const_lv1_0;
    user_axi_in2_AWVALID <= ap_const_logic_0;
    user_axi_in2_BREADY <= ap_const_logic_0;

    -- user_axi_in2_RREADY assign process. --
    user_axi_in2_RREADY_assign_proc : process(ap_CS_fsm, ap_sig_ioackin_user_axi_in_ARREADY, exitcond_reg_3331, isIter_reg_3340, ap_sig_ioackin_user_axi_in2_ARREADY, ap_reg_ppiten_pp1_it1, ap_reg_ppstg_exitcond_reg_3331_pp1_it5, ap_sig_bdd_755, ap_reg_ppiten_pp1_it6, ap_reg_ppiten_pp2_it7, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1, ap_reg_ppiten_pp2_it2, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it6, ap_sig_bdd_811, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8, ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8, ap_sig_ioackin_user_axi_out_AWREADY, ap_sig_ioackin_user_axi_out_WREADY, ap_sig_ioackin_user_axi_out2_AWREADY, ap_sig_ioackin_user_axi_out2_WREADY, ap_reg_ppiten_pp2_it9, ap_sig_bdd_857, ap_reg_ppiten_pp2_it12)
    begin
        if ((((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it6) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12))))) or ((ap_ST_pp1_stg0_fsm_4 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_3331_pp1_it5) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it6) and not((((ap_const_lv1_0 = exitcond_reg_3331) and not((ap_const_lv1_0 = isIter_reg_3340)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)) or (ap_sig_bdd_755 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it6))))))) then 
            user_axi_in2_RREADY <= ap_const_logic_1;
        else 
            user_axi_in2_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    user_axi_in2_WDATA <= ap_const_lv8_0;
    user_axi_in2_WID <= ap_const_lv1_0;
    user_axi_in2_WLAST <= ap_const_logic_0;
    user_axi_in2_WSTRB <= ap_const_lv1_0;
    user_axi_in2_WUSER <= ap_const_lv1_0;
    user_axi_in2_WVALID <= ap_const_logic_0;

    -- user_axi_in_ARADDR assign process. --
    user_axi_in_ARADDR_assign_proc : process(filter_base_reg_3184, user_axi_in_addr_reg_3800, ap_reg_ioackin_user_axi_in_ARREADY, ap_sig_bdd_1328, ap_sig_bdd_1315)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_user_axi_in_ARREADY)) then
            if (ap_sig_bdd_1328) then 
                user_axi_in_ARADDR <= user_axi_in_addr_reg_3800;
            elsif (ap_sig_bdd_1315) then 
                user_axi_in_ARADDR <= filter_base_reg_3184;
            else 
                user_axi_in_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            user_axi_in_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    user_axi_in_ARBURST <= ap_const_lv2_0;
    user_axi_in_ARCACHE <= ap_const_lv4_0;
    user_axi_in_ARID <= ap_const_lv1_0;

    -- user_axi_in_ARLEN assign process. --
    user_axi_in_ARLEN_assign_proc : process(ap_reg_ioackin_user_axi_in_ARREADY, ap_sig_bdd_1328, ap_sig_bdd_1315)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_user_axi_in_ARREADY)) then
            if (ap_sig_bdd_1328) then 
                user_axi_in_ARLEN <= ap_const_lv32_1;
            elsif (ap_sig_bdd_1315) then 
                user_axi_in_ARLEN <= ap_const_lv32_9;
            else 
                user_axi_in_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            user_axi_in_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    user_axi_in_ARLOCK <= ap_const_lv2_0;
    user_axi_in_ARPROT <= ap_const_lv3_0;
    user_axi_in_ARQOS <= ap_const_lv4_0;
    user_axi_in_ARREGION <= ap_const_lv4_0;
    user_axi_in_ARSIZE <= ap_const_lv3_0;
    user_axi_in_ARUSER <= ap_const_lv1_0;

    -- user_axi_in_ARVALID assign process. --
    user_axi_in_ARVALID_assign_proc : process(ap_CS_fsm, exitcond8_reg_3196, isIter0_reg_3205, ap_reg_ppiten_pp0_it1, ap_sig_bdd_710, ap_reg_ppiten_pp0_it6, ap_reg_ppiten_pp2_it7, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1, ap_reg_ppiten_pp2_it2, ap_sig_bdd_811, ap_sig_bdd_857, ap_reg_ppiten_pp2_it12, ap_reg_ioackin_user_axi_in_ARREADY)
    begin
        if ((((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (exitcond8_reg_3196 = ap_const_lv1_0) and not((ap_const_lv1_0 = isIter0_reg_3205)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_710 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6))) and (ap_const_logic_0 = ap_reg_ioackin_user_axi_in_ARREADY)) or ((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2) and (ap_const_logic_0 = ap_reg_ioackin_user_axi_in_ARREADY) and not((((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12))))))) then 
            user_axi_in_ARVALID <= ap_const_logic_1;
        else 
            user_axi_in_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    user_axi_in_AWADDR <= ap_const_lv32_0;
    user_axi_in_AWBURST <= ap_const_lv2_0;
    user_axi_in_AWCACHE <= ap_const_lv4_0;
    user_axi_in_AWID <= ap_const_lv1_0;
    user_axi_in_AWLEN <= ap_const_lv32_0;
    user_axi_in_AWLOCK <= ap_const_lv2_0;
    user_axi_in_AWPROT <= ap_const_lv3_0;
    user_axi_in_AWQOS <= ap_const_lv4_0;
    user_axi_in_AWREGION <= ap_const_lv4_0;
    user_axi_in_AWSIZE <= ap_const_lv3_0;
    user_axi_in_AWUSER <= ap_const_lv1_0;
    user_axi_in_AWVALID <= ap_const_logic_0;
    user_axi_in_BREADY <= ap_const_logic_0;

    -- user_axi_in_RREADY assign process. --
    user_axi_in_RREADY_assign_proc : process(ap_CS_fsm, exitcond8_reg_3196, isIter0_reg_3205, ap_sig_ioackin_user_axi_in_ARREADY, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_exitcond8_reg_3196_pp0_it5, ap_sig_bdd_710, ap_reg_ppiten_pp0_it6, ap_sig_ioackin_user_axi_in2_ARREADY, ap_reg_ppiten_pp2_it7, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1, ap_reg_ppiten_pp2_it2, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it6, ap_sig_bdd_811, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8, ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8, ap_sig_ioackin_user_axi_out_AWREADY, ap_sig_ioackin_user_axi_out_WREADY, ap_sig_ioackin_user_axi_out2_AWREADY, ap_sig_ioackin_user_axi_out2_WREADY, ap_reg_ppiten_pp2_it9, ap_sig_bdd_857, ap_reg_ppiten_pp2_it12)
    begin
        if ((((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond8_reg_3196_pp0_it5) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6) and not((((exitcond8_reg_3196 = ap_const_lv1_0) and not((ap_const_lv1_0 = isIter0_reg_3205)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_710 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6))))) or ((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it6) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12))))))) then 
            user_axi_in_RREADY <= ap_const_logic_1;
        else 
            user_axi_in_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    user_axi_in_WDATA <= ap_const_lv8_0;
    user_axi_in_WID <= ap_const_lv1_0;
    user_axi_in_WLAST <= ap_const_logic_0;
    user_axi_in_WSTRB <= ap_const_lv1_0;
    user_axi_in_WUSER <= ap_const_lv1_0;
    user_axi_in_WVALID <= ap_const_logic_0;
    user_axi_out2_ARADDR <= ap_const_lv32_0;
    user_axi_out2_ARBURST <= ap_const_lv2_0;
    user_axi_out2_ARCACHE <= ap_const_lv4_0;
    user_axi_out2_ARID <= ap_const_lv1_0;
    user_axi_out2_ARLEN <= ap_const_lv32_0;
    user_axi_out2_ARLOCK <= ap_const_lv2_0;
    user_axi_out2_ARPROT <= ap_const_lv3_0;
    user_axi_out2_ARQOS <= ap_const_lv4_0;
    user_axi_out2_ARREGION <= ap_const_lv4_0;
    user_axi_out2_ARSIZE <= ap_const_lv3_0;
    user_axi_out2_ARUSER <= ap_const_lv1_0;
    user_axi_out2_ARVALID <= ap_const_logic_0;
    user_axi_out2_AWADDR <= ap_reg_ppstg_user_axi_out2_addr_reg_3841_pp2_it8;
    user_axi_out2_AWBURST <= ap_const_lv2_0;
    user_axi_out2_AWCACHE <= ap_const_lv4_0;
    user_axi_out2_AWID <= ap_const_lv1_0;
    user_axi_out2_AWLEN <= ap_const_lv32_1;
    user_axi_out2_AWLOCK <= ap_const_lv2_0;
    user_axi_out2_AWPROT <= ap_const_lv3_0;
    user_axi_out2_AWQOS <= ap_const_lv4_0;
    user_axi_out2_AWREGION <= ap_const_lv4_0;
    user_axi_out2_AWSIZE <= ap_const_lv3_0;
    user_axi_out2_AWUSER <= ap_const_lv1_0;

    -- user_axi_out2_AWVALID assign process. --
    user_axi_out2_AWVALID_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp2_it7, ap_sig_bdd_811, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8, ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8, ap_reg_ppiten_pp2_it9, ap_sig_bdd_857, ap_reg_ppiten_pp2_it12, ap_reg_ioackin_user_axi_out2_AWREADY)
    begin
        if (((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9) and not((((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))) and (ap_const_logic_0 = ap_reg_ioackin_user_axi_out2_AWREADY))) then 
            user_axi_out2_AWVALID <= ap_const_logic_1;
        else 
            user_axi_out2_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    -- user_axi_out2_BREADY assign process. --
    user_axi_out2_BREADY_assign_proc : process(ap_CS_fsm, ap_sig_ioackin_user_axi_in_ARREADY, ap_sig_ioackin_user_axi_in2_ARREADY, ap_reg_ppiten_pp2_it7, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1, ap_reg_ppiten_pp2_it2, ap_sig_bdd_811, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8, ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8, ap_sig_ioackin_user_axi_out_AWREADY, ap_sig_ioackin_user_axi_out_WREADY, ap_sig_ioackin_user_axi_out2_AWREADY, ap_sig_ioackin_user_axi_out2_WREADY, ap_reg_ppiten_pp2_it9, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it11, ap_reg_ppstg_or_cond_20_reg_3791_pp2_it11, ap_sig_bdd_857, ap_reg_ppiten_pp2_it12)
    begin
        if (((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it11) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it11)) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))))) then 
            user_axi_out2_BREADY <= ap_const_logic_1;
        else 
            user_axi_out2_BREADY <= ap_const_logic_0;
        end if; 
    end process;

    user_axi_out2_RREADY <= ap_const_logic_0;
    user_axi_out2_WDATA <= store_data2_2_2_2_reg_3871;
    user_axi_out2_WID <= ap_const_lv1_0;
    user_axi_out2_WLAST <= ap_const_logic_0;
    user_axi_out2_WSTRB <= ap_const_lv1_1;
    user_axi_out2_WUSER <= ap_const_lv1_0;

    -- user_axi_out2_WVALID assign process. --
    user_axi_out2_WVALID_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp2_it7, ap_sig_bdd_811, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8, ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8, ap_reg_ppiten_pp2_it9, ap_sig_bdd_857, ap_reg_ppiten_pp2_it12, ap_reg_ioackin_user_axi_out2_WREADY)
    begin
        if (((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9) and not((((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))) and (ap_const_logic_0 = ap_reg_ioackin_user_axi_out2_WREADY))) then 
            user_axi_out2_WVALID <= ap_const_logic_1;
        else 
            user_axi_out2_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    user_axi_out_ARADDR <= ap_const_lv32_0;
    user_axi_out_ARBURST <= ap_const_lv2_0;
    user_axi_out_ARCACHE <= ap_const_lv4_0;
    user_axi_out_ARID <= ap_const_lv1_0;
    user_axi_out_ARLEN <= ap_const_lv32_0;
    user_axi_out_ARLOCK <= ap_const_lv2_0;
    user_axi_out_ARPROT <= ap_const_lv3_0;
    user_axi_out_ARQOS <= ap_const_lv4_0;
    user_axi_out_ARREGION <= ap_const_lv4_0;
    user_axi_out_ARSIZE <= ap_const_lv3_0;
    user_axi_out_ARUSER <= ap_const_lv1_0;
    user_axi_out_ARVALID <= ap_const_logic_0;
    user_axi_out_AWADDR <= ap_reg_ppstg_user_axi_out_addr_reg_3836_pp2_it8;
    user_axi_out_AWBURST <= ap_const_lv2_0;
    user_axi_out_AWCACHE <= ap_const_lv4_0;
    user_axi_out_AWID <= ap_const_lv1_0;
    user_axi_out_AWLEN <= ap_const_lv32_1;
    user_axi_out_AWLOCK <= ap_const_lv2_0;
    user_axi_out_AWPROT <= ap_const_lv3_0;
    user_axi_out_AWQOS <= ap_const_lv4_0;
    user_axi_out_AWREGION <= ap_const_lv4_0;
    user_axi_out_AWSIZE <= ap_const_lv3_0;
    user_axi_out_AWUSER <= ap_const_lv1_0;

    -- user_axi_out_AWVALID assign process. --
    user_axi_out_AWVALID_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp2_it7, ap_sig_bdd_811, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8, ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8, ap_reg_ppiten_pp2_it9, ap_sig_bdd_857, ap_reg_ppiten_pp2_it12, ap_reg_ioackin_user_axi_out_AWREADY)
    begin
        if (((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9) and not((((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))) and (ap_const_logic_0 = ap_reg_ioackin_user_axi_out_AWREADY))) then 
            user_axi_out_AWVALID <= ap_const_logic_1;
        else 
            user_axi_out_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    -- user_axi_out_BREADY assign process. --
    user_axi_out_BREADY_assign_proc : process(ap_CS_fsm, ap_sig_ioackin_user_axi_in_ARREADY, ap_sig_ioackin_user_axi_in2_ARREADY, ap_reg_ppiten_pp2_it7, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1, ap_reg_ppiten_pp2_it2, ap_sig_bdd_811, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8, ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8, ap_sig_ioackin_user_axi_out_AWREADY, ap_sig_ioackin_user_axi_out_WREADY, ap_sig_ioackin_user_axi_out2_AWREADY, ap_sig_ioackin_user_axi_out2_WREADY, ap_reg_ppiten_pp2_it9, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it11, ap_reg_ppstg_or_cond_20_reg_3791_pp2_it11, ap_sig_bdd_857, ap_reg_ppiten_pp2_it12)
    begin
        if (((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it11) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it11)) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12) and not((((((ap_const_logic_0 = ap_sig_ioackin_user_axi_in_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_user_axi_in2_ARREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it1))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out_WREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_AWREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_0 = ap_sig_ioackin_user_axi_out2_WREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9)) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))))) then 
            user_axi_out_BREADY <= ap_const_logic_1;
        else 
            user_axi_out_BREADY <= ap_const_logic_0;
        end if; 
    end process;

    user_axi_out_RREADY <= ap_const_logic_0;
    user_axi_out_WDATA <= store_data_2_2_2_reg_3866;
    user_axi_out_WID <= ap_const_lv1_0;
    user_axi_out_WLAST <= ap_const_logic_0;
    user_axi_out_WSTRB <= ap_const_lv1_1;
    user_axi_out_WUSER <= ap_const_lv1_0;

    -- user_axi_out_WVALID assign process. --
    user_axi_out_WVALID_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp2_it7, ap_sig_bdd_811, ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8, ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8, ap_reg_ppiten_pp2_it9, ap_sig_bdd_857, ap_reg_ppiten_pp2_it12, ap_reg_ioackin_user_axi_out_WREADY)
    begin
        if (((ap_ST_pp2_stg0_fsm_6 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_3745_pp2_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_20_reg_3791_pp2_it8)) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it9) and not((((ap_const_logic_1 = ap_reg_ppiten_pp2_it7) and ap_sig_bdd_811) or (ap_sig_bdd_857 and (ap_const_logic_1 = ap_reg_ppiten_pp2_it12)))) and (ap_const_logic_0 = ap_reg_ioackin_user_axi_out_WREADY))) then 
            user_axi_out_WVALID <= ap_const_logic_1;
        else 
            user_axi_out_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    window_buffer2_M_0_0_1_fu_2424_p3 <= 
        window_buffer2_M_0_0_fu_252 when (ap_reg_ppstg_icmp_reg_3769_pp2_it7(0) = '1') else 
        window_buffer2_M_0_0_2_fu_248;
    window_buffer2_M_0_1_3_fu_2417_p3 <= 
        window_buffer2_M_0_1_fu_256 when (ap_reg_ppstg_icmp_reg_3769_pp2_it7(0) = '1') else 
        window_buffer2_M_0_0_fu_252;
    window_buffer2_M_0_2_fu_2411_p3 <= 
        return_value_2_reg_3856 when (ap_reg_ppstg_icmp_reg_3769_pp2_it7(0) = '1') else 
        window_buffer2_M_0_1_fu_256;
    window_buffer2_M_1_0_1_fu_2404_p3 <= 
        window_buffer2_M_1_0_fu_264 when (ap_reg_ppstg_icmp_reg_3769_pp2_it7(0) = '1') else 
        window_buffer2_M_1_0_2_fu_260;
    window_buffer2_M_1_1_3_fu_2397_p3 <= 
        window_buffer2_M_1_1_fu_268 when (ap_reg_ppstg_icmp_reg_3769_pp2_it7(0) = '1') else 
        window_buffer2_M_1_0_fu_264;
    window_buffer2_M_1_2_fu_2391_p3 <= 
        return_value_3_reg_3861 when (ap_reg_ppstg_icmp_reg_3769_pp2_it7(0) = '1') else 
        window_buffer2_M_1_1_fu_268;
    window_buffer2_M_2_0_1_fu_2384_p3 <= 
        window_buffer2_M_2_0_fu_276 when (ap_reg_ppstg_icmp_reg_3769_pp2_it7(0) = '1') else 
        window_buffer2_M_2_0_2_fu_272;
    window_buffer2_M_2_1_3_fu_2377_p3 <= 
        window_buffer2_M_2_1_fu_280 when (ap_reg_ppstg_icmp_reg_3769_pp2_it7(0) = '1') else 
        window_buffer2_M_2_0_fu_276;
    window_buffer2_M_2_2_fu_2370_p3 <= 
        reg_630 when (ap_reg_ppstg_icmp_reg_3769_pp2_it7(0) = '1') else 
        window_buffer2_M_2_1_fu_280;
    window_buffer_M_0_0_1_fu_2485_p3 <= 
        window_buffer_M_0_0_fu_216 when (ap_reg_ppstg_icmp_reg_3769_pp2_it7(0) = '1') else 
        window_buffer_M_0_0_2_fu_212;
    window_buffer_M_0_1_3_fu_2478_p3 <= 
        window_buffer_M_0_1_fu_220 when (ap_reg_ppstg_icmp_reg_3769_pp2_it7(0) = '1') else 
        window_buffer_M_0_0_fu_216;
    window_buffer_M_0_2_fu_2472_p3 <= 
        return_value_reg_3846 when (ap_reg_ppstg_icmp_reg_3769_pp2_it7(0) = '1') else 
        window_buffer_M_0_1_fu_220;
    window_buffer_M_1_0_1_fu_2465_p3 <= 
        window_buffer_M_1_0_fu_228 when (ap_reg_ppstg_icmp_reg_3769_pp2_it7(0) = '1') else 
        window_buffer_M_1_0_2_fu_224;
    window_buffer_M_1_1_3_fu_2458_p3 <= 
        window_buffer_M_1_1_fu_232 when (ap_reg_ppstg_icmp_reg_3769_pp2_it7(0) = '1') else 
        window_buffer_M_1_0_fu_228;
    window_buffer_M_1_2_fu_2452_p3 <= 
        return_value_1_reg_3851 when (ap_reg_ppstg_icmp_reg_3769_pp2_it7(0) = '1') else 
        window_buffer_M_1_1_fu_232;
    window_buffer_M_2_0_1_fu_2445_p3 <= 
        window_buffer_M_2_0_fu_240 when (ap_reg_ppstg_icmp_reg_3769_pp2_it7(0) = '1') else 
        window_buffer_M_2_0_2_fu_236;
    window_buffer_M_2_1_3_fu_2438_p3 <= 
        window_buffer_M_2_1_fu_244 when (ap_reg_ppstg_icmp_reg_3769_pp2_it7(0) = '1') else 
        window_buffer_M_2_0_fu_240;
    window_buffer_M_2_2_fu_2431_p3 <= 
        reg_625 when (ap_reg_ppstg_icmp_reg_3769_pp2_it7(0) = '1') else 
        window_buffer_M_2_1_fu_244;
end behav;
